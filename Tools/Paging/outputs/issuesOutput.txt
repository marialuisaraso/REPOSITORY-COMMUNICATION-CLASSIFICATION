{'data': {'repository': {'issues': {'nodes': [{'title': 'Why is PHP involved in a roadmap with a year above 2011', 'body': ''}, {'title': 'Add more routes', 'body': 'Take a look at that: https://coggle.it/diagram/Vz9LvW8byvN0I38x'}, {'title': 'Missing dev environment', 'body': 'Nothing about dev env'}, {'title': 'Suggestion: Add HTTP protocol to backend track', 'body': 'Since the HTTP protocol is the foundation for everything we do as backend developers, I think it should be mentioned specifically. '}, {'title': 'Can add the text editors, programming environments etc.', 'body': 'I can help you for updating this context if you want. It can be helpful for juniors like me :)'}, {'title': 'Need project management tools ', 'body': 'Pretty good repo. I have some ideas.\r\n\r\nMaps need for project management tools. Redmine, Jira, Trello etc. \r\n\r\nI think you can split framework for project sizes. Silex and sinatra for small or Symfony/Rails for large environment frameworks. \r\n\r\nYou can add crystal-lang for ruby side. \r\n\r\nSystem management node will be good. Monitoring ( nagios), profiling,  cloud systems ( openstack )...\r\n\r\nTake care...\r\n'}, {'title': 'memcache vs memcached', 'body': "Am I missing something? Isn't there only one memcached?\r\nSeems like there are implementations of memcache clients for PHP with the matching names, but where they are on a digram seems to be not the right place.\r\nI propose to remove `memcache` and only leave `memcached`.\r\nOther possible option is that you've meant *custom in-memory caching implementation*, it which case it's just confusing."}, {'title': 'Add contribution guide', 'body': 'A contribution guide with an explaination on what is the best way to edit and merge the pictures (or contribute in some other way) would be great.'}, {'title': 'What about mobile field? ', 'body': "It's belong to front-end. But why it was not mentioned in this page? ^^"}, {'title': 'What is drawing tool', 'body': 'What is drawing tool'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHODM9Ibg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Debugging tools', 'body': 'I consider debugging tools to be essential to development.\r\n\r\nFor the languages I know:\r\n- xdebug for PHP\r\n- browser dev tools for Frontend JS'}, {'title': 'Missing arrow', 'body': 'In the Backend, the link between `PHP7` and `PSRs` is missing its arrow.'}, {'title': 'Frontend Roadmap - Add iOS / Android', 'body': 'I would be nice to add android and iOS to the roadmap.'}, {'title': 'Just a bunch of notes', 'body': "Hi all, someone sent me this repo requesting comments and I wrote up a long response I thought might be useful to you. It also might not be. Yall are doing your own thing and trying to formulate a plan and that's good, I'd just like to submit this and maybe it will be helpful.\r\n\r\nPlease excuse the ranting tone. It's early in the morning and I've been reading too much political news.\r\n\r\n-------------------\r\n\r\nFirst, I think using the term “map” is problematic since it implies that you can get to or achieve the waypoints. All of these things are more “directions” than destinations.\r\n\r\nNext, I don’t like the idea of splitting up “backend” and “frontend”. \r\n\r\nI think the standard definitions that people use for this stuff are hugely problematic. If you define HTML/CSS/JS as “front end” where does that leave someone who works on the iOS app for let’s say “simple.com”? Are they not a “web developer” even though they are building something that is equivalent to the website? What about someone who is working in a python templating language that spits out html/css? Where do they fall? I can keep coming up with examples.\r\n\r\nFurther, I think that exclusively focusing on one over another can be harmful. In terms of job prospects, you’re going to have a *lot* more problems getting a job at a smaller company if you can’t work the full stack.\r\n\r\nWorse, it is harmful for learning. A humongous part of programing on the web is really internalizing how the web/HTTP/etc works. This is the “in between” stuff that you’re only going to learn by studying the whole process simultaneously.\r\n\r\nPersonally I prefer to talk about things functionally than as tech. “Back-end developer” to indicate how good someone is at understanding system architecture, performance, databases, and security; and “front-end developer” to indicate to what degree someone thinks about human-computer interaction, responsiveness, UI optimization and reusability, browsers, responsiveness, and accessibility. When you formulate definitions this way you start seeing these as two largely orthogonal dimensions of a square, rather than anything mutually exclusive.\r\n\r\nNow about specifics. I’ll just work my way down the chart with random comments.\r\n\r\n* Splitting HTML learning from CSS is weird. I’d say learn them at the same time - there’s basically nothing to HTML oherwise (except forms)\r\n* Javascript _is_ es6, stop drawing a distinction and just read an essay on its history\r\n* Task runners? Gulp? Why? \r\n* Don’t bother with Flux\r\n* React Angular _and_ vue? How many rabbit holes do you want to simultaneously go down? You don’t know angular because you ran through the tutorial. It’s a huge subject\r\n* Don’t bother with Yarn until you need it\r\n* Testing should be its own thing. Specifically TDD. If you learn the tool you won’t do testing and you _definitely_ will not do it to its full potential. You need to learn the philosophy.\r\n* Typescript - whatever, sure, do or do not\r\n* How is “Responsive Web” different from just CSS?\r\n* CSS Framework? Don’t waste your time learning bootstrap. Just learn modern CSS - get comfortable with flexbox, understand the _underlying concepts_ and you’ll be fine. There aren’t all that many that you can’t learn them in a week.\r\n* Preprocessors? Fine, but I feel like LESS is well…less overhead while learning\r\n* Deep dive CSS3..first of, CSS3 has been out forever, it’s just CSS now. Being aware of the fancy stuff is fine and you can look it up as needed. If you just learn the basics you’ll be able to guess pretty well what features CSS has or doesn’t\r\n* SVG is cool, d3 isn’t necessary and isn’t really tied to SVG at all, they’re just often used together but either is often used separately.\r\n* SVG is something you can spend 2 days on, get the basics, and come back to  as needed\r\n* Javascript design patterns. Huh? How do you write your code without designing it? You have to think of that stuff from the outset. Also the Javascript Design Patterns book is bad and I dono’t like it\r\n* Regex is a core programming concept in general, not just JS. Spend a day on it, learn the type of thing that it does, then learn more as needed\r\n\r\nBackend:\r\n* Just looking at this you can feel the cognitive weirdness as it tries to recommend _all_ the backend platforms at once. This is due to this arbitrary “backend/frontend” breakdown, if the terms are to have any meaning they should be defined functionally as the type of thing you do and focus on, not tech.\r\n* Minimizing Java and C# is weird since those are the ones with the greatest demand (at least that I’ve seen)\r\n* How is “Web Server” a separate topic? What does that even mean? \r\n* What does “Restful APIS” mean?\r\n* SOLID, YAGNI, KISS are not something to just read up on at some point. YAGNI and KISS are vague guidance that you can just take as a mantra and repeat to yourself every hour. SOLID is an important thing to study that makes sense only after you’ve gotten comfortable with coding and are looking to reach the next level. Its not something that you want to “just pick up at some point”\r\n* Regular Expressions again! See my previous comments\r\n* Security/Authentication…I guess this really depends on what exactly you mean by learning it. If you learn how the web works (which a _lot_ of people don’t) you will be learning a lot on this front already\r\n* Storage - pick one RDBMS and just go with it. There’s plenty to learn there without jumping all over the place. Don’t pick Oracle...or probably MySql.\r\n* Why the _shit_ does everyone want to focus on MongoDb? Its an oorobooros which is only notable for the fact that it is used which it is only because it is notable.\r\n* GOF Design Patterns - you’ll want to get to that sometime sooner but also it depends on the language you’re using. They were written for Java and not all apply\r\n* Architectural patterns…like what exactly? Learn how?\r\n* “Give DDD a shot” flat out offends me. If that is your attitude _you will fail_. Let’s say you’re making a calendar app and want to “give DDD a shot” what does that even mean you do?\r\n* Also, for the love of all that is holy, if you _are_ doing DDD and reading the big DDD book - there are 2 important concepts; ubiquitous language and bounded contexts. For reasons that Eric Evans has since lamented he put the latter on chapter 17 which nobody ever gets to. Read those chapters.\r\n* Also on DDD. Don’t just think that using Repository pattern means you do DDD. In fact, with modern ORMs, you probably _shouldn’t_ use that pattern.\r\n* Learn different testing techniques. Yes but waaaay before this point"}, {'title': 'Why python only as a leaf?', 'body': 'Python is as important as node or php .\r\n\r\nHope add more roadmap of python .\r\n\r\n____\r\nI am a PHPer, and use python and node as well.  '}, {'title': 'experience share for roadmap development', 'body': "Hi,\r\n\r\nI have do the similar work in two years ago in Chinese. And, I came here to share some suggestions.\r\n\r\nAt the beginning, I build a roadmap like this with Graphviz in [https://github.com/phodal/developer](https://github.com/phodal/developer)\r\n\r\n![Dot Tree](https://raw.githubusercontent.com/phodal/developer/master/images/tree.gif)\r\n\r\nThen, newbie always like to ask books for read. So, I build a book tree to do something. [https://github.com/phodal/booktree](https://github.com/phodal/booktree)\r\n\r\nBut it's still hard to help they.\r\n\r\nSo, I build a skill tree like [https://github.com/352Media/skilltree](https://github.com/352Media/skilltree) with D3.js which is [https://github.com/phodal/sherlock](https://github.com/phodal/sherlock)， demo in here [http://sherlock.phodal.com/](http://sherlock.phodal.com/).\r\n\r\nwhen people hover the skill on roadmap in skill tree, it will show the related resources, books, articles, like this:\r\n\r\n![Sherlock D3.js](https://github.com/phodal/sherlock/raw/gh-pages/sherlock.jpg)\r\n\r\nFinally, the more and more resources add to those projects, like:\r\n \r\n - frontend & backend roadmap: [https://github.com/phodal/awesome-growth](https://github.com/phodal/awesome-growth).  \r\n - daily toolbox : [https://github.com/phodal/toolbox](https://github.com/phodal/toolbox)\r\n - practise project for newbie: [https://github.com/phodal/awesome-practise-project](https://github.com/phodal/awesome-practise-project)\r\n\r\nSo I build a app to do this [https://github.com/phodal/growth](https://github.com/phodal/growth), which you can the demo in  [http://web.growth.ren/](http://web.growth.ren/).\r\n\r\n---\r\n\r\nIt look like a lot of ads 😆 😆 , don't block me."}, {'title': 'Text editors & CLI tools for DevOps', 'body': 'Unless they are taken for granted under "Linux/Unix", I think DevOps should also include CLI based text editors and different CLI tools such as `grep`, `awk`, `sed` and so on.\r\n\r\nPS.\r\nIs (basic) networking and firewalls something that\'s considered not a DevOps task?'}, {'title': 'Add Docker to Backend track', 'body': 'With microservice architectures becoming more and more popular, understanding how to make use of containers with tools like Docker is becoming necessary for the backend development cycle.\r\n\r\nRecruiters love to see it on resumes too.'}, {'title': 'LXC under DevOps Containers', 'body': "More of a curiosity thing really, but I noticed under devops for containers LXC isn't listed. Any reason it isn't? My employer uses them and I'm other others do, and they are also really easy to use."}, {'title': 'Would you consider to create a roadmap for mobile engineer?', 'body': 'As title, but good job!'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHODNR_-w==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'CSS Frameworks', 'body': 'You forgot about Material Design! O>O'}, {'title': 'JavaScript Frameworks', 'body': 'Please add in Front-end, JavaScript Frameworks\r\nExtJS, EmberJS'}, {'title': 'Nginx + php-fpm vs Apache + PHP FastCGI', 'body': "From everything I've researched Apache + PHP FastCGI is MUCH faster than Nginx. Nginx for static content sure, but why not just use a CDN?"}, {'title': 'static type checker', 'body': 'Please add in front-end, static type checker\r\n [Flow](https://flowtype.org/)'}, {'title': 'Front-end section about charts and grids', 'body': ' Not sure, but could be really useful.\r\n\r\nWhen you need to do some chart or grid solution it is quite big challenge to choose and learn\r\nright solution. There is variety of varients.\r\nJust d3 is solution only for some basic things.\r\nAnd datatables is not mention for grid and also is not always the the best one solution.\r\n\r\nSo here is super list of chart solutions\r\nhttps://github.com/zingchart/awesome-charting\r\n\r\nAnd list of grid/table solutions\r\nhttps://github.com/FancyGrid/awesome-grid'}, {'title': 'Add Silex in roadmap with lumen and slim', 'body': "Silex could be in roadmap with lumen and slim.\r\nIt's a good lightweight symfony based framework.\r\n\r\n"}, {'title': 'Suggesting : What about phonegap ?', 'body': 'Hi ! \r\n\r\nMight be a stupid suggestion but what about phonegap/cordova, which could be seen as front dev (I personnaly use that with Angular or React for exemple), and that will extent some research over NodeJS (for automatisation, build etc..) and little knowledge of what is an APK for exemple and how to sign it/ship it.'}, {'title': 'DevOps part lack of precision', 'body': "Hello there, I'm picky but the DevOps part fails at some point.\r\n\r\n1. Cloud > ~Google App Engine~ Google Cloud Platform\r\n1. We probably want to seperate PaaS (Heroku...) and IaaS (AWS, Azure GCP)\r\n1. The Monitoring part lack of Grafana, Kibana and all tools gravitating around ELK stuff\r\n1. By containers you mean only the runtime, which is only one part\r\n1. We can easily add strace, dtrace, systemtap... for system calls debugging in command tools\r\n\r\nThe list can be long and I don't know how to handle that, can we define a method of suggestion, by categories or something ?"}, {'title': 'CSS Methodologies', 'body': 'http://sixrevisions.com/css/css-methodologies/'}, {'title': 'Suggestion: publish balsamic JSON file', 'body': 'If you want to have  a better version control try to export and publish the balsamic JSON file to change it by the community.'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHODNkaNA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Software licences', 'body': 'I think every developer should have an idea about software licenses.\r\nThis subject should be added to the beginning of the list.'}, {'title': 'Add Race Condition-related Topics Backend', 'body': "Along with the stacks, developers should also understand about theoritical data processing for distributed system, like thread safety, locking, and how to deal with race condition. This is important since nowdays we deal with multiple servers. But i don't know where to include these topics since this does not belong to any stack in the infographic."}, {'title': 'Social skills roadmap missing', 'body': 'Not a recurrent issue but generally can reproduce this bug following these steps:\r\n\r\n* Introduce to the team\r\n* Start a new project\r\n* Suggest different tech stacks\r\n\r\nExpected result:\r\n* List of pros and cons of different tech architectures, deeper discussion on what fit best\r\n\r\nActual result:\r\n* "X is total crap, we\'ll be going to use Y"\r\nwhere X and Y are usually random variables.\r\n\r\nAfter that it\'s hard to proceed or the application gets unstable, can\'t debug it either as it crashes way before I launch any debugger.\r\n\r\nDependencies seems to be all in place and I don\'t get any error usually beforehand.\r\nIs there any workaround for it at the moment?'}, {'title': 'FE: Testing and Patterns', 'body': "Shouldn't frontend developers know about testing and design patterns as well? \r\n\r\n"}, {'title': 'PHP template engines', 'body': "Yeah, I know many people dislike PHP, but if somebody decides to learn it, shouldn't they at least know about template engines like _blade_, _smarty_, _twig_, etc.?"}, {'title': 'Thanks', 'body': 'I did not know how else to contact you, so I posted here. First of all, thank you so much for putting this together. Second, is there a way to add technologies needed for developing with and for Social Networking sites regardless of doing this for the Web or Mobile platform; I realize this is more work, but mobile uses a lot of the web technologies and it would be great to know what it takes to be effective in the domain. '}, {'title': 'Npm Scripts under Task Runners', 'body': 'I would recommend npm scripts instead of gulp or grunt.\r\n\r\nhttps://ponyfoo.com/articles/choose-grunt-gulp-or-npm\r\nhttps://medium.freecodecamp.com/why-i-left-gulp-and-grunt-for-npm-scripts-3d6853dd22b8#.tdu6qfzdu\r\nhttps://css-tricks.com/why-npm-scripts/'}, {'title': 'Tool used to make the flow chart?', 'body': 'Not an issue but rather a question. Can you please name the tool you used to draw the flow charts in the README file?'}, {'title': 'Lets Convert this to Mark Down - Charts', 'body': 'An Image is hard to edit for programmers. \r\nLets convert this to mark down charts so that. anybody can fork it and edit it a per their convenience. '}, {'title': 'JSPM', 'body': 'You could add JSPM as a possibility under Package Manager'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHODN_MLQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Java Web can be expanded', 'body': '**Tools** \r\n- Maven\r\n- Gradle\r\n\r\n**Frameworks**\r\n- Spring MVC\r\n- JSF\r\n- Grails\r\n- Struts\r\n- Hibernate\r\n\r\n**Testing**\r\n- JTest\r\n- JUnit\r\n- TestNG\r\n\r\n**IDE**\r\n- Netbeans\r\n- Eclipse\r\n- IntelliJ IDEA\r\n\r\nAbove are technologies and tools which I am aware of..There may be more tools and technologies.'}, {'title': 'Help wanted ', 'body': 'Categories'}, {'title': 'PHP', 'body': "Don't really know why Laravel is more suggested than symfony, symfony should always be on 1st place. Then laravel. Also i really don't like missing phalcon, it's a few times faster than laravel/symfony so it should be there also to mention if someone needs performance."}, {'title': 'Sponsorship', 'body': 'Kamran,\r\n\r\nWe would like to sponsor your efforts.\r\nWe wrote you on email but maybe you did not notice.\r\nCould you please connect with us over support@fancygrid.com ?'}, {'title': "Put 'start building' at the top!", 'body': "nice one, but the best way to become a developer is to start by building stuff, even if it's rubbish. If you put 'start building' at the end of all your maps, people may never even lay down a line of code :)"}, {'title': 'java ee', 'body': '(servlets,hibrenate...) deserve to be listed in the map\r\n'}, {'title': 'Missing RSCSS', 'body': 'In the Frontend, at `methodologies` branch are missing the [rscss](http://rscss.io/) methodology.'}, {'title': 'Functional testing branch', 'body': 'I would suggest a branch to "Functional testing".\r\n\r\nFrontend: \r\n- Chimp;\r\n- PhantomJS;\r\n- Nightwatch.js;\r\n- Zombie.js\r\n\r\nBackend: \r\n- Behat;\r\n- Cucumber;\r\n- Behave;\r\n\r\nThere are many other tools that have the same purpose that can be included in this list.\r\n\r\n\r\n'}, {'title': "Let's create a roadmap for game developers", 'body': 'I think its will be interesting :) '}, {'title': 'how to convert the json file to picture?', 'body': 'Hi , I found some json files in the dir project-files, I guess you use this json files to generate pictures?\r\nCould you tell me how to generate pictures? Using Any tool?'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHODOlXXQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "Let's create a roadmap for mobile developers ( iOS, Android )", 'body': ''}, {'title': "Let's create a roadmap for pentesters!", 'body': ''}, {'title': 'Add Zabbix to DevOps > Monitoring and Alerting', 'body': 'I think zabbix is great tool for OS and hardware level monitoring and might be present here'}, {'title': 'Dev Environment in Backend Roadmap', 'body': 'In Backend Roadmap, I think `Web Server` and `Docker` should move in to `Dev Environment`'}, {'title': 'Please add CMS Bitrix', 'body': 'https://dev.1c-bitrix.ru/learning/course/?COURSE_ID=43&CHAPTER_ID=04607&LESSON_PATH=3913.4607\r\n\r\nBitrix Framework is a PHP-based platform for developing Web applications. On this platform, 1C-Bitrix created two popular products: "1C-Bitrix: Site Management" and "1C-Bitrix: Corporate Portal."\r\n\r\nhttps://dev.1c-bitrix.ru/learning/course/?COURSE_ID=43&CHAPTER_ID=03635'}, {'title': 'Yii2 ', 'body': 'Add yii2 in php framework'}, {'title': "Let's create a roadmap for Data Engineer!", 'body': ''}, {'title': 'Lets create a roadmap for IT security', 'body': 'We will like to include the technologies and entry point, including some cryptography courses '}, {'title': 'Add Functional Languages to back-end.', 'body': 'Functional languages are designed for building scalable and maintable application.\r\nFunctional languages should be mentioned and and then classified into 4 major languages **Elixir , Scala , Clojure , haskell .**'}, {'title': 'Lets make one for Data Science! ', 'body': 'I feel like this is relevant enough to be its own thing. To some extent, it could be a function of backend engineering but a lot of data science does involve plotting as well. '}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHODO86ww==', 'hasNextPage': True}}}}}