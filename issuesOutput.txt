{'data': {'repository': {'issues': {'nodes': [{'title': '[clojure] Block comment is not colored any different', 'body': 'Have a clojure file and toggle a block comment somewhere. The code after the block comment is not colored as a comment at all.\n'}, {'title': 'Bad coloring in Kimbie dark theme for some languages', 'body': 'When using Kimbie Dark with C#, the comments and sourcecode have the same color:\n\n![image](https://cloud.githubusercontent.com/assets/900690/11176196/e9a8fb78-8c3a-11e5-9e9e-38d751324cee.png)\n'}, {'title': 'C#: Line/Block comment does not work', 'body': 'I cannot set a line or block comment in C# files anymore.\n'}, {'title': 'CSS: toggle line comment is not preserving', 'body': 'Have a CSS block like this:\n\n``` css\n.monaco-workbench > .part > .status {\n    display: none; /* Parts have to opt in to show title area */\n}\n```\n\nPut the cursor to the body of the declaration and toggle line comment twice, you end up with this:\n\n``` css\n.monaco-workbench > .part > .status {\n    /*display: none;  Parts have to opt in to show title area */\n}\n```\n'}, {'title': '[f#] Block comment not colored as comment', 'body': "Using the block comment in F# adds the following around 'samplesLabel':\n\n``` F#\nlet mutable (*samplesLabel*) : System.Windows.Forms.Label = null\n```\n\nThis is however not colored as a comment in VS Code.\n"}, {'title': 'HTML: Not auto-closing quotes when typing attributes', 'body': 'I would assume that typing the opening quote for an attribute puts the closing quote automatically, but this is currently not happening.\n'}, {'title': 'Python: Block comment is three single quotes and not two', 'body': 'When using the block comment feature, only 2 single quotes are put in, instead of three.\n'}, {'title': 'PHP: extension console.logs when completing function', 'body': 'Complete a function and find something in the log:\n\n[Plugin Host] provideSignatureHelp\nworkbench.main.js:1675 [Plugin Host] Object {signatures: Array[1], activeSignature: 0, activeParameter: 0}\n'}, {'title': '[ruby] the mode failed to tokenize the input', 'body': 'Take the ruby file from https://github.com/Homebrew/homebrew/blob/master/Library/Homebrew/os/mac/xcode.rb and paste it into VS Code, you get an exception: the mode failed to tokenize the input\n'}, {'title': '[vb] Block comment is not colored', 'body': 'While line comments are nicely colored, block comments are not.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBvqIfQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Development Environment Improvements (code.bat/code.sh)', 'body': 'There is some work remaining to make the development environment nicer.\n- [x] Do not create the Electron-Build folder outside of the source repository\n- [x] Warn the user when node_modules are missing and a npm install is required\n- [x] Warn the user when he runs npm install and not scripts/npm\n- [x] Warn the user when out folder is missing and gulp watch is required\n'}, {'title': '[xml] Element and attribute in light and dark theme use same colors', 'body': '![image](https://cloud.githubusercontent.com/assets/900690/11178547/cc7e3a50-8c4d-11e5-8e58-fdaeee133c7f.png)\n'}, {'title': 'TypeScript: Error: Promise did not implement oncancel(…)', 'body': 'When I open "crashReporter.ts" (in electron-browser) with VS Code, I get some spam on the console:\n\nWARNING: Promise with no error callback:undefined\nworkbench.main.js:1554 Error: Promise did not implement oncancel(…)\n'}, {'title': 'https://twitter.com/code uses a Visual Studio icon which is confusing', 'body': 'https://twitter.com/code should use a VSCode icon, not the purple/white visual studio icon. This way users can easly confuse the two.\n'}, {'title': "Bundled files don't have a top copyright statement", 'body': "Latest Build, open workbench.main.js.\n\nObserve: the file doesn't have a top copyright statement. It starts with some code. Also observe that at the end of the file there are a lot of MS copyright statements. Seems that bundling doesn't treat them well.\n"}, {'title': 'No blue icon on linux', 'body': 'I see the blue icon with 0.9 builds, but not with 0.10.1 builds.\nOnly a generic tool icon is shown.\n'}, {'title': 'Send a smile > "Submit a bug" should open Github repo', 'body': ''}, {'title': 'Variables in local window stop stop updating their value when stepping through code quickly', 'body': "In a node express app I have the following loop:\n\nvar msg = 'hello world';\nvar i = 0;\nwhile (i < 100) {\n  msg = msg + i.toString();\n  i++;\n}\n\nI set up the local and watch windows in the debugger so that I can see the msg variable in both.\n\nWhen stepping through the loop, if I press F10 very quickly, eventually the msg variable in the locals window will stop updating. See the screenshot below\n![snip_20151116130725](https://cloud.githubusercontent.com/assets/1704059/11182475/068041ca-8c63-11e5-9e27-842b4943cfbe.png)\n\nWhen stepping through quickly, I sometimes see a message in the watch window that says 'Exception while processing request'\n\nThis is on 0.10.0\n"}, {'title': 'Extension uninstall leaves empty directories behind', 'body': 'I install eslint and jshint and uninstalled them again. I still had two directories in ~/.vscode/extensions for dbaeumer.jshint and dbaeumer.eslint with no package.json. On the next start of VSCode it complained about missing package.json files. I needed to delete the folders manually\n'}, {'title': 'Program appears to continue executing after pressing stop in the debugger', 'body': 'In a simple node app, I step through a loop in the debugger. Before exiting the loop, I press the stop button\n![snip_20151116130725](https://cloud.githubusercontent.com/assets/1704059/11185295/f6af8bbe-8c73-11e5-9a4a-f30d84c14b07.png)\nI expect the program to stop executing right at that point but it appears to continue executing due to the fact that the console.log statement is executed (highlighted below) and the value of the string being output looks like the loop continued to execute even after pressing stop:\n![snip_20151116150729](https://cloud.githubusercontent.com/assets/1704059/11185303/ff729908-8c73-11e5-8446-f88aa3559d02.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBvt-6g==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'build errors: vscode.d.ts is not found', 'body': "when running build I am seeing +400 errors, all of them related to vscode.d.ts.\n\n```\n*** Error: vscode/src/vs/workbench/api/common/pluginHostTypes.ts(434,19): Cannot find namespace 'vscode'.\n*** Error: vscode/src/vs/workbench/api/common/pluginHostTypes.ts(437,24): Cannot find namespace 'vscode'.\n*** Error: vscode/src/vs/workbench/api/common/pluginHostTypes.ts(437,46): Cannot find namespace 'vscode'.\n\n....\n\n*** Error: vscode/extensions/declares.d.ts(59,51): Cannot find name 'Thenable'.\n*** Error: vscode/extensions/vscode-api-tests/src/window.test.ts(9,33): Cannot find module 'vscode'.\n*** Finished with 408 errors.\n```\n\n...\n"}, {'title': 'Javascript - regular expressions are not colored - Javascript mode instantiated twice', 'body': 'New **javascript** file, use the following code snippet:\n\n`var booleanRegex = /^true|false$/i;`\n`var stringRegex = /^([\'"]).*\\1$/;`\n\nNotice the regex value **does not get colored**.\nRegex coloring works for Typescript.\n'}, {'title': '[extension] resolving a completion items is call twice for the first selected item in the list', 'body': ''}, {'title': '[Git] weird indicator for renamed file', 'body': '(I am on Mac OS X, Git 2.4.0)\n- have a checked in README.md with some contents\n- take the contents of the file and move it to a new file CONTRIBUTING.md\n- change the text in README.md to something else\n- stage all\n\n![image](https://cloud.githubusercontent.com/assets/900690/11213365/e6561f9e-8d3b-11e5-9bbc-453bfe70d904.png)\n'}, {'title': 'vscode "--extensionHomePath" option does not work when used with the vscode proxy', 'body': 'I\'m developing an extension and want to test its installation from the gallery. After installing it from the gallery, I want to continue development in the VSCode extension host. When launching the extension through F5, I see the annoying extension override warning in the extension host window.\nTo prevent that the ~/.vscode/extensions path is used in that case, I tried to use the " --extensionHomePath" in the extensionHost launch config and specify an empty directory.\nBut it seems that the "--extensionHomePath" isn\'t honoured in this case (probably because vscode is a proxy that connects to an already running vscode).\n\nBTW, it would be cool if "--extensionHomePath" would allow an empty path.\n'}, {'title': 'activeTextEditor not correct while the extension is activated', 'body': '- create the following extension (example for our doc)\n- run the extension. In a workspace create a md file, open it and check that you get the counter in the status bar\n- now reload the workspace while the md file is open. Observer that the md file opens, but the counter is not shown\n\nThe extension activates on "onLanguage:markdown".\nWhen it starts, it prints the current active mode: vs.editor.modes.nullMode\nIt registers for active editor change event, but doesn\'t get any events that tells it that a markdown file has opened.\n\n``` typescript\nimport {window, commands, Disposable, ExtensionContext, StatusBarAlignment, StatusBarItem, TextDocument} from \'vscode\';\n\n// This method is called when your extension is activated. Activation is\n// controlled by the activation events defined in package.json.\nexport function activate(context: ExtensionContext) {\n\n    // Use the console to output diagnostic information (console.log) and errors (console.error).\n    // This line of code will only be executed once when your extension is activated.\n    console.log(\'Congratulations, your extension "WordCount" is now active!\');\n\n    // create a new word counter\n    let wordCounter = new WordCounter();\n    let controller = new WordCounterController(wordCounter);\n\n    // Add to a list of disposables which are disposed when this extension is deactivated.\n    context.subscriptions.push(controller);\n    context.subscriptions.push(wordCounter);\n}\n\nclass WordCounter {\n\n    private _statusBarItem: StatusBarItem;\n\n    public updateWordCount() {\n\n        // Create as needed \n        if (!this._statusBarItem) { \n            this._statusBarItem = window.createStatusBarItem(StatusBarAlignment.Left); \n        }  \n\n        // Get the current text editor \n        let editor = window.activeTextEditor; \n        if (!editor) { \n            this._statusBarItem.hide(); \n            return; \n        } \n\n         let doc = editor.document; \n\n        console.log(\'Current doc language \' + doc.languageId);\n\n        // Only update status if an MarkDown file \n        if (doc.languageId === "markdown") { \n            let wordCount = this._getWordCount(doc); \n\n            // Update the status bar \n            this._statusBarItem.text = wordCount !== 1 ? `${wordCount} Words` : \'1 Word\'; \n            this._statusBarItem.show(); \n        } else { \n            this._statusBarItem.hide(); \n        } \n    } \n\n    public _getWordCount(doc: TextDocument): number { \n\n        let docContent = doc.getText(); \n\n        // Parse out unwanted whitespace so the split is accurate \n        docContent = docContent.replace(/(< ([^>]+)<)/g, \'\').replace(/\\s+/g, \' \'); \n        docContent = docContent.replace(/^\\s\\s*/, \'\').replace(/\\s\\s*$/, \'\'); \n        let wordCount = 0; \n        if (docContent != "") { \n            wordCount = docContent.split(" ").length; \n        } \n\n        return wordCount; \n    } \n\n    dispose() {\n        this._statusBarItem.dispose();\n    }\n}\n\nclass WordCounterController {\n\n    private _wordCounter: WordCounter;\n    private _disposable: Disposable;\n\n    constructor(wordCounter: WordCounter) {\n        this._wordCounter = wordCounter;\n        this._wordCounter.updateWordCount();\n\n        // subscribe to selection change and editor activation events\n        let subscriptions: Disposable[] = [];\n        window.onDidChangeActiveTextEditor(this._onEvent, this, subscriptions);\n\n        // update the counter for the current file\n        this._wordCounter.updateWordCount();        \n\n        // create a combined disposable from both event subscriptions\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable.dispose();\n    }\n\n    private _onEvent() {\n        console.log(\'active editor changed \');\n        this._wordCounter.updateWordCount();\n    }\n}\n```\n\n``` json\n{\n    "name": "WordCount",\n    "description": "Count the words",\n    "version": "0.0.1",\n    "engines": {\n        "vscode": "^0.10.1"\n    },\n    "categories": [\n        "Other"\n    ],\n    "activationEvents": [\n        "onLanguage:markdown"\n    ],\n    "main": "./out/src/extension",\n    "scripts": {\n        "vscode:prepublish": "node ./node_modules/vscode/bin/compile",\n        "compile": "node ./node_modules/vscode/bin/compile -watch -p ./"\n    },\n    "devDependencies": {\n        "typescript": "^1.6.2",\n        "vscode": "0.10.x"\n    }\n}\n```\n'}, {'title': 'broken selection feedback when selecting bold text in markdown files', 'body': "- open a markdown file with bold markup, e.g.\n  abc **text** xyz\n- try to select the line with the mouse starting at 'abc' and slowly extending to 'xyz'\n  Observe: if you reach the second '**', the selection of '**text**' disappears. In the end you have two disconnected selection ranges.\n- in addition I see lots of flashing selection changes while dragging the mouse \n"}, {'title': 'Expected treatment of threads in debug viewlet UI?', 'body': "I’m seeing some odd behavior around how threads are being rendered in the Code debugger for the Go debugger extension.  But I’m also not certain what I should be expecting to see, as I don’t think I’ve seen any examples of debuggers which show thread information in Code.\n\nThe Go debugger returns a list of threads from `DebugSession#threadsRequest`, but these are not displayed anywhere.  However, it seems that if I’ve ever hit a breakpoint on a different thread before, then later breakpoints will cause a second root node to appear in the Call Stack window showing the stacks associated with the 2 threads I've hit breakpoints on at some point (out of the 10 or so threads I’ve reported as existing).\n\nOn the thread that is not the active thread, the call stack displayed appears to be the call stack from the previous breakpoint I was at, not the active call stack on that thread at the current point.  And in fact, in both cases, my `DebugSession#stackTraceRequest` implementation is only being called once (for the thread the breakpoint was hit on), not for any of the other threads I reported.\n\nAfter hitting first breakpoint: \n![screen shot 2015-11-17 at 10 23 37 pm](https://cloud.githubusercontent.com/assets/223467/11234157/f938e69e-8d79-11e5-8096-8cdf907aa2c1.png)\nAfter hitting second breakpoint:\n![screen shot 2015-11-17 at 10 25 09 pm](https://cloud.githubusercontent.com/assets/223467/11234171/1b38f888-8d7a-11e5-91e1-197af530e106.png)\n"}, {'title': 'Update vscode extensions to package.json schema', 'body': "Remove 'updateChannels'\n"}, {'title': 'Document symbols are duplicated', 'body': "When adding a 2nd document symbol provider, let's say for typescript, all entries are duplicated. When adding a 3rd, they are triplicated, etc...\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwJozw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Wakatime plugin', 'body': "Oh, how I would love to have a [WakaTime](https://wakatime.com/) plugin for Visual Studio Code! Don't know if that should have an issue here, as the code'll be elsewhere. But I'll close it if I manage to get it done.\n\nBTW: Great that you opensourced VS Code! I just saw Erich Gamma open source it on Connect(). Amazing, he's the same guy I read the Design Patterns book from during my studies right :P.\n"}, {'title': 'Disabling telemetry before first run does not work', 'body': 'If I edit `product.json` as recommended in the [instructions for disabling telemetry on OS X](https://code.visualstudio.com/Docs/supporting/FAQ#_how-to-disable-telemetry-reporting) before running  VS Code for the first time, I get the following error message upon opening it:\n\n<img width="420" alt="monosnap rpzk7" src="https://cloud.githubusercontent.com/assets/524783/11246186/83c9d7a2-8e0e-11e5-8123-37ec637a2793.png">\n\nIf I download VS Code, run it once, quit it, and _then_ edit `product.json`, it works fine.\n\nThis is on OS X Yosemite 10.10.5.\n'}, {'title': 'Commenting using ctrl+k,ctrl+c does not work for JSX files', 'body': 'Block commenting using ctrl+k,ctrl+c does not work for JavaScript React JSX files.\n'}, {'title': 'Running Code should open a new instance, not activate a currently opened one', 'body': "Ubuntu 12.04, vscode 0.10.1\n\nCurrently when you run `Code` if there is an instances already running (or shift clicking the app icon in Windows/Ubuntu) it will activate the currently opened window. This should open a new instance, the same goes for opening a new instance of `Code` with a folder as an argument when an instance is already open.\n\nIt's a very common use case for many developers to have multiple editors with the same folder open.\n\n**Repro:**\n1. `Code` (open instance of vscode)\n2. `Code`\n\n**Expected:**\nA new instance of vscode is opened\n\n**Actual:**\nThe current instance of vscode is activated\n"}, {'title': 'Crash when opening Code via the command line', 'body': 'Ubuntu 12.04, vscode 0.10.1\n\nNote that I have file symlinks setup for these config files which could having something to do with this crash:\n- `~/.config/Code/User/keybindings.json`\n- `~/.config/Code/User/settings.json`\n\n**Repro:**\n1. Open terminal\n2. `Code &`\n3. Open another terminal (at `~`)\n4. `Code . &`\n\n**Expected:**\nvscode opens successfully\n\n**Actual:**\nCrash:\n\n```\nA JavaScript error occurred in the main process\n\nUncaught Exception:\nError: watch ENOSPC\n    at exports._errnoException (util.js:837:11)\n    at FSWatcher.start (fs.js:1247:11)\n    at Object.fs.watch (fs.js:1273:11)\n    at e.registerWatchers (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/workbench/electron-main/main.js:7:3462)\n    at new e (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/workbench/electron-main/main.js:7:3207)\n    at Object.<anonymous> (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/workbench/electron-main/main.js:7:4907)\n    at e._invokeFactory (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/loader.js:5:13773)\n    at e._complete (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/loader.js:5:14012)\n    at e.resolveDependency (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/loader.js:5:15066)\n    at e._onModuleComplete (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/loader.js:5:21369)\n```\n'}, {'title': 'Fix add selection above and add selection below hotkey on Ubuntu', 'body': "I'm used to `alt+shift+up` and `alt+shift+down` expanding the selection above and below the current anchor, as far as I can see this is not implemented in core or an extension.\n\nEdit: This is actually implemented and working fine, the hotkey ctrl+alt+up/down just conflicts with the Ubuntu OS hotkey to change workspace.\n"}, {'title': "Interpolation strings don't have colouring", 'body': "After the update, interpolation strings in a plain `.js` file don't get highlighted anymore. Previous behaviour highlighted plain text, the `$` symbol and the interpolation braces. Now everything between _``_ has no colouring at all.\n\n```\nfunction sayHello(customer)\n{\n    console.log(`Hello ${customer}`);\n}\n```\n\n![nocolours](https://cloud.githubusercontent.com/assets/2777107/11246534/59e31da4-8e18-11e5-883a-80d6fb8ff34b.PNG)\n"}, {'title': 'It should be possible to include paths in search in Go to file dialog', 'body': "**Repro:**\n1. `mkdir -p foo/bar`\n2. `echo 'test' > foo/bar/test`\n3. `Code .`\n4. `Ctrl+P` to open Go to file\n5. Type `foo/bar/test`\n\n**Expected:**\nThe test file is the best match\n\n**Actual:**\nNo matches found\n"}, {'title': 'ES6 jsconfig.json error', 'body': 'I am incorrectly getting the following error, **"This can only be used with ES6. Make sure to have a jsconfig.json-file which sets the target to ES6"**.\n\nFurthermore, I think I may have stumbled upon a weird case where if the start of the file name is "temp" as in "temp.js", "temporary.js", or "temp123.js" it will cause this error.\n\nTo reproduce:\nCreate a file called temp.js with some ES6 code, such as:\n\n```\nlet x = 10\n```\n\nThe above error is now showing. To fix it, create the jsconfig.json file which sets the target to ES6:\n\n```\n{\n    "compilerOptions": {\n        "target": "ES6"\n    }\n}\n```\n\nThe error is still showing, now incorrectly.\n\nIf I rename "temp.js" to "test.js" (or anything that doesn\'t start with \'temp\') the error goes away. Or, if I create a files array in jsconfig.json which lists "temp.js", the error goes away:\n\n```\n{\n    "compilerOptions": {\n        "target": "ES6"\n    },\n    "files": [\n        "temp.js"\n    ]\n}\n```\n\nI don\'t want to have to do this for every file in my project.\n\nI\'m running on Windows 7, 64-bit.\n\nThanks\n'}, {'title': 'Searching large projects is too slow', 'body': 'Ubuntu 12.04, vscode 0.10.1\n\nI have found Go to file\'s indexing against a full Chromium workspace to be very slow. It took ~40 seconds to find "Tab.java" whereas a simple `find` command took less than a second:\n\n```\n$ time find . -name "Tab.java"\n./chrome/android/java/src/org/chromium/chrome/browser/tab/Tab.java\n\nreal    0m0.559s\nuser    0m0.268s\nsys 0m0.284s\n```\n\nNote that the workspace is on an SSD.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwLOpw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Middle clicking a working file in the working file list should close it and remove it from working files', 'body': "Ubuntu 12.04, vscode 0.10.1\n\nSeems like an easier/intuitive shortcut instead of trying to hit the tiny `x` button's hitbox.\n\n**Repro:**\n1. Open vscode\n2. Open a folder\n3. Open and edit a file\n4. Middle click the file in working files\n\n**Expected:**\nThe file should be closed and removed from working files (with are you sure/save dialog)\n\n**Actual:**\nNothing\n"}, {'title': "Git integration doesn't work if the open folder in a sub-folder of a git repository", 'body': "Ubuntu 12.04, vscode 0.10.1\n\nThe main reason I want this is to get around slow go to file indexing https://github.com/Microsoft/vscode/issues/55 by opening a sub-directory in Chromium so that indexing it doesn't take very long. Traversing the file path upwards to the root directory should be a fairly quick to perform action.\n\n**Repro:**\n1. `mkdir -p foo/bar`\n3. `cd foo`\n4. `git init`\n5. `Code bar`\n6. Open git integration tab\n\n**Expected:**\nGit integration realises that `bar` is part of the repo\n\n**Actual:**\nGit integration disabled\n"}, {'title': 'Provide API to open a new folder', 'body': 'This is essential to creating a project manager extension, it would be best if there was the option to open in a new instance or an existing instance of code.\n'}, {'title': 'Cannot attach debugger to a node.js application running inside a Docker container', 'body': 'I\'m trying to attach the Visual Studio Code debugger to a node.js app that is running inside a Docker container.\n\nThe app starts like:\n\n``` sh\nnode --debug-brk app.js\n```\n\nMy `docker-compose.yml` exposes the port for attaching:\n\n``` yml\napp:\n  build: .\n  working_dir: /code\n  volumes:\n    - .:/code\n  command: npm run debug\n  ports:\n    - "3004:3000"\n    - "5858:5858"\n```\n\n`launch.json` is pretty simple:\n\n``` json\n{\n    "version": "0.2.0",\n    "configurations": [\n        {\n            "name": "Docker",\n            "type": "node",\n            "request": "attach",\n            "port": 5858\n        }\n    ]\n}\n```\n\nNow, when I start the application and attach the debugger this will correctly connect (I can see the values flashing in the debugger UI already), but then it will stop, telling me the following:\n\n> Error opening \'app.js\' (File not found: /code/app.js).\n\nIs there any way to fix this path offset? Should one handle this scenario completely different?\n'}, {'title': 'Menu license links to non Open Source license', 'body': "I've just downloaded it:\n\n```\nVersion 0.10.1\nCommit df352367df2efcfa9d602d471e4e2f42140a0f05\nDate 2015-11-17T15:21:23.766Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\n```\n\nThe license link points to _non Open Source_ license:\nhttps://code.visualstudio.com/license#vscode\n\nFor example:\n\n```\n[...] users cannot opt out of data collection [...]\nYou may not\n* work around any technical limitations in the software;\n```\n"}, {'title': 'Go to definition and navigate back puts cursor in wrong spot', 'body': 'Use Go To Definition (F12) on a function call to jump to its definition.  Then immediately use "Back" (Ctrl-minus).  Your cursor will not be back to where it was when you hit F12.  Sometimes it\'s just off a character, other times it\'s several lines away.\n\nIt seems to be more consistently reproducible when jumping between files and jumping to a file that\'s not already in the "Working Files" area.  Even jumping within a file by repeatedly doing F12, Ctrl-minus will eventually jump to the wrong spot.\n\nThis was happening while using the Go plugin with v0.10.1 on Mac OS X 10.10.5\n'}, {'title': 'File Search got stuck with a great number of files', 'body': 'File search (CTRL + E) got stuck with a great number of files (around 60k files on 5k folders) when searching for a file by its name. It took too long to find the file and sometimes the search bar suddenly disappeared.\n'}, {'title': 'Rounded selection seems broken due to current word highlight', 'body': "editor.roundedSelection is broken\n- If our selection doesn't span multiple lines, the selection is still squared.\n\n![snip_20151118224023](https://cloud.githubusercontent.com/assets/10473142/11248132/85ecf492-8e45-11e5-9faa-45626737db89.png)\n![snip_20151118224059](https://cloud.githubusercontent.com/assets/10473142/11248133/88d891a2-8e45-11e5-98ab-fb87d1278a19.png)\n"}, {'title': 'We need translation support', 'body': 'Hi,\n\n@jrieken @chrisdias \n\nWe need translation support.\n\nBtw, I can help with French & German.\n\nThanks,\nHLFH\n'}, {'title': 'Git conflict highlighting can get messed up easily', 'body': 'Ubuntu 12.04, vscode 0.10.1\n\nDeleting and undoing the line doubles the highlight: (stays after closing and reopening the file)\n\n![highlight1](https://cloud.githubusercontent.com/assets/2193314/11248144/728d1290-8dd4-11e5-843d-b1207570c8e0.png)\n\nDeleting from the end of the line above the `=======` to the end of the line starting with `>>>>>>>`:\n\n![highlight3](https://cloud.githubusercontent.com/assets/2193314/11248233/e578f95e-8dd4-11e5-92a9-603361d90e59.png)\n\nUndoing the above results in this:\n\n![highlight2](https://cloud.githubusercontent.com/assets/2193314/11248196/ad1667fe-8dd4-11e5-989b-0fe74bb599d1.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwL4aA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Electron-Build has wrong filename for the .exe', 'body': 'When I run `scripts/code`, I get the following output:\n\n```\nC:\\Users\\Owner\\Documents\\vscode>scripts\\code\n[11:17:09] Using gulpfile ~\\Documents\\vscode\\gulpfile.js\n[11:17:09] Starting \'electron\'...\n[11:17:09] Finished \'electron\' after 459 μs\n\'..\\Electron-Build\\Code.exe\' is not recognized as an internal or external command,\noperable program or batch file.\n```\n\nLooking in the Electron-Build directory, there\'s no executable named `Code.exe`, but there is one named `Code [OSS Build].exe`. Is this an oversight from open sourcing the application?\n\nEdit: Running `"..\\Electron-Build\\Code [OSS Build].exe" .` from the vscode checkout works, so it\'s not a blocker, just a stumbling block.\n'}, {'title': 'Git: Support git history in VSCode', 'body': 'It would be awesome to be able to squash commits right from the UI too\n'}, {'title': 'Proxy support for extension gallery', 'body': "Whenever I try to install any extension, using _ext install_, I get a **connect ETIMEDOUT 191.238.172.191:443** error.\n\nTrying to navigate to **https://191.238.172.191** in the browser produces a warning regarding the certificate being valid only for ***.market.visualstudio.com**, but I'm allowed to proceed.\n\nShouldn't VSCode try to connect to the name instead of the IP?\n\nI'm behind a proxy, VSCode updates just fine behind it, and also lists the available extensions. The firewall here logs the invalid certificate but allows the connection to proceed. Doesn't look like a problem in my end...\n\n**OS:** Windows 7\n**VSCode:** 0.10.1\n"}, {'title': '[xml] provide a formatter', 'body': 'before the update I could use alt+shift+f to code format an xml file. After the update this no longer works (using windows version 0.10.1)\n'}, {'title': 'add support for TFVC in on-premise TFS resp. Visual Studio Team Services', 'body': 'both TFS 2015 and VSO support REST API to access TFVC besides GIT and therefore it would be possible to add basic support for TFVC.\n'}, {'title': 'Vim modal editing', 'body': 'Hi, I wanted to ask, if anyone is already working on a plugin for vim like modal editing and is looking for some help?\n'}, {'title': 'Allow overriding hardcoded jsconfig/tsconfig defaults', 'body': 'I\'m writing pretty much all of my projects using ES6.\nSo if I want to use Code, I need to add `jsconfig.json` file that contains following snippet to every project I work on:\n\n```\n{\n  "compilerOptions": {\n    "target": "es6"\n  }\n}\n```\n\nDoing this over and over again is annoying to say the least.\n\nI had a quick look at the code and from what I\'d grasped the current defaults are hardcoded.\nCan we instead have a global default `jsonfig.json` in user folder (e.g. next to user config) that\'ll override hardcoded defaults if present? \nOr perhaps part of user config can allow overriding values in it (e.g. `javascript.compilerOptions.target`)?\n'}, {'title': 'Allow to theme UI components of the workbench', 'body': 'Currently I cannot change the style of the editor "frame", for example, sidebar color, padding or font. This makes some themes (like Solarized) looks inconsistent with the editor UI.\n'}, {'title': 'Simplify shell command for Linux and OS X', 'body': 'Is there a shell command out of the box to launch VSCode?\n\nAtom has `atom`\nSublime has `subl`\n'}, {'title': 'use .gitignore to ignore search inside files and folders', 'body': 'use .gitignore to know which files and folders not to search into (think `node_modules` or `packages`)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwMktQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Getting "Visual Studio Code has crashed" a few times', 'body': 'The last three days, when I come into work, I get this dialog. Is there an error log or crash dump I can attach that will help to diagnose?\n'}, {'title': 'Windows setup file version', 'body': 'windows setup not have a file version and when hover cursor 0.0.0.0 shown. please set setup file version\n'}, {'title': "react file with .js extension and JavaScript React language doesn't work very well", 'body': '# errors\n\n![2015-11-18 16_15_18-view js - cis-v2-frontend - visual studio code](https://cloud.githubusercontent.com/assets/941075/11249737/e115e850-8e0f-11e5-9566-3c5ae0164e77.png)\n![2015-11-18 16_15_32-view js - cis-v2-frontend - visual studio code](https://cloud.githubusercontent.com/assets/941075/11249738/e135b748-8e0f-11e5-8035-3d0922cd6680.png)\n# .js file with errors\n\n![2015-11-18 16_17_12-](https://cloud.githubusercontent.com/assets/941075/11249739/e1423cac-8e0f-11e5-913e-11b7fe65f755.png)\n# .jsx file without errors\n\n![image](https://cloud.githubusercontent.com/assets/941075/11249820/57dbe4e4-8e10-11e5-96a4-fee57f5243d4.png)\n'}, {'title': 'Extension docs page gives a 404', 'body': 'This page: https://code.visualstudio.com/docs/extensions linked from the bottom of https://www.visualstudio.com/en-us/products/code-vs.aspx is returning a 404.\n'}, {'title': 'Add more mouse gestures for multi-cursor', 'body': 'Please Implement Column Mode selection/editing. \n\nPreviously requested here\nhttps://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7761618-implement-column-mode-selection-editing\n\nOn Mac preferred shortcut is cmd+option(alt) like Sublime Text does.\n'}, {'title': 'Go Plugin: Show Method Type in Symbol Browser', 'body': 'When using the symbol browser, I have methods that are bound to different types of the same name:\n\n![image](https://cloud.githubusercontent.com/assets/1692624/11250408/6e55bed6-8dfa-11e5-8510-0f268552c192.png)\n\nIt would be nice to see which type each of those methods are for in that view.\n'}, {'title': 'PHP autocompletion: $_GET completes into $$_GET', 'body': 'When using autocompletion for variables it places 2 dollar signs instead of 1. For example typing $_GET will transform it into $$_GET. Fails with every completion starting with $.\n'}, {'title': 'Node error for Import saying no exports for files that use module.exports', 'body': 'Test Node project, saying error for these `Imports`, even though they are in fact `export`ing something.\n\n![image](https://cloud.githubusercontent.com/assets/2574412/11250803/4e8adf4e-8dfc-11e5-8577-1c6b1c88cc4b.png)\n\n![image](https://cloud.githubusercontent.com/assets/2574412/11250814/5d419dfc-8dfc-11e5-9642-6945e87c401f.png)\n'}, {'title': 'Console is difficult to work with on a small screen', 'body': "While working on my laptop, I found it difficult to use the debug console. For example, consider this screen:\n\n![image](https://cloud.githubusercontent.com/assets/393660/11250992/0683cb24-8de4-11e5-9580-0e6e96628e1c.png)\n\nI was able to adjust the side of the code on the right, and hide files:\n\n![image](https://cloud.githubusercontent.com/assets/393660/11251007/1b957f58-8de4-11e5-9b39-707239321f7e.png)\n\nBut note there is _still_ text I can't see that bleeds off the right hand side. \n\nIs there any way to wordwrap?\n"}, {'title': 'Add C/C++ support', 'body': "I was surprised that VSCode didn't supported C/C++ :(\n\nNeed to add this language and CMake/Make as well...\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwNSsA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Document language type', 'body': 'On this page, https://code.visualstudio.com/docs/extensionAPI/activation-events, specifically: activationEvents.onLanguage\n\nHow does one determine the string that is valid for onLanguage? For example, in my CSS file, would I use:\n\ncss\nCSS\nstylesheet\n\netc? \n'}, {'title': 'Incorrect Breakpoint bindings when using source maps', 'body': 'I’m seeing an issue in VS Code when debugging a TypeScript file with Source Maps that uses TypeScript Async Functions. When I set a breakpoint on the first line of the function body, the breakpoint moves to the first executable line following the end of the function body. I’m trying to determine if this is an issue with TypeScript’s SourceMap output, with VS Code, or with the version of V8 used by VS Code.  I’ve tested the same scenario in Chrome Canary and breakpoints seem to bind correctly, which leads me to believe the issue may not be with TypeScript.\n\nAfter further discussion, it looks like the issue is in the `node-debug` extension. Changing the default from `Bias.GREATEST_LOWER_BOUND` to `Bias.LEAST_UPPER_BOUND` seems to solve the problem.\n\nCC: @weinand \n'}, {'title': 'Unable to launch application on OSX', 'body': "When doing a fresh download, copying `Visual Studio Code.app` to `/Applications`, and executing I receive the error: `The application “Visual Studio Code.app” can’t be opened.`\n\nUpon looking at the console logs I see the following errors:\n\n```\n11/18/15 11:44:47.046 lsd[371]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist\n11/18/15 11:44:47.049 lsd[371]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist\n11/18/15 11:44:47.058 com.apple.xpc.launchd[1]: (com.apple.xpc.launchd.oneshot.0x10000046.Atom[62821]) Could not find and/or execute program specified by service: 2: No such file or directory: /Applications/Visual Studio Code.app/Contents/MacOS/Atom\n11/18/15 11:44:47.058 Finder[749]: spawn_via_launchd() failed, errno=111 label=[0x0-0x11dc1db].com.github.atom-shell path=/Applications/Visual Studio Code.app/Contents/MacOS/Atom flags=1 : LaunchApplicationClient.cp #963 LaunchApplicationWithSpawnViaLaunchD() q=com.apple.root.default-qos\n11/18/15 11:44:47.058 Finder[749]: spawn_via_launchd() failed, errno=111 label=[0x0-0x11dc1db].com.github.atom-shell path=/Applications/Visual Studio Code.app/Contents/MacOS/Atom flags=1\n11/18/15 11:44:47.061 lsd[371]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist\n```\n\nIt appears that the App is looking for `/Applications/Visual Studio Code.app/Contents/MacOS/Atom` when the correct path should be `/Applications/Visual Studio Code.app/Contents/MacOS/Electron`\n\nI'm attempting to upgrade from the original beta, is there something else that needs to be removed to properly make the transition besides deleting the old App in `/Applications`?\n"}, {'title': 'Documentation issue for Extensions, LanguageServer', 'body': 'On this page, https://code.visualstudio.com/docs/extensions/example-language-server, debugging the server is described like so:\n\n"Since the server is started by the LanguageClient running the extension we need to attach a debugger to the running server. To do so switch to the VS Code instance containing the server code and press F5. This will attach the debugger to the server. Use the normal Debug View to interact with the running server."\n\nI\'ve tried this multiple times now and every time I do, the server fails to debug. I get this error:\n\ncannot connect to runtime process (timeout after 5000ms)\n'}, {'title': 'VSCode very slooow when opening minified css file', 'body': 'Mac OS X El Capitan, 10.11.1, \nVSCode 0.10.1\ncss file size: 116,198 bytes (119 KB on disk)\n\nThe attached file was built with a minifier as part of a grunt task to build the distributable files of a website. Tried to open the file several times to make sure that file is the issue. The app eventually shows a dialog that says "Visual Studio is no longer responding" \n\nWhen I reopen VSCode after the crash, the folder has been forgotten, it opens to a different folder. When is the "current" folder updated to the existing folder?\n\nI added the .txt extension in order to add it here. The file extension was originally just .css\n\n[main.08642f99.css.txt](https://github.com/Microsoft/vscode/files/38262/main.08642f99.css.txt)\n'}, {'title': 'ES6 support does not work', 'body': 'When I open any file in my ES6 Javascript project, every single line is underlined in red, with errors like:\n\n![screen shot 2015-11-18 at 12 03 09 pm](https://cloud.githubusercontent.com/assets/79215/11252725/88d3c130-8dec-11e5-9b18-3f5bc4337bfe.png)\n\nIn my project\'s root, I have a `jsconfig.json` file with the following contents:\n\n```\n{\n    "compilerOptions": {\n        "target": "ES6",\n        "module": "commonjs"\n    },\n    "files": [\n        "app/"\n    ]\n}\n```\n\nThe file in question lives inside the `app` folder.\n'}, {'title': 'Add support for Perl5 symbol indexing', 'body': 'There doesn\'t seem to be a way to force indexing of Perl5 files for symbol harvesting, so the "Go to definition" and "Go to Symbol" do nothing (without any feedback to the user) when clicked for Perl5 (and likely, Perl6) files in a project.\n'}, {'title': 'Support user-wide installations', 'body': 'I run under a standard user account on my machine, and the installer requires administrator rights, which means running it in the context of a different (administrator) user account. After choosing the "Add to PATH" option, the installer adds `;C:\\Program Files (x86)\\Microsoft VS Code\\bin` to the user PATH variable of that admin account instead, making it unavailable to me.\n\nI guess the installer should add to the machine PATH instead? It would also be great if the installer could be run under a standard user instead, installing vscode to `%LOCALAPPDATA%\\Programs`, or give the option whether to install for all users or just the current user.\n'}, {'title': 'Type Definition imports not working for *.ts files', 'body': 'A couple things related to type definitions don\'t seem to work for *.ts files (features currently working fine for *.js files).\n1. Green underlining with "Download type definition" suggestion does not appear. Instead, just a red underline with message "Cannot find name xxxxx"\n2. Project-wide type definition references do not automatically load in *.ts files.\n\nA workaround is manually pasting the relevant ///<reference path="../../.../typings/xxxx.d.ts" /> includes at the top of every *.ts file.\n'}, {'title': 'GitHub link on page is broken', 'body': 'https://code.visualstudio.com/Home/Connect points to https://github.com/Microsoft/vscode-distro/ which is a 404\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwOVlQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Unsaved files should be preserved on quit (hot exit)', 'body': "Mac OSX 10.10.5 Yosemite, VS Code 0.10.1\n\nModern apps have a convention of not losing changes when the application quits and files haven't been explicitly saved. Sublime Text is particularly nice in this regard, where newly created or unsaved files are silently preserved on quit and restored when it is launched again. This would be nice for VS Code to support as well.\n\n**To Reproduce**\n1. Make changes to a file, or create a brand new unsaved file\n2. Quit VS Code\n\n**Desired Behavior**\n\nVS Code immediately quits with no prompt. After relaunching the changed file is restored with changes intact and an unsaved indicator.\n\n**Actual Behavior**\n\nVS Code prompts you to save the file or discard your changes.\n"}, {'title': 'Environment variables are not being defined while debugging', 'body': 'I use VS Code to start a debugging session and in the configuration I define a value for PORT yet it is always undefined. I cannot seem to access these environment variables. Is there another way to access these environment variables?\n\n`var port = process.env.PORT || 8001;`\n\nBelow is the launch.json that I am using for a sample project to try to access environment variables. I\'d like to be able to use launch configurations to create multiple configurations with different environment variables.\n\n```\n{\n    "version": "0.1.0",\n    // List of configurations. Add new configurations or edit existing ones.\n    "configurations": [\n        {\n            // Name of configuration; appears in the launch configuration drop down menu.\n            "name": "Launch server.js",\n            // Type of configuration.\n            "type": "node",\n            // Workspace relative or absolute path to the program.\n            "program": "server.js",\n            // Automatically stop program after launch.\n            "stopOnEntry": false,\n            // Command line arguments passed to the program.\n            "args": [],\n            // Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.\n            "cwd": ".",\n            // Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.\n            "runtimeExecutable": null,\n            // Optional arguments passed to the runtime executable.\n            "runtimeArgs": ["--nolazy"],\n            // Environment variables passed to the program.\n            "env": {\n                "NODE_ENV": "development",\n                "PORT" : 8005\n            },\n            // Use JavaScript source maps (if they exist).\n            "sourceMaps": false,\n            // If JavaScript source maps are enabled, the generated code is expected in this directory.\n            "outDir": null\n        },\n        {\n            "name": "Attach",\n            "type": "node",\n            // TCP/IP address. Default is "localhost".\n            "address": "localhost",\n            // Port to attach to.\n            "port": 5858,\n            "sourceMaps": false\n        }\n    ]\n}\n```\n'}, {'title': "Tabs don't update column counter", 'body': "Repro:\n1. Hit the tab key\n2. Column count in gutter doesn't update\n\n![tabsdontupdatecolumns](https://cloud.githubusercontent.com/assets/972891/11254395/4745d61e-8df5-11e5-8c25-75383824e586.gif)\n\nForgive the GIF quality.\n"}, {'title': "[markdown] Markdown lists aren't being themed correctly", 'body': 'Making a custom theme using every possible scope for a Markdown list and can\'t style them. However, if I style "punctuation", the lists get styled. \n'}, {'title': 'Enable code folding and collapsing', 'body': 'I searched but couldnt find this in the issues. Id love to be able to collapse sections of the code. Any thoughts?\n'}, {'title': "VMW Workstation: VS Code hits 97% CPU and won't start for a couple of minutes", 'body': "I'm in VMW Workstation 11.1.3 with a 8GB/single core/Win764bit and when I start code.exe from the start menu, it jumps to 97% of cpu and will take a couple of minutes to start.  I'm not opening any folders with code or doing anything with the commandline, this is a plain vanilla start from the menu.  I also noticed that I can sometimes speed up the starti[ by starting 4 or 6 instances (each click from the start menu seems to start 2 instances in the taskmanager, but not the desktop) and then the ide will kick in, but I'm left with all the instances until I shut down the ide and then all instances close.\n\nI've seen this same behavior on VMs I've created at work and at home (not the same VM on two different computers).\n"}, {'title': 'File Language is not persisted when file is closed and reopened', 'body': '![code](https://cloud.githubusercontent.com/assets/941075/11254833/1a063b96-8e2a-11e5-97a9-412e6b7a2499.gif)\n'}, {'title': 'Feature: SSL Settings', 'body': 'My company uses a proxy with SSL inspection, i cant find a way to set allowed trusted certificates.\n\nCheers\n'}, {'title': 'License - clarify the "Data" section', 'body': "On the website's [license page](https://code.visualstudio.com/License), I'm interested in this section:\n\n>  DATA. The software may collect information about you and your use of the software, and send that to Microsoft. Microsoft may use this information to provide services and improve our products and services. **For this pre-release version, users cannot opt out of data collection. There may also be some features in the software that enable you to collect data from users of your applications.** If you use these features to enable data collection in your applications, you must comply with applicable law, including providing appropriate notices to users of your applications. You can learn more about data collection and use in the help documentation and the privacy statement at http://go.microsoft.com/fwlink/?LinkID=528096&clcid=0x409. Your use of the software operates as your consent to these practices. \n\n**Emphasis** mine. My employer has concerns about this section. We'd love to have VS Code as an option - are there plans to revise this section after Code has a public release? Or perhaps a clearer description of what data is being collected and sent from users?\n"}, {'title': "Middle click paste doesn't work on Linux", 'body': "On linux, whenever you select some text, this text is automatically placed onto a separate X11 clipboard called PRIMARY. This can then be pasted anywhere by middle clicking.\n\nThis works (pretty much) everywhere - including other electron apps like Atom - but doesn't work in Visual Studio Code, sadly.\n\nVSCode Version:\n\nVersion 0.10.1\nCommit df352367df2efcfa9d602d471e4e2f42140a0f05\nDate 2015-11-17T15:21:23.766Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\n\nLinux Version:\n\nUbuntu 13.10\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwPPkA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Extension API: cursor position (determining current location and moving it)', 'body': 'Seems like the only way to get the current cursor position is if the user explicitly selects something.\n'}, {'title': 'Debug Console: Copy multiple lines', 'body': 'Enable copying of multiple lines (e.g. all highlighted lines) from the debug console.\n\nRepro:\n1. Select several lines in debug console\n2. Right click->copy\n3. Only one line is copied.\n'}, {'title': '[stylus] Add Stylus language support', 'body': "I would like to have full Stylus language support, the same we already have for Sass and Less.\n\nColoring is already available with `tmLanguage`, but we should have full intellisense support, errors, warnings etc.\n\nI've already taken a look at the way Sass was built, and if you would like to have this improvement in VSCode core, I can contribute with a PR.\n\nIf there is any way to do that as an extension (but using the power of Monarch etc), I'll be glad if you give some guidelines of how I can achieve that.\n\nThanks in advance.\n"}, {'title': 'Keybinding: Allow colon to be a valid keybinding', 'body': 'Working on a [VIM extension](https://github.com/VSCodeVim/Vim). A core key binding of VIM is `:`.\n\nThe below is a workaround:\n\n```\n     {\n        "key": "Shift+;",\n        "command": "extension.vimMode_colon",\n        "when": "editorTextFocus"\n      },\n```\n\nbut it doesn\'t work on international keyboards.\n'}, {'title': 'Odd code in vscode/src/vs/editor/common/modes/lineStream.ts', 'body': '```\nprivate actualStringToArray(str:string):boolean[] {\n    var maxCharCode = 0;\n    for (var i = 0; i < str.length; i++) {\n        maxCharCode = str.charCodeAt(i);\n    }\n    var r = [];\n    for (i = 0; i < maxCharCode; i++) {\n        r[i] = false;\n    }\n    for (i = 0; i < str.length; i++) {\n        r[str.charCodeAt(i)] = true;\n    }\n    return r;\n}\n```\n\nis the first loop supposed to find the largest Char code?  at the moment it will just return the the last character in str.\n'}, {'title': 'ASP.NET 5 rc1 application showing unresolved items ', 'body': 'Same application in Atom is fine. Application runs without issue. application created using \n\n`yo aspnet`, basic web application no auth. ran `dnu restore`\n\nCode - Version 0.10.1 (0.10.1)\n\n![screen shot 2015-11-18 at 4 56 45 pm](https://cloud.githubusercontent.com/assets/7681382/11255723/c0ad8b80-8e15-11e5-8590-39c91c53f176.png)\n\n@chrisdias \n'}, {'title': 'RST language support', 'body': "I'd love to see support for ReStructuredText ( http://docutils.sourceforge.net/docs/user/rst/quickref.html ) as it would make one of my current projects a lot simpler. It's similar but not identical to Markdown.\n"}, {'title': 'Support running extension tests through cmd line', 'body': 'Add support for running plugin/extension tests through the command line. This is particularly useful for things like CI. I was able to setup gulp+mocha, but any tests that reference `vscode` doesn\'t work.\n\nParaphrasing @bpasero, "this is a consequence of having an extension host that runs your plugin. This host is really the entire VS Code app and cannot be emulated from the command line easily. "\n'}, {'title': 'TypeScript: Code styling broken when no EOL semi-colons', 'body': 'v 0.10.1\nTheme: Dark\n\nCode styling is broken when not using semi-colons ";" for end of line.\nI have my tslint to force excluding ";"\n\nIf I add a semi-colon to line 6, it all works again\n\n![capture](https://cloud.githubusercontent.com/assets/1139901/11255957/e2d53968-8e94-11e5-9af9-00bff41199d9.PNG)\n'}, {'title': 'Polymorphic this (TS 1.7)', 'body': 'is not accepted as valid TS. See https://github.com/Microsoft/TypeScript/pull/4910\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwPk7w==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Add Python support', 'body': ''}, {'title': 'Regression: editor text is blurry on Linux with 125% text scaling', 'body': "Using Arch Linux with Gnome/Gtk+ 3.18.\n\nIn versions 0.9.2 and below, VS Code ignored the text scaling factor in Gnome 3 and rendered its UI text at 100% scale instead of 125% as I had set. (The text scaling factor can be set with gnome-tweak-tool.) To compensate, I set the editor text size to 17, which worked fine.\n\nAs of 0.10.1, VS Code now seems to respect the text scaling factor. However, the editor text is noticeably blurry. Changing the editor text size or font does not help. The UI text, on the other hand, seems to be rendered correctly.\n\nI've uploaded comparisons here: http://imgur.com/a/nPLUP\nI recommend you view them at 1:1 scale to see the differences clearly.\n"}, {'title': 'Improve the explorer view to match full VS design', 'body': "Hello,\n\nI use VS Code daily at work and at home since the very first preview release and I love it.\n\nI do have a major concern though about the way the differents files are shown in the 'Working Folder' view : they're all formatted in the same, plain way, and it is actually quite hard to distinguish what is what when looking at it (especially folders vs files). In a previous release, I recall the folder names were bold. It was better but nonetheless not enough.\n\nI think this image below can describe pretty well what I suggest:\n![folderview](https://cloud.githubusercontent.com/assets/3266897/11257610/fe34751c-8e52-11e5-9a98-7d7302611ddf.png)\nThe same solution is opened in both Code and full VS, and obviously the latter works way better with icons and varying font weight.\n\nWould it be possible to achieve a similar look with Code ? I don't know about reusing the full VS assets since it might be a problem with licensing and stuff though. I gave a look at the new extension API but it specifically states that it doesn't allow for DOM manipulation, so I guess it's a no-go.\n\nIf it's not in the priorities of the dev team (I understand there are way more important stuff to work on in the short term), would you accept a PR that would bring such a feature ?\n\nThank you for your time and your awesome work,\nJabX\n"}, {'title': "Goto Symbol doesn't show all functions defined inside the file.", 'body': 'Using "Go To Symbol..." (⇧⌘O) it seems to only recognize certain ways of declaring functions in javascript.\n\n<img width="607" alt="screen shot 2015-11-18 at 5 49 37 pm" src="https://cloud.githubusercontent.com/assets/1890516/11258194/d1923174-8e1c-11e5-9b2e-a17ba30a97bc.png">\n\nAll three functions should show up when you search "searchable", right? Only "searchable" and "alsoSearchable" show up however.\n\nIn this case it looks like these cases work:\n1. Anonymous function assigned as a property on and object when the object is instantiated.\n2. Named function assigned as a property on an object after it\'s instantiated.\n\nAnd this case doesn\'t work:\n1. Anonymous function assigned as a property on an object after it\'s already been instantiated.\n\nThis works in Sublime Text and I\'d love if it could work in VS Code as well as it\'s one of the main ways I navigate my javascript code (especially the thousands of lines of code for my game).\n'}, {'title': 'Mac Omnisharp Error on RC1', 'body': "Hey Guys im getting the following error in omnisharp Log it looks like its looking for the runtime in the wrong folder. \n\nCould not find any CSX files\n[ERROR:OmniSharp.Dnx.DnxPaths] The specified runtime path '1.0.0-rc1-final' does not exist. Searched locations /Users/franzsilva/.dnx/runtimes/dnx-mono.1.0.0-rc1-final\n/Users/franzsilva/.dnx/runtimes/kre-mono.1.0.0-rc1-final\n/Users/franzsilva/.dnx/packages/KRE-Mono.1.0.0-rc1-final\n/Users/franzsilva/.k/runtimes/dnx-mono.1.0.0-rc1-final\n/Users/franzsilva/.k/runtimes/kre-mono.1.0.0-rc1-final\n/Users/franzsilva/.k/packages/KRE-Mono.1.0.0-rc1-final\n/Users/franzsilva/.kre/runtimes/dnx-mono.1.0.0-rc1-final\n/Users/franzsilva/.kre/runtimes/kre-mono.1.0.0-rc1-final\n/Users/franzsilva/.kre/packages/KRE-Mono.1.0.0-rc1-final\n"}, {'title': 'Provide option to opt out of line ending normalisation for files', 'body': "Upon saving a file edited with VS Code, it appears to perform line ending normalisation automatically and without user notification of any sort. Because of this, I've found myself bitten by large diffs in Git (I'm aware you can circumvent this using the `-w` flag) where a trivial fix to a single line of source code appears to affect a significant proportion of the file, which makes pull requests and reviews for such changes on GitHub a pain to sift through. Then again, I guess one could argue why a source file with mixed line endings should stay in version control like that anyway!\n\nVisual Studio Community displays a prompt upon opening a file if it has mixed line endings and lets a user decide whether or not to have it fixed.\n\n![](http://i.imgur.com/bp9voln.png)\n\n**Version:** 0.10.1\n\n(By the way, great work on open sourcing VS Code too, thanks!)\n"}, {'title': 'build fails on Windows', 'body': 'Following the [build directions](https://github.com/Microsoft/vscode/wiki/How-to-Contribute), `scripts\\npm install` fails in the `"postinstall": "npm --prefix extensions/csharp-o/ install extensions/csharp-o/"` step.\n\n[npm-debug.log](https://github.com/Microsoft/vscode/files/38462/npm-debug.log.txt)\n'}, {'title': 'Unclosed Single/Double Quotes in Template Strings Break Syntax Highlighting', 'body': 'If you use one single or double quote without closing it, syntax highlighting breaks (even with ES6 enabled as the target). Heres\' an example:\n\n![screen shot 2015-11-18 at 7 29 37 pm](https://cloud.githubusercontent.com/assets/6439050/11258829/bc70aaf6-8e2a-11e5-9a85-14a30811eb61.png)\n\nMy `jsconfig.json`:\n\n```\n{\n  "compilerOptions": {\n    "target": "ES6"\n  }\n}\n```\n\n**Edit**: In retrospect this may simply be that template strings _aren\'t_ highlighted, which causes this weird behavior.\n'}, {'title': '[angular] Syntax highlight for inline HTML templates', 'body': 'It would be really cool if there was syntax highlighting and autocompletion for inline HTML templates\n\nVS Code:\n![image](https://cloud.githubusercontent.com/assets/1758655/11259454/6b924c24-8ead-11e5-9443-22c701f61e74.png)\n\nIDEA:\n![image](https://cloud.githubusercontent.com/assets/1758655/11259486/a80378ae-8ead-11e5-9814-b2533fb737d7.png)\n'}, {'title': '[less] mixins "{ expected" errors', 'body': 'When editing a **.less** file unexpected errors show when working with mixins. The error text is `{ expected`. These errors show when using a mixin without wrapping it in a CSS selector or when using a mixin in a media query. \n\nTo reproduce take an example from lesscss.org.\nhttp://lesscss.org/features/#loops-feature\nhttp://codepen.io/anon/pen/EjqwNr?editors=010\n\nThe Codepen contains code that can be used to replicate `{ expected` errors in Visual Studio Code 0.10.1. In Codepen no errors are shown and the code compiles fine. If this code is put into a **.less** file in Visual Studio Code 0.10.1 you will see the errors on lines 8 and 11. The image below shows the red squiggles signifying the _"errors"_ in the code.\n\n![screen shot 2015-11-18 at 6 09 04 pm](https://cloud.githubusercontent.com/assets/1514172/11259540/9f7a5272-8e1f-11e5-965f-4d035ea70c8e.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwQ8jw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Add Symbol navigation for PHP ', 'body': "would you please add support for PHP symbol navigation ? \n\nI like the symbol navigation for js, just press CTRL+SHIFT+O\nThe symbol list will show to us\n\nthat's amazing\n"}, {'title': '[javascript] Bring back ES6 syntax highlighting support', 'body': 'Right now, those keywords like `import` `class` `from` are all plain white.\n'}, {'title': 'Missing release script', 'body': 'I was looking for your release script for reference, but all there is is a devDependency for [atom-shell-installer-assets](https://github.com/joaomoreno/atom-shell-installer-assets). You probably have a script using squirrel, that I was interested on.\n\nMaybe you wont open source it, but why?\n'}, {'title': '代码提示功能还不行', 'body': '我用PHP，感觉代码提示功能还不行。变量提示不出来。\n跟PHPStorm比差远了。\n这东东感觉现在还是个实验品。不可取。\n'}, {'title': 'Error with unresolved dependencies', 'body': 'Error with creating a new app and editing it in visual studio code. Dnu restore runs fine in the command line, but won\'t run when the editor prompts me. The error I am getting is /Users/colanconnon/Desktop/HelloAspNet\' ; /Users/colanconnon/.k/runtimes/kre-mono.1.0.0-beta3/bin/dnu restore\n-bash: /Users/colanconnon/.k/runtimes/kre-mono.1.0.0-beta3/bin/dnu: No such file or directory\n\n![screen shot 2015-11-18 at 9 49 47 pm](https://cloud.githubusercontent.com/assets/6674648/11261053/e5211882-8e3e-11e5-8d1b-deaf8c2e951e.png)\n\n<img width="682" alt="screen shot 2015-11-18 at 9 50 18 pm" src="https://cloud.githubusercontent.com/assets/6674648/11261055/e9fde6f0-8e3e-11e5-83be-f904012aaf85.png">\n\n<img width="682" alt="screen shot 2015-11-18 at 9 53 13 pm" src="https://cloud.githubusercontent.com/assets/6674648/11261058/f8744012-8e3e-11e5-8414-8d89d0c4102a.png">\n\nApplication runs fine when doing dnx web. The error appears to be that VS Code is trying to install the dependencies in an old runtime, which I have uninstalled. \n'}, {'title': 'install golang plugin failed', 'body': 'Operating System: windows 10 x64\nTwo problems:\n1. remind me "The \'godef\' command is not available. Use \'go get -u github.com/rogpeppe/godef\' to install.“ at the top.  However, godef.exe is already under %PATH%\n2. Remind me "Analysis tools missing"  at the right bottom. If i click it, a remind on top "Some Go analysis tools are missing from your GOPATH. Would you like to install them?" comes out; choose "install", an empty page with title ”Output for \'Go\'" comes out, and nothing happens then\n'}, {'title': 'Menus not responsive on Windows 10', 'body': "So I created a fresh Windows 10 VM today to try out the Beta.  However, the application is sluggish to open which isn't a big deal but I never noticed it before.  The problem is that the menus are not working.  They will appear on clicking on the menu bar, but selecting a menu item does nothing.  If I try to open a project folder from the explorer VSCode opens but the folder does not.  I have restarted and reinstalled with a fresh download of the installer.  Am I the only one who is seeing this?\n"}, {'title': 'Crush if dragging a large file to open', 'body': '![image](https://cloud.githubusercontent.com/assets/1896620/11261236/87592644-8ead-11e5-9c29-246b3d7aa922.png)\n'}, {'title': 'JSX language support - more than colors', 'body': "I know VSCode has not support JSX yet but it didn't appear so much error highlights in the last version, even I had already changed my language mode into `Plain Text`.\n![2](https://cloud.githubusercontent.com/assets/6079112/11261584/f5e2e9d0-8eb0-11e5-8388-e6711dc718f9.PNG)\n"}, {'title': 'Can VS code will support more theme or theme package?', 'body': 'Can VS code will support more theme or theme package?Now it looks ugly!\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwR-lg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "'omnisharp:fixscripts' errored  ReferenceError: Promise is not defined", 'body': "Environment is Fedora 22 x86-64 Python 2.7.10\n\ndownload and unpack 0.10.1 source code\n\n```\ncd ~/tmp/vscode-0.10.1\nsudo npm install -g mocha gulp\n./scripts/npm.sh install --arch=x64\n```\n\nthen you'll get into this error after a few minutes\n\n```\n> csharp-o@0.1.0 postinstall /home/dove/tmp/vscode-0.10.1/extensions/csharp-o\n> node ./node_modules/gulp/bin/gulp.js omnisharp\n\n[11:45:17] Using gulpfile /home/dove/tmp/vscode-0.10.1/extensions/csharp-o/gulpfile.js\n[11:45:17] Starting 'omnisharp:clean'...\n[11:45:17] Finished 'omnisharp:clean' after 5.84 ms\n[11:45:17] Starting 'omnisharp:fetch'...\n[gulp] Downloading https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.5.6/omnisharp.tar.gz... 1% 4% 17% 48% 71% 97% Done\n[11:45:27] Finished 'omnisharp:fetch' after 10 s\n[11:45:27] Starting 'omnisharp:fixscripts'...\n[11:45:27] 'omnisharp:fixscripts' errored after 174 μs\n[11:45:27] ReferenceError: Promise is not defined\n    at /home/dove/tmp/vscode-0.10.1/extensions/csharp-o/gulpfile.js:40:14\n    at Array.map (native)\n    at Gulp.<anonymous> (/home/dove/tmp/vscode-0.10.1/extensions/csharp-o/gulpfile.js:39:37)\n    at module.exports (/home/dove/tmp/vscode-0.10.1/extensions/csharp-o/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:34:7)\n    at Gulp.Orchestrator._runTask (/home/dove/tmp/vscode-0.10.1/extensions/csharp-o/node_modules/gulp/node_modules/orchestrator/index.js:273:3)\n    at Gulp.Orchestrator._runStep (/home/dove/tmp/vscode-0.10.1/extensions/csharp-o/node_modules/gulp/node_modules/orchestrator/index.js:214:10)\n    at /home/dove/tmp/vscode-0.10.1/extensions/csharp-o/node_modules/gulp/node_modules/orchestrator/index.js:279:18\n    at finish (/home/dove/tmp/vscode-0.10.1/extensions/csharp-o/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:21:8)\n    at /home/dove/tmp/vscode-0.10.1/extensions/csharp-o/node_modules/gulp/node_modules/orchestrator/lib/runTask.js:52:4\n    at f (/home/dove/tmp/vscode-0.10.1/extensions/csharp-o/node_modules/gulp/node_modules/orchestrator/node_modules/end-of-stream/node_modules/once/once.js:17:25)\nnpm ERR! weird error 1\nnpm ERR! not ok code 0\nnpm ERR! weird error 1\nnpm ERR! not ok code 0\n\n\n```\n"}, {'title': 'Request feature "Integrated terminal"', 'body': 'It would be great if vscode has integrated terminal feature refer vim or atom https://atom.io/packages/term3  \n\nI saw this suggestion pending in uservoice(https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7752357-integrated-terminal) and repost here since it has specific repo \n'}, {'title': "TextEdit[] returned from provideDocumentFormattingEdits doesn't behave correctly?", 'body': 'I\'m trying to determine the root cause of https://github.com/Microsoft/vscode-go/issues/16, but I don\'t see any problem with the TextEdit object I\'m providing back to the `provideDocumentFormattingEdits`.  It seems that in some cases Code will corrupt the buffer in odd but deterministic ways.  \n\nI haven\'t been able to pin down the exact incorrect behaviour, but two example:\n\n_Example 1_\nBefore text: \n\n```\npackage caddy\\n\\nfunc main() {\\n\\tfmt.Println("Hello World! :)")\\n}\\n\n```\n\nThen replace the full range with:\n\n```\npackage caddy\\n\\nimport "fmt"\\n\\nfunc main() {\\n\\tfmt.Println("Hello World! :)")\\n}\\n\n```\n\nThe result will be \n\n```\npackage caddyimport "fmt"func main() {\\n\\tfmt.Println("Hello World! :)")\\n}\\n\n```\n\n_Example 2_\nBefore text: \n\n```\npackage caddy\\n\\nfunc main() {\\n    fmt.Println("Hello World! :)")\\n}\\n\n```\n\nThen replace the full range with:\n\n```\npackage caddy\\n\\nimport "fmt"\\n\\nfunc main() {\\n\\tfmt.Println("Hello World! :)")\\n}\\n\n```\n\nThe result will be \n\n```\npackage caddy\\n\\nimport "fmt"\\n\\nfunc main() {\\n\\tfmt.Println("Hello World! :)")\\n}\\n\n```\n\nNote that the only difference between these examples is the `"\\t"` vs `"    "` in the original text.  The result in Example 1 has corruption in the string result in a seemingly random location.\n\nTwo question:\n1. Is this a bug in the extension API, or am I somehow calling it wrong?\n2. If it\'s a bug, is there any workaround?\n'}, {'title': 'Bad Default/Regression: C++ .h headers colored as C files', 'body': "The new syntax highlighting in **0.10.0** is great-ish but it seems to have broken all **.h** files in a C++ project as they are defaulted to C syntax which is missing all C++ keywords.\n\n![image](https://cloud.githubusercontent.com/assets/178878/11263299/73207fac-8e57-11e5-9679-b264f538fe51.png)\n\nThe vast majority of C++ projects I've worked on or encountered here on Github use .h for their header files and not **.hpp**, **.hh**, or **.hxx**. Even Microsoft-shipped C++ include headers are all **.h**.\n\nSince I cannot change the extensions of my files in any reasonably mature C++ project, I'm left with either modifying the VS Code root installation cpp extension or manually change the syntax highlighting to C++ every time I open a **.h** file. Both of these solutions are not ideal, especially since this was NOT a problem in earlier versions of VS Code.\n"}, {'title': 'How to install plugins!!', 'body': 'Such as editor plugins : Emmet!! ,jsformat l\n\ntheme !!!\n\nthanks~~\n'}, {'title': 'Developer Tools: node.js api error', 'body': "![vsc](https://cloud.githubusercontent.com/assets/5064875/11263530/7c7b489c-8ec6-11e5-8f8b-256393615126.png)\n\nsome node.js modules are not supported in vs code.\n\n![atom](http://sfault-image.b0.upaiyun.com/235/097/235097771-564d697c10ea7_articlex)\n\nit's ok in atom, i was used to check node.js apis by this way.\n"}, {'title': '[c++] C++ syntax highlighting inconsistent in 0.10.0', 'body': "The Improved Syntax Highlighting in 0.10.0 is nice in that it does more than a simple keyword match and comment detection. However, it seems to produce inconsistent colouring for C++ files.\n\nAll themes below use the default Dark theme that comes with VSCode and Visual Studio 2015. The default Light theme has the same problems. Actually, all themes I tried have the same inconsistencies except of course the colours themselves are different.\n## The Problem\n\nVSCode 0.10.0:\n![image](https://cloud.githubusercontent.com/assets/178878/11263547/a7647352-8e59-11e5-90d3-41cf8d5be643.png)\n\nSome specific concerns/issues:\n1. Why is the `#include` and `#define` **pink**? I _really_ hope this is not a new direction for the default VS Dark theme.\n2. Why are the `if`, `return`, and `else` keywords **pink** but the `int`, `namespace`, and `class` keywords the good-old-VS **blue**?\n3. Why are function names like `main()` and `do_stuff()` **yellow**, while their use **orange**?\n4. Why are class names like `Foo` and namespace names like `space` using keyword **blue** colour?\n## For Reference\n\nVSCode 0.9 and below (it was simpler but at least it was consistent):\n![image](https://cloud.githubusercontent.com/assets/178878/11263559/c61f1c34-8e59-11e5-83eb-070cfe597ecb.png)\n\nVisual Studio 2015 (obviously can infer more about the language but this is what I'd expect from the default Dark theme):\n![image](https://cloud.githubusercontent.com/assets/178878/11263567/dbe8445a-8e59-11e5-9c17-b7ffff63d2d5.png)\n"}, {'title': 'output window - crashes under load.', 'body': 'Hi\n\nWhen configuring the vscode task runner for `"showOutput": "always"`, I note the output window may become overwhelmed if the process emits large amounts of text/data. This results in the application becoming unresponsive and requiring a restart.\n\nIs it possible to buffer any output from a process and page it gracefully to the output window?\n\nMany Thanks\n'}, {'title': 'Feature request: more complete git integration', 'body': "I've tried out this new editor and find it very promising. Looking at the git integration, here's a list of features that would add a ton of usefulness if being integrated into the git screen: (I hope I didn't overlook something)\n- add `git pull --rebase` additionally to `git pull`\n- add keyboard shortcuts and (easy reachable) buttons to quickly `stage` and `unstage` `lines` and `chunks` in `diff view`\n- add `git log`, `project` wise, `branch` wise and `file` wise with easy to view commit `file changes`\n"}, {'title': 'Support undo and redo in input fields', 'body': 'How to reproduce the bug:\n1. Open a text file;\n2. Edit something in the file;\n3. Use Cmd+F to activate the search box on the top right;\n4. Type a keyword you want to search in the box;\n5. Change the keyword in the box; (e.g., add a character to the keyword)\n5. Use Cmd+Z to undo;\n6. You will notice that Visual Studio Code actually undos the text file edit, not the search keyword edit.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwTE8A==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Global Typings?', 'body': "Can one add global typings? i.e a global 'JQuery typing': non-single-project based.\n"}, {'title': 'When can support Razor IntelliSense in ASP.NET 5?', 'body': 'When can support Razor IntelliSense in ASP.NET 5\n'}, {'title': 'Changes to Emmet snippets.json lost after update', 'body': '自己修改了emmet的snippets，更新后snippets被覆盖了，还要自己重新修改一下，是不是也能像settings那样加写自己的设置比较好？\n'}, {'title': 'How to install plugins behind a proxy with a self-signed certificate?', 'body': 'I\'m using vs code behind a proxy with a self-signed certificate, when i try to install plugins and typing "ext install ", it shows an error "unable to verify the first certificate".\n'}, {'title': 'Find symbols, find references, format code does not work on Ubuntu 15.04', 'body': 'I am still using 0.8.0 and these things works fine on this version. However, all the releases after it does not work properly.\n\nKudos to whole team for creating a fast editor that works cross platform. \n'}, {'title': 'The 0.10.1 update cover the file what I edited the snippets.json in the Emmet. So I need to edit it again. Is it can improve?', 'body': 'The 0.10.1 update cover the file what I edited the snippets.json in the Emmet. So I need to edit it again. Is it can improve?\n'}, {'title': 'Snippet variables not detected after double backslash', 'body': 'In a LaTeX snippet, it is not possible to declare a variable after a double backslash.\nExample:\n\n``` json\n    "section": {\n        "prefix": "sec",\n        "body": [\n            "\\\\${1:sub}section${2:*}{${3:label}}",\n            "\\n\\t$4"\n        ],\n        "description": "Start a subsection"\n    }\n```\n\nexpands to\n\n``` tex\n    \\${1:sub}section*{label}\n```\n'}, {'title': 'Bring Code window to foreground when opening a file from the command line and reusing existing window', 'body': 'Currently (on Windows) when you open a file via command line with _--reuse-window_ the file is opened but Code just flashes its icon on the taskbar staying in background. \nPlease consider adding a commandline option --bring-to-front or bring Code window to front regardless when  file is opened from the command line.\n\n//VS Code 0.10.1 on Windows 7 Professional SP1\n'}, {'title': 'Visual Studio Code is no longer responding', 'body': 'Sometimes editor just freeze. Kill task helps only. Have this problem at work and home.\nI noticed that this started after latest update (0.10.1).\n\nWorking in PHP files.\n\nWindows 10 64.\n'}, {'title': '[php] missing user code auto-complete on 0.10.1', 'body': 'When writing PHP code VSCode worked well completing user variables beginning with a $ sign or completing user functions. That worked in 0.9.1 but is missing in 0.10.1 - now only PHP built-in code completions are shown.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwTsHQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Typing in the editor is very laggy on Linux', 'body': "Since the 0.10.1 update, typing anything in the editor is very laggy: characters appear with about 0.5 seconds delay and almost never in the same order I actually typed them on the keyboard.\n\nPossibly related: scrolling to the top of a file in the editor triggers a slower top-down refresh of the contents that apper in the editor. I actually see how the code is refreshed like in a bitmap, line by line, pixel-wise.\n\nI'm using Ubuntu Linux 15.10. This problem didn't occur with previous Visual Studio Code updates.\n\nLater edit: I've tested it again on the same computer, but on a 15 inch screen and it works ok, without any lag when typing. Only when Visual Studio Code is on a 24 inch monitor the typing is lagging.\n"}, {'title': 'Show the application window as soon as possible', 'body': 'We can do this for the light theme, but for dark theme you see a white background for a short time and so we hide the window until we have DOM access to set the background color.\n\nhttps://github.com/atom/atom-shell/issues/861\n'}, {'title': 'Better drag and drop / clipboard integration of files across applications', 'body': 'This includes being able to drag files and folders from VS Code into other applications as well as to being able to copy a file or folder to the native clipboard.\r\n\r\n**Specifically:**\r\n* [ ] copy files/folders from VS Code file explorer to clipboard and paste into native OS explorer\r\n* [x] copy files/folders from native OS explorer and paste into VS Code file explorer (https://github.com/microsoft/vscode/issues/130036)\r\n* [ ] support the native file data transfer when doing drag and drop (https://github.com/atom/electron/issues/2853)\r\n* [ ] support 3rd party tools such as WinRAR to open files from an archive (https://github.com/microsoft/vscode/issues/90196)\r\n* [x] drop files to the desktop to copy them there (https://github.com/microsoft/vscode/issues/128975)'}, {'title': 'Remove dependency to atom-shell-installer-assets', 'body': 'No longer used\n'}, {'title': 'Menus wrongly positioned when using multiple monitors', 'body': "If you click on the 'File' menu when the main Code window is on the second monitor, the menu appears on the first monitor\n\nhttps://github.com/atom/atom/issues/3415\n"}, {'title': 'Windows 10: window not put to foreground in all cases', 'body': 'Sometimes the VS Code window just flashes in the task bar but is not stored to the foreground (e.g. when running code again from the command line). See https://github.com/atom/electron/issues/2867\n'}, {'title': 'Application Architecture ', 'body': 'This is very novel (paradigm shift) architecture for standard Windows desktop software.\n\nCan you please point into the direction of resources explaining the (detailed) App Architecture of VSCODE ?\n\nKind regards ...\n'}, {'title': 'Ambiguous "Cannot invoke an expression" hint', 'body': 'I was browsing my code with visual studio code beta (v0.10.1), it underlines 5. line and says "cannot invoke an expression whose type lack a call signature.". I think the code hasn\'t any problems since it\'s not an typescript project or something type-restricted. I wanted to report it if it is a bug.\n\n``` js\n                let queryMethod = isEmail ?\n                    { email: userModel.getSingleByEmail } :\n                    { username: userModel.getSingleByUsername };\n\n                queryMethod(user_)\n                    .then((userRecord) => {\n```\n\nNote: I didn\'t changed any configuration option but enabling es6 from jsconfig.json file.\n'}, {'title': '"PreLaunchTask" is not finished before the launching starts', 'body': 'I have a simple TypeScript project, and I need to generate sourcemap before debugging. \nI have a `tsc` task that does the job, and I set it as the `preLaunchTask` field for my launching configuration. However, the launch seems to be starting before the sourcemaps finished generating. \n'}, {'title': "I can't bind one key with two or more commands in keybindings.json", 'body': 'My user keybindings.json is like this:\n    [\n    {\n    "key": "ctrl+/",\n    "command": "editor.action.commentLine && cursorDown",\n    "when": "editorTextFocus" \n    }\n    ]\nBut it doesn\'t work.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwUEMg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Mac: Auto-update prevents to store settings of session', 'body': "Whenever I install an update (prompted by VS Code) it doesn't open the same file I had opened before.\n\nI think this is caused by a prompt process.exit() that leaves VS Code (or actually Chromium) no chance to persist the local storage to disk. It is reproducible by calling Lifecycle.quit() and from the done handler call process.exit().\n\nHave to follow up with Electron to understand this better.\n"}, {'title': 'OSX El Capitan: Code crashes on quit when in split full-screen mode', 'body': "1. Go full screen\n2. Split it with another app (eg iTerm2), El Capitan style\n3. Quit Code\n\nCrash reporter comes up. Couldn't repro with barebones Electron.\n"}, {'title': 'Syntax highlighting: Textmate grammars vs. inbuilt mechanism?', 'body': "The officially documented way to contribute syntax highlighting support for new languages seems to be by wrapping Textmate .tmlanguage grammars.\n\nI'm curious if this is also the mechanism that vscode uses to support the inbuilt languages. There also seems to be various tokenizers for those, like in https://github.com/Microsoft/vscode/blob/master/src/vs/editor/standalone-languages/csharp.ts .\n\nI'm now wondering if vscode uses two different approaches.\nIf yes, which advantages and disadvantages gives the tokenizer based approach and is it also available for extensions?\nIf no, what else is the use-case for this integrated tokenizers?\n"}, {'title': 'Diff editor: restore the action to quickly toggle between inline and normal diff', 'body': 'This is now a setting in 0.10.x making it hard to quickly toggle between the modes without changing the setting.\n'}, {'title': '"How to contribute"  docs details missing', 'body': "`npm install gulp -g` should be executed before `gulp watch`  , otherwise it will throw a error `Error: Cannot find module 'readable-stream/transform'`\n\nI found the solution in  http://stackoverflow.com/questions/24010598/node-js-cannot-find-module-readable-stream\n\nplease update your [How to contribute](https://github.com/Microsoft/vscode/wiki/How-to-Contribute) docs  :smile: \n"}, {'title': 'Crash when opening 50mb YAML file', 'body': 'Version 0.10.1\n\nAs the subject says, When I attempt to open a 55MB YAML file, VS Code crashes.\n\nOpening smaller files seems to work fine (5mb).  The larger one makes it blow up every time.\n\nLet me know if I can provide any more information.\n'}, {'title': 'Git status in File Explorer', 'body': 'Similar to what atom provides in the project explorer:\n1. New files are displayed green.\n2. Modified are displayed yellow/orange.\n3. Ignored files are displayed transparent-ish.\n\nThanks\n'}, {'title': 'Not auto complete for grammar only languages like C++, Python, CoffeeScript...', 'body': "no more auto completions? vscode doesn't give me suggestions to auto complete as I type.\n"}, {'title': 'Wrong multiline parenthesis indent (JS)', 'body': 'When formatting JavaScript the indent of right parenthesis (that is placed on different line) is too large.\nThis is expected to be\n\n``` javascript\nfunction (\n    arg1,\n    arg2\n) {\n    if (\n        arg1\n        && arg2\n    ) {\n        //...\n    }\n}\n```\n\nbut actually is\n\n``` javascript\nfunction (\n    arg1,\n    arg2\n    ) {\n    if (\n        arg1\n        && arg2\n        ) {\n        //...\n    }\n}\n```\n'}, {'title': 'Debug: click on breakpoint does not focus editor if already opened', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwUZUA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Jump to matching bracket issue', 'body': '"Jump to matching bracket" (⇧⌘]) goes to the outer side of left bracket and the inner side of right bracket. This breaks further matching. \n\nTo reproduce just issue ⇧⌘] on nested brackets starting from the most outer ones, see where the cursor ends up (goes to inner couple each time).\n'}, {'title': 'Wrong comment indent in multiline expressions (TS, JS)', 'body': 'When formatting JavaScript or TypeScript, comments placed between parts of multi-line expressions are placed wrong.\nExpected to look like\n\n``` javascript\ndoStuff()\n    .then()\n    // Comment\n    .then();\n```\n\nbut actually is\n\n``` javascript\ndoStuff()\n    .then()\n// Comment\n    .then();\n```\n'}, {'title': 'tasks not working as before', 'body': 'In vscode 9 i had setup a simple task to rsync my project to a server.\n\ntasks.json\n\n``` json\n{\n    "version": "0.1.0",\n    "command": "zsh",\n    "isShellCommand": true,\n    "args":["-c"],\n    "tasks": [\n      {\n        "taskName": "up",\n        "args": ["rsync -avicCFF --no-t --no-p --no-g ./ bastiaan@front:~/front/; echo DONE;"],\n        "isBuildCommand": true\n      }\n    ]\n}\n```\n\nIt worked perfectly, now after the update i only get \n\n```\nzsh:1: command not found: up\n```\n\nIt seems its adding the taskname as argument instead of the args array.\nWhat changed in tasks.json that this does not work anymore?\n'}, {'title': 'Tests occasionally fail spectacularly in OS X', 'body': "Recently, @aeschli and @alexandrudima did a chance which caused an NPE to happen during tests. It's possible that an uncaught exception causes a very ugly chain of errors that will simply make many tests fail. Investigate!\n"}, {'title': 'Format action in XML files deletes spaces in content', 'body': 'When you format an XML file, every group of more than one space is replaced by only one. For example, given this XML\n\n``` XML\n<?xml version="1.0" encoding="UTF-8"?><parent><child>   A   B   C   D   </child></parent>\n```\n\nafter execute `editor.action.format` action (`ctrl+shift+f` by default in Windows) the result is\n\n``` XML\n<?xml version="1.0" encoding="UTF-8"?>\n   <parent>\n      <child> A B C D </child>\n   </parent>\n```\n\nAs it shows, all the spaces inside `child` tag have been trimmed, and now data is different.\n'}, {'title': 'Goto definition acts too early in some cases', 'body': "When pressing the mouse button down then holding control and then releasing the mouse button, VS Code jumps to the definition. This should only happen if you are holding down CTRL before the mouse down.\n\nOne of the problems this causes: When selecting text and copying/cutting/pasting it via CTRL+X/C/V you have to be sure to let go of the mouse button before you press CTRL.\n\nAnother issue with CTRL is that when navigating through recent files with CTRL+TAB and you go backwards in the list via CTRL+SHIFT+TAB, but then decide you actually didn't need to go backwards: You release SHIFT and get immediately thrown into the currently selected file. I think this should only happen when letting go of CTRL in that case.\n\nIn my opinion the Jump To Definition probably shouldn't happen regardless of modifier keys pressed when you have a text selection created with that mouse action.\n\n(this was reported in https://code.visualstudio.com/issues/detail/18527, but I guess github issues are the way forward, right?!)\n"}, {'title': 'Specify which Node version is required to build VS code', 'body': 'It seems like Node v 0.10 is not supported.\n\n```\nReferenceError: Promise is not defined\n    at <path>\\vscode\\extensions\\csharp-o\\gulpfile.js:40:14\n```\n\nWould be helpful to know the minimal Node version needed.\n'}, {'title': 'Add support for font ligatures', 'body': '[Fira Code](https://github.com/tonsky/FiraCode) and [others](https://github.com/i-tu/Hasklig) are monospaced fonts that use [ligatures](https://en.wikipedia.org/wiki/Typographic_ligature) to combine multi-character symbols, e.g. `->` will result in an arrow symbol `→`. This is quite nice and [atom](https://github.com/atom/atom) supports this font feature since `1.2.0`, so it should work with vscode, too.\n'}, {'title': 'OS X: no selection occurances in scrollbar (scroll-map) after ~260 lines', 'body': 'When a text/variable is selected, its other occurances in the file are marked in the scrollbar. Unfortunately, occurrences after the first 260 lines are not shown in the scrollbar.\n\nIs this a setting or a bug?\n'}, {'title': "(JavaScript) Auto-complete for block comments doesn't work since 0.10.1", 'body': 'In previous versions of VS Code block comments have been finished after typing `/**`, which now seems not to be the case.\n\n![comments](https://cloud.githubusercontent.com/assets/9280031/11267902/56c89662-8eae-11e5-8441-ec57738f55d0.gif)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwU2sw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'double click into watch expression or variable jumps up a little bit', 'body': 'you basically have to move it up and down pixel by pixel until you get it right\n'}, {'title': 'Move gulpfile.* in the /build/ folder', 'body': "Would be nice if we'd have a less cluttered root folder with a single top level gulpfile.js that includes the others from the /build/ folder\n"}, {'title': '[Debug] Console HTTP links match incorrectly', 'body': "VS Code show the following output in the console:\n\n![image](https://cloud.githubusercontent.com/assets/835750/11268334/9579a9c6-8eb0-11e5-87e8-1b1a45eb932c.png)\n\nGoogle Chrome shows this one:\n\n![image](https://cloud.githubusercontent.com/assets/835750/11268351/a42f7252-8eb0-11e5-9ea7-7bd2ff67788e.png)\n\nThe source code links are not matched correctly in the VS Code, therefore when I click on the first link for example, VC Code tries to access a file on drive `p:/` which obviously doesn't exist:\n\n![image](https://cloud.githubusercontent.com/assets/835750/11268405/da189d94-8eb0-11e5-8b44-1459d0985191.png)\n"}, {'title': "Keybindings using brackets (eg. indent) doesn't work with a Danish keyboard layout on Mac OSX", 'body': 'The reason is likely that to enter these keys on the layout, you have to use the \'option\' (alt) button.\nSo in this instance, the command is effectively "Cmd+Alt+8" for Cmd+[.\nPerhaps VS Code needs better OS-support for text input (or at least for their use in keycodes).\n'}, {'title': 'Install Extension: order on extension list', 'body': "When you try to install yeoman generator with:\n`ext install yo`\nyeoman generator is last on the list but should be first\n`yo` is name of package\nwith hundreds of packages it will be pain to find.\nI know you can install it with:\n`ext install yeoman` \nbut shouldn't it prioritize package name somehow?\n\n![image](http://i.imgur.com/UAmLpOq.jpg)\n"}, {'title': 'Ability to modify the Caret/Cursor', 'body': "Is there anything, which exposes the CSS or something of the caret/cursor, so it can be modified by an extension(for example modifying the shape and color)? I searched through the API, but I couldn't find anything, which would help me with my problem. Is something available in the API atm or can it be exposed in a future release?\n"}, {'title': 'decorators in object literals not working', 'body': 'I am getting a parsing error for decorators on object literal properties. My jsconfig.json looks like this:\n\n```\n{\n    "compilerOptions": {\n        "target": "ES6",\n        "module": "commonjs",\n        "experimentalDecorators": true\n    }\n}\n```\n\nThis code compiles okay in babel 5.8.12 using the "es7.decorators" extension.\nCan I somehow make this work?\n\n![image](https://cloud.githubusercontent.com/assets/271740/11269888/3f0a1f3a-8f0a-11e5-86e8-578b7a24d60d.png)\n'}, {'title': 'Expose ISuggestions.incomplete', 'body': ''}, {'title': '[xml] Closing XML element with namespace prefix generates element without local-name', 'body': 'The auto-generation of closing XML elements is incorrect if the open XML element has a namespace prefix such as `<xsl:text>`.\n\nObserved behaviour:\n\n``` xml\n<xsl:text></xsl>\n```\n\nExpected behavior:\n\n``` xml\n<xsl:text></xsl:text>\n```\n'}, {'title': 'Integrate "gulp whitespace-style" in "gulp watch" & cont. build', 'body': "gulp whitespace-style finally reports no errors now.\n\nTo ensure we don't introduce leading whitespace mistakes again, let's integrate it in the other tasks\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwV-Nw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Feature Request: Mercurial Support', 'body': '# Add VCS Mercurial Support\n- Simple file changes tracking as git.\n'}, {'title': 'Feature Request: SVN Support', 'body': '# Add VCS Subversion Support\n- Simple file changes tracking as git.\n'}, {'title': 'Remember all UI state even when reopening window without workspace', 'body': 'Currently, reopen files behaviour is slightly weird. If no folders are open, no files are reopened upon restart of VSC. If a folder is open, any files that are opened, inside the opened folder or not, are reopened upon restart of VSC.\n\nI would like to see VSC reopen files, regardless the opened folder count. Should probably be settable in the preferences, I can imagine not everyone is interested in this behaviour.\n'}, {'title': 'cannot open a txt file that use gb2312 encoding correctly on windows', 'body': 'so need click the file encoding tips on status bar and choose reopen with encoding then select gb2312 encoding.\n\nwindows version 10.\n'}, {'title': 'Git commit message input field no longer resizes', 'body': 'OS X 10.11.1\nVS Code version 0.10.1 (0.10.1)\n\nVisual bug appears when you narrowed Git sidebar.\n\n![vsbug](https://cloud.githubusercontent.com/assets/733224/11271675/42b78896-8ed0-11e5-8051-d97e8f534ea9.png)\n'}, {'title': 'Add file icons support in the explorer', 'body': 'Can you please add file icons support in the tree view?\n\nI know that access from extension to the DOM is restricted. But it will be good to add some language-id attribute to the tree-view element. For example in the [render function](https://github.com/Microsoft/vscode/blob/master/src/vs/base/parts/tree/browser/treeView.ts#L219). So it will be easy to modify view of files with different types with CSS, without modifying DOM.\n\nAnd also It will be nice to add possibility to add/modify directly CSS from extension.\n'}, {'title': 'Is possible to have it on Lumia 950 in near feature with .NET SDK ?', 'body': 'Is it possible to recompile for Lumia 950, and to use phone for development of .NET apps and libs?\nThat can be decision factor for buying Lumia 950\n'}, {'title': 'Debug Console has lost highlighting in ', 'body': "Don't know whether this is deliberate or not. In the previous version to 0.10 when I ran mocha tests, the output had highlighting, red, green etc.\nIn 0.10, this appears to have been lost.\n"}, {'title': 'Terminate an task by keyboard', 'body': "Actually I can start a gulp task by the shortcut [ctrl]+[shift]+[b]. Sometimes I wan't to restart this task by using this shortcut again. When I do this, a dialog is warning me because there is already a task running and it must stopped before. But to do this I have to move the mouse and this is uncomfortable. \n\nCan you create the ability to confirm this by pressing [enter] or [space]? Alternatively another shortcut for stopping the task would be great too!\n\nThis is more like a feature request - I hope it is still ok to post it here. \n\nRegards\n"}, {'title': 'Installing extension behind a firewall', 'body': 'I tried to install an extension. As I\'m currently behind a corp firewall I wasn\'t successful after a first try with **ext install**. After configuring **"http.proxy": "http://xxx.yyy.zzz:1234/"** within my global **settings.json** I was successful in loading the list of extensions. But installing one fails with the error **connect ECONNREFUSED 191.238.172.191:443**. Yes, I also configured **https.proxy** correspondingly, but it seems that this value doesn\'t get honored.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwWzEg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[grammars] provide alternative to TextMate grammars', 'body': "TextMate isn't sufficient for many languages.\n\nWe have been integrating in to the lower level, in the src/vs/languages directory and using Modes.IState and supports.TokenisationSupport. There needs to be a way of writing an extension that can do this, which at least currently there doesn't seem to be,\n\nThanks.\n"}, {'title': 'Support the ability to copy to clipboard in extensions', 'body': 'Support writing (and maybe reading) the system clipboard.\n\nWhy I need it: I want to write an extension that will take the contents of the current editor, modify it (by escaping < and >) and then copy that modified text to the clipboard. \n'}, {'title': 'Webdav network drive not work', 'body': "Hi,\n\nIt's impossible to open a folder on a Webdav Network Drive (ex : Webdav SharePoint Folder/file Access).\n\nIt work perfectly with Brackets.\n\nBye\n"}, {'title': 'Use a chat system, such as Gitter', 'body': 'Many OSS projects these days use free services like Gitter (https://gitter.im/) to provide chat channels for their projects. I think vscode would benefit greatly from a channel. It can be included in a link from the README.md file (see Diffy for an example, https://github.com/twitter/diffy).\n'}, {'title': 'Allow VS like flexibility of view layout', 'body': 'Like VS proper, I want more control over the arrangement of my workspace.\nI\'ve been using VS for almost 15 years, it\'s annoying and pointless to adapt to "everything on the left side". This is a dealbreaker for my switching while developing under linux for me.\nI want the callstack, watch, output window in a row along the bottom, not on the left.\n'}, {'title': 'stdfork does not respect stderr', 'body': "When creating a process with stdfork the stderr is not passed through.\n\nThis feature needs to be implemented in stdFork.ts and stdForkStart.js\nSimilar to what we already do for stdout, minus the waiting on the 'ready' signal\nWe also need to the cleanup similar to stdout\n"}, {'title': 'D language support', 'body': 'There is yet to appear a single excellent D-lang environment. As a long-time VS user, I would love it to be here.\n'}, {'title': 'Please provide column selection cut and paste[feature request]', 'body': ''}, {'title': 'Proper tabs for open files', 'body': 'I _really_ miss proper tabs for open files (like VS proper), and the ability to rip a tab out into its own window.\n'}, {'title': 'Crash', 'body': 'After the latest update of visual code constantly closed because of crashes.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwXDBw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[debug] console: long text must wrap, otherwise I cannot see my long values', 'body': ''}, {'title': '[sideloading] needs to happen in main thread', 'body': 'Side loading of extensions should move out of the renderer and into the shared process where we do the install of plugins.\n\n@joaomoreno just moved this bug over from tfs, we should look into it together\n'}, {'title': '[debug] Console triggers bad/blurry Chrome antialising', 'body': 'Open attached file and zoom in a lot\nMight be reproducible only on Windows\n\nInput from @alexandrudima :\n- check why are you getting a new gpu layer\n- we already had this issue in other trees and Joao discovered it was happening due to scroll bars\n- another reason for this might be the positioning (non integer coordinates) of the repl or the background. Though this one is unlikely\n\n![image](https://cloud.githubusercontent.com/assets/1926584/11272842/1cddf344-8ed0-11e5-9d52-e3ac90d25c2a.png)\n'}, {'title': 'rpm & repository for Fedora Linux', 'body': ''}, {'title': 'Getting TypeScript errors in JavaScript files', 'body': '`getTSConfig` might return a string or an object. I get a red squiggly saying that there is no common type between all return values.\n\n<img width="686" alt="screen shot 2015-11-19 at 15 23 35" src="https://cloud.githubusercontent.com/assets/22350/11273073/94ae51b0-8ed1-11e5-8085-24104973799c.png">\n'}, {'title': 'Code completion breaks snippet flow', 'body': "While using a snippet that has some variables and tab stops:\n\n``` typescript\nclass ${name} implements I${name} {\n     constructor() {\n          $1\n     }\n}\n```\n\nThe snipped flow stops after applying a suggested code completion for a variable like the ${name} above and i can't tab to $1 anymore. \n\nIs there a way i can use code completion inside a snippet flow?\n"}, {'title': 'False positive in file path pattern matching in Output Channel', 'body': '<img width="468" alt="screen shot 2015-11-13 at 3 56 51 pm" src="https://cloud.githubusercontent.com/assets/979966/11139808/877beab8-8a1f-11e5-9555-8d2d4e46edc6.png">\n'}, {'title': 'InputBox and Info|Warning|Error messages overlapping', 'body': 'When an inputbox is displaying at the same time of a message, they are overlapping.\n\n![image](https://cloud.githubusercontent.com/assets/15056200/11123547/36fe61d2-8958-11e5-8b1e-302195cb3760.png)\n\nIt would be nice to have them stack vertically in the order they appeared instead.\n'}, {'title': "Open a folder via navigation bar doesn't work in 0.10.0", 'body': 'I\'m not sure if this is the right place to file this kind of bug. I remove it when it\'s wrong here.\n\nI encountered a strange bug today using 0.10.0. I opened a huge project folder in VSCode and tried to open a subfolder via the navigation bar on the left. The triangle icon changed like the folder has been expanded but no files and subfolders appeared in the list. Even restarting VSCode didn\'t solve the problem.\nThe subfolder contains more than 1000 files and its subfolders contain more than 3000 files.\n\nI use VSCode as my default editor in a huge project so I open the project folder in VSCode everyday and edit the files. After a while the "WORKING FILES" section in the navigation bar contained far more than 100 files from within that specific subfolder. After clearing that list and restarting VSCode I could open all the subfolders again. \n'}, {'title': 'How to add icons and extra descriptions in showQuickPick', 'body': 'How could I accomplish the same visual appearance of image below, with icons at left and the extra description (blue label) at right?\n\n![gallery](https://raw.githubusercontent.com/Microsoft/vscode-extensionbuilders/master/docs/editor/images/extension-gallery/ext.png?token=ADmzMPAfiHGuT-uLjvZ0fKl1wPM1nAu6ks5WQ8qmwA%3D%3D)\n\nSomething simpler (a selectable list) is available with `vscode.window.showQuickPick`, but it only allows a `label` and a `description`, both `string`.\n\nThanks in advance\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwXfxg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "[network] after adding a folder mapped to a SharePoint library, Code editor doesn't work (at all)", 'body': "Not sure this is the right place to ask that.\n\nDo you guys have any update on this issue?\nhttps://code.visualstudio.com/Issues/Detail/18573\n\nThis is currently a **blocker** for my SharePoint plugin, as I can't open project folders (which are network folders on SharePoint sites)\n"}, {'title': 'Is CSP enabled in @code?', 'body': 'See: https://github.com/atom/atom/pull/8697\n\nJust wondering if I can drop my CSP hacks for yeoman. :smile: \n'}, {'title': 'API: Support a multi select list', 'body': ''}, {'title': 'API: Extra events like onPreSaveTextDocument?', 'body': 'It would be nice to have some extra events I guess. The first one I can think of is `onPreSaveTextDocument` (or `onSaveTextDocument`). One that will be invoked right before the document gets saved.\n### Use Cases\n\nThe first one I can think of is my own plugin [final-newline](https://github.com/SamVerschueren/vscode-final-newline) that will insert a final newline at the end of the file when the user saves the document. At the moment it is implemented like this: <kbd>Cmd</kbd> + <kbd>s</kbd> → `Save` → `Insert newline` (if necessary) → `Save`\nThat last save triggers a new iteration of my plugin which will detect a final newline is already present and will stop the execution. So my loop is triggered twice because the plugin is triggered after the document was saved instead of before.\n\nI think there will be other file manipulation plugins that want to manipulate the file before it gets saved as well.\n\nFrom Alex:\n\nI agree some sort of onBeforeSave action is indeed needed, we just need more thinking regarding how to expose this without causing any data loss. If we block the save to wait on extensions, I can imagine it possible that the wait could be indefinite, resulting in data loss. Maybe a time ceiling of 10s, after which the file gets saved...\n\n@bpasero What do you think?\n'}, {'title': 'No intellisense on Linux for ASP .NET 5 coreclr x64 1.0.0.-rc1-final', 'body': 'Today I installed VSCode and tried this tutorial:\n\n[ASP.NET 5 Applications with VS Code](https://code.visualstudio.com/Docs/runtimes/ASPnet5)\n\nI opened Startup.cs and tried the System.Console.WriteLine sample. Intellisense did not show up. Only namespaces are shown after hitting CTRL+SPACE. It does not even recognize the built-in types like string, int, etc. .\n\nI am running VSCode on Debian 8.2 x64.\n\nDo I have to install additional components to make this work?\n'}, {'title': 'Windows: Jump list misses files and folders in the recent category when opened', 'body': 'Somehow on Windows we do not show up with files and folders in the jump list. I think this is some docs what to do to make it happen: https://msdn.microsoft.com/en-us/library/windows/desktop/ee872121(v=vs.85).aspx\n'}, {'title': 'ES6 javascript template syntax hightlighting not using string color', 'body': 'ES6 string template is shown with the same color than expresions/variables.  On 0.9.2 version, the template was using the string color (i.e. red in default light theme) allowing a good discrimination between template and placehoders expressions.\n'}, {'title': 'task runner output doesnt show color for gulp taks with --color switch arg', 'body': 'It is important to have color on the task output window to identify errors and success messagess in jasmine/karms test runner through gulp command. without this it is very hard to troubleshoot your unit test issues and identify issues in the code.\n'}, {'title': '[xml] XML Language color preference parsing degraded in latest release.', 'body': "Prior to yesterday's update, VS code coloring in XML files (specifically web.config) had more variation between various tags and values than the screenshot included.\n\n![capture](https://cloud.githubusercontent.com/assets/355561/11273523/b88f74ea-8ea1-11e5-9c5c-9e8eede4c42d.PNG)\n\nas a comparison, the syntax highlighting in XML under a light themed notepad++ window\n\n![capture](https://cloud.githubusercontent.com/assets/355561/11273814/5d758502-8ea3-11e5-916a-f422c90adea0.PNG)\n\nIs a lot closer to the level of highlighting we used to have in XML files.  DEFAULT TAGS were one color, attributes another, values a third.\n\nPerhaps something broke in XML language parsing?\n"}, {'title': 'support for "complex" data types in C', 'body': 'The C standards from 1999 and on include native complex types (float, double) - this are used by many scientific, currently forced to work on linux and other platforms which support the standard which VC to date has not. Native support for these types would be much appreciated...\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwX-Lw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "dnx web command isn't picked up in OSX vscode beta", 'body': 'I ran the `yo aspnet` and selected web api after following the tutorial. I tried to bring up `dnx web` command by pressing command shift p but it didn\'t find my command even through I could do dnx restore. This command worked from terminal.. Ideas?\n<img width="826" alt="screen shot 2015-11-19 at 9 09 28 am" src="https://cloud.githubusercontent.com/assets/1020579/11274235/4fa07d0c-8e9d-11e5-8bbb-1d5be9480982.png">\n'}, {'title': 'JavaScript syntax highlighting detects wrong string start in regex', 'body': '- Visual Studio Code 0.10.0\n- OS\xa0X 10.11.1\n\n``` javascript\n    var _url = function (data) {\n        if ((/boolean|number|string/).test(typeof data)) {\n            return encodeURIComponent(data).replace(/!/g, "%21").replace(/\'/g, "%27").replace(/\\(/g, "%28").replace(/\\)/g, "%29").replace(/\\*/g, "%2A");\n        } else {\n            return "";\n        }\n    };\n```\n\n![bildschirmfoto 2015-11-19 um 16 05 17](https://cloud.githubusercontent.com/assets/6348321/11274280/28f1f0f6-8ed8-11e5-9e2c-6e22dd7e5f55.png)\n'}, {'title': 'Document dependencies for Ubuntu (and other distros)', 'body': 'On a clean install of Ubuntu, what packages (apt-get) need to be installed to build?  This information is not currently in "How To Contribute"\n'}, {'title': '[scss] IntelliSense Suggestions After Semicolon', 'body': "When editing SCSS files, after typing in a property and entering a semicolon, IntelliSense pops up with arbitrary suggestions. When editing CSS, the popup doesn't appear until you enter a space after the semicolon.\n\n![screen shot 2015-11-19 at 10 20 08 am](https://cloud.githubusercontent.com/assets/1774130/11274499/26ad51d6-8ea7-11e5-9990-ce2638f326b0.png)\n\nIdeally this should happen on enter or space but after you start typing, not before? \n"}, {'title': 'Cannot validate the php file.', 'body': "I do not know how to fix this error - Cannot validate the php file. The php program was not found. Use the 'php.validate.executablePath' setting to configure the location of 'php'\n"}, {'title': "[debug] Option for 'evaluate' if it comes from watch or console", 'body': 'Assigning this to you Andre so you add it to the protocal and then give it back to me to implement.\n\nRequested by @daviwil\n'}, {'title': 'option to not render lines in Debug Console', 'body': 'Requested by @daviwil\n'}, {'title': 'Completely zooming in and out causes font to slightly blur', 'body': "This should probably be very low prio, it probably doesn't happen often.\nIt's also fixed by restarting visual code.\n\nThis is what it looks like default:\n\n![default](https://cloud.githubusercontent.com/assets/4998498/11274683/3350697c-8eda-11e5-8797-806278ef6e93.png)\n\nNow press ctrl++ x 9 times to completely zoom in\nNow press ctrl+- x 9 times to completely zoom out\n\nThe font now seems blurred\n\n![blurred](https://cloud.githubusercontent.com/assets/4998498/11274713/67a06c22-8eda-11e5-95af-0069d0a64892.png)\n\nThis is on Windows 8.1\n![version](https://cloud.githubusercontent.com/assets/4998498/11274754/a86736dc-8eda-11e5-9a5a-c94d8864a009.png)\n\nGreat product btw, I really enjoy using it!\n"}, {'title': '[debug] Debug console should allow newlines in output', 'body': "When I send OutputEvents which contain newlines back from my debug adapter it looks like this:\n\n![image](https://cloud.githubusercontent.com/assets/79405/11275026/89b4c03c-8e90-11e5-81d0-ee5f568b5658.png)\n\nNotice the \\r\\n and the ... at the end of the line.  Would be great if multi-line output would be rendered as expected without the need for sending individual OutputEvents for each line.  Maybe there's some way to do this already that I haven't seen?\n"}, {'title': 'How to debug Meteor app?', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwYf-w==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "[javascript] TextMate themes don't seem to apply to all keywords", 'body': "Since last update the default VS Code dark theme has changed (I like the old one because I just don't want bright red colors on the dark background). So I tried (first time I have to admit) create (or modify) a theme via http://tmtheme-editor.herokuapp.com/\n\nResulting theme is a modification of Visual Studio Dark (uploaded as .txt since .tmTheme is not allowed)\n[Visual Studio Dark Modified.txt](https://github.com/Microsoft/vscode/files/39136/Visual.Studio.Dark.Modified.txt)\n\ntmtheme-editor online interprets theme as follows:\n![image](https://cloud.githubusercontent.com/assets/8778539/11275555/74bee006-8ede-11e5-956a-831aac59ef4e.png)\n\nVS Code however does not interpret theme identically:\n![image](https://cloud.githubusercontent.com/assets/8778539/11275539/65af5708-8ede-11e5-941a-b7a2c89f4ae3.png)\n\nPlease note that this is my first contact with this stuff - I'm not sure if this is an issue related to VS Code of tmtheme-editor\n"}, {'title': 'Quick open filters inconsistently between editor history and file search', 'body': 'It seems the quick open panel doesn\'t detect lots of files, see screenshot below:\n\n![vscode1](https://cloud.githubusercontent.com/assets/199648/11276100/ea59afba-8ee0-11e5-82f1-dd1eb9b9135b.png)\n\nHowever, if a file has been recently opened, it will appear:\n\n![vscode2](https://cloud.githubusercontent.com/assets/199648/11276113/f5ccb0f4-8ee0-11e5-898f-9ef6cfffdf09.png)\n\nAs I see it, in my example, both files should always appear in quick open panel when typing "bar".\n\nWhen working on a big project with lots of files this really becomes a problem.\n\nNote: typing "*bar" is a workaround but only for this particular case.\n'}, {'title': 'Shortcut `use regular expression` mode in Find', 'body': 'Coming from Sublime Text, trying to use Visual Studio Code.\n\nHow can I do the following: Find & select all instances of the `\\w*` regular pattern for example..\n\nIn Sublime Text (default shortcuts):\n1. <kbd>CTRL</kbd>+<kbd>F</kbd>\n2. <kbd>ALT</kbd>+<kbd>R</kbd>\n3. Enter: `\\w*`\n4. <kbd>ALT</kbd>+<kbd>ENTER</kbd>\n\nIn Visual Studio Code (default shortcuts):\n1. <kbd>CTRL</kbd>+<kbd>F</kbd>\n2. ????\n3. Enter: `\\w*`\n4. <kbd>CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>L</kbd>\n5. <kbd>ESC</kbd>\n'}, {'title': 'Copyright scripts need love :heart:', 'body': ''}, {'title': '[tree] Tree hover has black background in dark theme on Linux', 'body': 'Linux, light theme, start debug and hover over any debug tree element. Notice the hover has a black background. I am not styling the tree hover specially so I suspect this is due to the tree styling.\nGiving to you since you might know what it is straight away. Feel free to give back to me.\n\n![image](https://cloud.githubusercontent.com/assets/1926584/11277777/34e6e442-8ee8-11e5-8321-abda949a37a2.png)\n'}, {'title': 'Support Custom User Agent String in http.proxy', 'body': 'The http proxy in my work environment only allows certain user-agent string to get through. It would be great if VSCode can support the overriding of user-agent string when pulling extensions from the marketplace.\n'}, {'title': 'ES6 imports "go to definition" jumps to import, not original definition', 'body': 'When using "go to definition" on a function which has been imported via ES6, vs code jumps to the import statement at the top of the current file. While this might technically be the definition of that variable, it\'s not particularly useful, as I have to click again to jump to the actual definition, then go back twice to return. The same applies to the hover preview - it shows the import statement, not the function\'s original definition. ES6 modules in TypeScript suffer from the same problem.\n'}, {'title': 'VSCode forgets the file that was open after restarting it when uninstalling an extension.', 'body': "Clicking on the Restart Now button after uninstalling an extension loads an empty VSCode instance with an empty new file and forgets the file that I was working on.\n\nOnly happens with files, not if I have a folder open.\n\nI couldn't seem to trace it.\n"}, {'title': 'Ctrl-Shift-Tab File Switching Querk', 'body': "When switching between recent files with the Ctrl-Tab command/menu, if you start going back up the menu with Ctrl-Shift-Tab, the menu closes as soon as Shift is released, even if you're still holding Ctrl. Basically you can't go down the list, go back up, and then go back down again.\n"}, {'title': 'Application freezes after pasting information', 'body': "After install the last update:\nVersion 0.10.1\nCommit df352367df2efcfa9d602d471e4e2f42140a0f05\nShell 0.34.1\nRender 45.0.2454.85\nNode 4.1.1\nWith only paste a text in a new file the entire screen freezes, only the menu bar response but don't work.\nOperating system windows 8.1. \n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwaaow==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'User snippets not working for installed PowerShell extension', 'body': 'It appears that PowerShell user snippets aren\'t working after the user installs the PowerShell extension from the gallery.  I suspect that it has to do with some conflict between the in-box PowerShell support and the installed extension.  When the user clicks "User snippets" in the file menu and gets the language selection popup, PowerShell shows up twice:\n\n![image](https://cloud.githubusercontent.com/assets/79405/11279683/cca617cc-8ea6-11e5-8e22-55be702038ca.png)\n\nI think that since there\'s a single powershell.json for custom user snippets, it\'s only being used for the in-box PowerShell support.\n\nAny chance there\'s a user workaround for this before the issue gets addressed?\n'}, {'title': 'Extension update notifications', 'body': 'Is there any autoupdate mechanism for extensions, or do they need to be updated manually?\n'}, {'title': 'Shell script to install vs code in Unix systems', 'body': "We need a shell script which will be a one click install for vs code in a unix machine, the thing is when we run the app in linux it opens as an internal app and it isn't registered with the machine, we need a `.desktop` file to register an app there, I am willing to submit the patch which I am writing to install vscode in my elementary os desktop, it'd be great if you guys accept it!\n\nWe can distribute it in the code and in the final release.\n"}, {'title': 'Linux: cups and other dependencies', 'body': "In [Requirements](https://code.visualstudio.com/docs/supporting/requirements) VS Code noted as requiring only versions of libc and libcxx defined.\nActual experience showed me that it needs, at least, CUPS installed and refuses to start in the environment lacking libcups.so.2\nAs I am Gentoo user without the need to print stuff from my computer, CUPS wasn't installed and so VS Code refused to start.\n\nPlease, note that CUPS is needed in requirements page or remove dependency.\n\nAlso, curious look at the executable shows me that VS Code depends on number of other libraries, some understandable, some not. For example, Netscape Portable Runtime.\n"}, {'title': 'xml formatting no longer an option', 'body': 'After updating to 0.10.1, I can no longer format code on XML documents\n\nRepro steps:\n1. Open .xml file\n2. Right click, there is no Format Code option\n2 (alternate). Shift+Alt+F, does not format the code\n'}, {'title': 'Supporting creating a new document virtually', 'body': 'Extensions should be able to create a new panel/document and open it in the editor, much like how markdown preview does. \n'}, {'title': 'Markdown syntax broken since last update', 'body': "Since last update markdown syntax doesn't work the way it worked before.\n\nonly links and tabbed lines are colored red. the rest is plain white, it's like reading from notepad.\n\n![untitled](https://cloud.githubusercontent.com/assets/8350237/11281990/64ce064e-8efd-11e5-8270-fa49fe28d0aa.png)\n"}, {'title': 'Debugging asp.net 5 applications', 'body': 'On https://code.visualstudio.com/Docs/editor/debugging the following question is asked:\n\nQ: What are the supported debugging scenarios?\n\nA: Debugging of Node.js based applications is supported on Linux, OS X, and Windows. Debugging of C# applications running on Mono is supported on Linux and OS X. ASP.NET 5 applications are compiled using the Roslyn compiler, not the Mono compiler. **ASP.NET 5 debugging will be available through a VS Code extension**.\n\nAnd as extension now are available in vscode, will we be able to debug ASP.NET 5 applications soon?\n'}, {'title': '[jade] colorizing broken', 'body': "Hello,\n\nAfter the last update, Jade's highlighting is full of blue.\n\nThanks.\n"}, {'title': 'Regex unable to find/replace blank lines', 'body': 'Using regex expressions am unable to find empty lines. Tried both the end of line sequence. \nCopying the same text in sublime simple \\n finds all the blank lines. \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwcTZQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Reverse the Notification Stacking Order', 'body': "Typically with notifications that slide down vertically (ie. growl), the newest item should be on top and the older items get pushed down. \n\nWhat currently happens is the new notification is _appended_ to the bottom of the list and the entire list slides down again. This is very visually confusing and doesn't fit the common UI pattern for this sort of notification. \n\n![image](https://cloud.githubusercontent.com/assets/8117360/11283830/d09f3d14-8ec3-11e5-9de8-d958e5692476.png)\n\n![image](https://cloud.githubusercontent.com/assets/8117360/11283730/55976150-8ec3-11e5-8ce5-6582e7815bf8.png)\n"}, {'title': 'Microsoft Edge not included in IntelliSense browser support info', 'body': "https://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/src/vs/languages/css/common/services/languageFacts.ts#L476\n\nThe auto-complete lacks MS Edge info. Presumably it needs to be added at the line above. I can make the PR request myself if needed, but I'm not sure if it needs plumbed in in other locations too?\n"}, {'title': 'Git remote options (push, pull & sync) are disabled', 'body': "Although my local git repository has a remote repo setup and it is behind the remote the options to push, pull or sync are disabled.\n\n```\ngit remote -v\norigin  https://github.com/daniel-a-melo/angular-typescript.git (fetch)\norigin  https://github.com/daniel-a-melo/angular-typescript.git (push)\n\ngit status\n# On branch master\n# Your branch is ahead of 'origin/master' by 1 commit.\n#\nnothing to commit (working directory clean)\n```\n\nGit Output : \n\n```\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:tsconfig.json\ngit show HEAD:tsconfig.json\ngit show HEAD:gulpfile.js\ngit show HEAD:tsconfig.json\ngit show HEAD:gulpfile.js\ngit show HEAD:tsconfig.json\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesListController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesListController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit fetch\ngit show HEAD:src/test/controllers/SpeciesListControllerTest.ts\ngit show HEAD:src/test/controllers/SpeciesListControllerTest.ts\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit fetch\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit fetch\ngit fetch\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit fetch\ngit show HEAD:src/ts/controllers/SpeciesFormController.ts\ngit show HEAD:src/ts/controllers/SpeciesFormController.ts\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit show HEAD:.vscode/launch.json\ngit show HEAD:.vscode/launch.json\ngit fetch\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit fetch\ngit fetch\ngit fetch\ngit fetch\ngit fetch\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesFormController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesListController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesListController.js\ngit show HEAD:app/transpiled/ts/controllers/SpeciesListController.js.map\ngit show HEAD:app/transpiled/ts/controllers/SpeciesListController.js.map\ngit fetch\ngit fetch\ngit fetch\ngit show HEAD:karma.conf.js\ngit show HEAD:karma.conf.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit fetch\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit show HEAD:src/ts/controllers/SpeciesListController.ts\ngit fetch\ngit fetch\ngit fetch\ngit show HEAD:app/transpiled/test/controllers/SpeciesListControllerTest.js\ngit show HEAD:app/transpiled/test/controllers/SpeciesListControllerTest.js\ngit fetch\ngit fetch\ngit fetch\ngit fetch\ngit fetch\ngit fetch\ngit show HEAD:tsconfig.json\ngit show HEAD:tsconfig.json\ngit show HEAD:gulpfile.js\ngit show HEAD:gulpfile.js\ngit add -A -- tsconfig.json\ngit add -A -- gulpfile.js\ngit commit --quiet --allow-empty-message --file -\ngit fetch\ngit fetch\ngit fetch\n```\n"}, {'title': 'Where is Electron?', 'body': 'When I run "code ." from the command line, I keep getting a dialog popping up saying "Where is Electron?" and asking me to locate it on disk.\n- Why is it asking me this?\n- What can I do about it?\n\n![screen shot 2015-11-19 at 1 14 20 pm](https://cloud.githubusercontent.com/assets/82750/11284593/815e82ae-8ebf-11e5-8627-9e3e62bffaf5.png)\n\nI\'m running Version 0.10.1 on Mac OS.\n'}, {'title': 'ESLint works when ESLint extension is installed. Docs describes ESLint support without mentioning the extension', 'body': "The docs at https://code.visualstudio.com/docs/languages/javascript describes configuration of ESLint. However, it didn't work out of the box as I expected.\n\nI had to install the ESLint extension then it worked as documented. \n\nThe documentation doesn't mention the extension. Should it or am I missing something?\n"}, {'title': 'Add option to display trailing whitespace', 'body': "vscode currently has functionality to automatically delete trailing whitespace when a file is saved. That is pretty good, but I think this is insufficient: I have encountered a few times where trailing whitespace was _required_ because of various reasons, and thus enabling automatic removal makes me a bit uncomfortable because it would mess up with those cases.\n\nI think it'd be beneficial if there was an option to display trailing whitespace instead.\n\nThe way this would work is by displaying the trailing whitespace in red. It is important to only display the trailing whitespace when the cursor is _not_ positioned after the trailing whitespace: you do not want to see the scary red box when you hit Enter to start a new line and the new line is autoindented. The trailing whitespace is then clearly visible at any time and can be dealt with immediately.\n\nOther, more mature editors do this.\n"}, {'title': 'Debugging without an open folder', 'body': 'Why is folder required to have debugging enabled? \nCase in point - trying out single file ps scripts. Am I missing something? \n'}, {'title': '[json] Can\'t find/use tmLanguage scope "source.json"', 'body': 'I\'ve installed the Asciidoc extension (https://marketplace.visualstudio.com/items/justusadam.language-asciidoc) but can\'t get syntax highlighting on [source,json] blocks.\n\nAnalysing the ".tmLanguage" file I\'ve tested switching "source.json" with "source.js" and it worked as expected (for javascript), however the syntax is not the one expected for json (like in .md files):\n\nBefore change:\n![image](https://cloud.githubusercontent.com/assets/840518/11285175/54ae1a9a-8ef5-11e5-8d46-126b9013d297.png)\n\nAfter change:\n![image](https://cloud.githubusercontent.com/assets/840518/11285250/ade9174a-8ef5-11e5-8228-4251f29c5096.png)\n\nExpected:\n![image](https://cloud.githubusercontent.com/assets/840518/11285326/1419e8aa-8ef6-11e5-8ea7-b917bd50b170.png)\n\nI\'ve also looked for "source.json" scopeName in all files of this repository (Branch: master) but couldn\'t find it.\n\nThanks in advance for your attention. =)\n'}, {'title': 'Editor no longer closes quotes for PHP', 'body': "After last update, editor no longer closes quotes (double|single) on PHP files. Does close quotes on settings file. Can't find setting to control as such. Brackets work fine. \n"}, {'title': 'Missing length units in CSS autocomplete ', 'body': '- ch unit \n- q unit (this is not supported anywhere yet)\n- viewport relative units\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwdWRA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'persisting zoom in/zoom out settings', 'body': 'The magnification settings (Ctrl+/Ctrl-) reset to the default between sessions, and they also reset to default when opening a new folder. It would be great if these settings were stickier, as they are in many other editors - would eliminate some clumsiness when using Code in presentations, for example.\n'}, {'title': 'Unable to specify a search sub-folder', 'body': 'Surprisingly, there is no way to specify a search folder location. VS Code forces me to use the base folder for all my searches (and the base folder contains a lot of files). \n\nSublime Text allows me to specify a sub-folder to reduce the scope of the search. \n\nThis, combined with the other issue #63 makes it impossible for me to switch from Sublime Text to Code. \n'}, {'title': 'Missing <angle> and <resolution> units in CSS auto-complete', 'body': '- turn missing from <angle> http://www.w3.org/TR/css3-values/#angles\n- dppx missing from <resolution> http://www.w3.org/TR/css3-values/#resolution-value\n'}, {'title': 'For large git repositories the git integration button shows a visually distracting clock periodically', 'body': '`git status` takes around 2 seconds to run on my large repository, the blue clock icon on git integration to indicate "working" can be quite visually distracting as it seems to ping the repo every 5-10 seconds.\n\n![git](https://cloud.githubusercontent.com/assets/2193314/11287544/4a6665ac-8ed1-11e5-8b46-31fb323a658e.png)\n\nI\'m not so sure there is a benefit in indicating work unless the user explicitly requested it, such as when clicking the button.\n'}, {'title': 'Electron segmentation fault', 'body': "I tried updating to the latest beta but code won't open now.  When trying to open the application it starts to launch then closes itself. Trying to open Code from the command line says there is a segmentation  fault.  Tried re-installing but that didn't help.\n\nOnce I got the following error.\n\nProcess:         Electron [18388]\nPath:            /Users/USER/Downloads/Visual Studio Code.app/Contents/MacOS/Electron\nIdentifier:      com.microsoft.VSCode\nVersion:         0.10.1 (0.10.1)\nCode Type:       X86-64 (Native)\nParent Process:  launchd [213]\nUser ID:         202012426\n\nDate/Time:       2015-11-19 17:10:33.023 -0500\nOS Version:      Mac OS X 10.8.5 (12F2560)\nReport Version:  10\n\nInterval Since Last Report:          21064 sec\nCrashes Since Last Report:           3\nPer-App Crashes Since Last Report:   1\nAnonymous UUID:                      693BE91A-CA6B-164B-D570-C9742A79A0A9\n\nCrashed Thread:  0  Dispatch queue: com.apple.main-thread\n\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\nException Codes: KERN_INVALID_ADDRESS at 0x0000000000000000\n\nVM Regions Near 0:\n--> \n    __TEXT                 00000001058f0000-00000001058f1000 [    4K] r-x/rwx SM=COW  /Users/USER/Downloads/Visual Studio Code.app/Contents/MacOS/Electron\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff8249e670 strlen + 16\n1   com.github.electron.framework   0x00000001075e2e62 0x1058f9000 + 30318178\n2   com.github.electron.framework   0x000000010596f5a0 atom::AtomBrowserMainParts::PreMainMessageLoopStart() + 16\n3   com.github.electron.framework   0x0000000105f5f2d3 0x1058f9000 + 6709971\n4   com.github.electron.framework   0x0000000105f64adc 0x1058f9000 + 6732508\n5   com.github.electron.framework   0x0000000105f5eac7 0x1058f9000 + 6707911\n6   com.github.electron.framework   0x0000000105ee89dc 0x1058f9000 + 6224348\n7   com.github.electron.framework   0x0000000105ee8036 0x1058f9000 + 6221878\n8   com.github.electron.framework   0x00000001058fb18d AtomMain + 77\n9   com.microsoft.VSCode            0x00000001058f0eea main + 58\n10  libdyld.dylib                   0x00007fff8c46f7e1 start + 1\n\nThread 1:\n0   libsystem_kernel.dylib          0x00007fff8633c6d6 __workq_kernreturn + 10\n1   libsystem_c.dylib               0x00007fff824b2f1c _pthread_workq_return + 25\n2   libsystem_c.dylib               0x00007fff824b2ce3 _pthread_wqthread + 412\n3   libsystem_c.dylib               0x00007fff8249d191 start_wqthread + 13\n\nThread 2:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff8633cd16 kevent + 10\n1   libdispatch.dylib               0x00007fff82a50dea _dispatch_mgr_invoke + 883\n2   libdispatch.dylib               0x00007fff82a509ee _dispatch_mgr_thread + 54\n\nThread 3:\n0   libsystem_kernel.dylib          0x00007fff8633c6d6 __workq_kernreturn + 10\n1   libsystem_c.dylib               0x00007fff824b2f1c _pthread_workq_return + 25\n2   libsystem_c.dylib               0x00007fff824b2ce3 _pthread_wqthread + 412\n3   libsystem_c.dylib               0x00007fff8249d191 start_wqthread + 13\n\nThread 4:: WorkerPool/13827\n0   libsystem_kernel.dylib          0x00007fff8633c0fa __psynch_cvwait + 10\n1   libsystem_c.dylib               0x00007fff824b4ff3 _pthread_cond_wait + 927\n2   com.github.electron.framework   0x0000000105ab25fb 0x1058f9000 + 1807867\n3   com.github.electron.framework   0x0000000105ac49fc 0x1058f9000 + 1882620\n4   com.github.electron.framework   0x0000000105ac4eb4 0x1058f9000 + 1883828\n5   com.github.electron.framework   0x0000000105abf33b 0x1058f9000 + 1860411\n6   libsystem_c.dylib               0x00007fff824b0772 _pthread_start + 327\n7   libsystem_c.dylib               0x00007fff8249d1a1 thread_start + 13\n\nThread 5:: WorkerPool/12811\n0   libnode.dylib                   0x0000000109ea284b v8::internal::LAllocator::AllocateRegisters() + 1323\n1   libnode.dylib                   0x0000000109ea0e04 v8::internal::LAllocator::Allocate(v8::internal::LChunk_) + 468\n2   libnode.dylib                   0x0000000109ea818f v8::internal::LChunk::NewChunk(v8::internal::HGraph_) + 255\n3   libnode.dylib                   0x0000000109cdb176 v8::internal::OptimizedCompileJob::OptimizeGraph() + 70\n4   libnode.dylib                   0x0000000109f0bc01 v8::internal::OptimizingCompileDispatcher::CompileNext(v8::internal::OptimizedCompileJob*) + 33\n5   libnode.dylib                   0x0000000109f0cbb6 0x109847000 + 7101366\n6   com.github.electron.framework   0x0000000105ac4e42 0x1058f9000 + 1883714\n7   com.github.electron.framework   0x0000000105abf33b 0x1058f9000 + 1860411\n8   libsystem_c.dylib               0x00007fff824b0772 _pthread_start + 327\n9   libsystem_c.dylib               0x00007fff8249d1a1 thread_start + 13\n\nThread 0 crashed with X86 Thread State (64-bit):\n  rax: 0x00000000ffffffff  rbx: 0x0000000000000000  rcx: 0x0000000000000000  rdx: 0x0000000000000000\n  rdi: 0x0000000000000000  rsi: 0x00007fff8ae53990  rbp: 0x00007fff5a30f970  rsp: 0x00007fff5a30f938\n   r8: 0x00007fd732a003c0   r9: 0x00000000b2fb8644  r10: 0x00007fd732e0fbb0  r11: 0x00007fff82adf0d1\n  r12: 0x0000000000000000  r13: 0x0000000000000000  r14: 0x00000001091c7e05  r15: 0x00007fd732e13dd8\n  rip: 0x00007fff8249e670  rfl: 0x0000000000010286  cr2: 0x0000000000000000\nLogical CPU: 6\n\nBinary Images:\n       0x1058f0000 -        0x1058f0ff7 +com.microsoft.VSCode (0.10.1 - 0.10.1) <074B4136-D76D-3961-89C9-63A495167516> /Users/USER/Downloads/Visual Studio Code.app/Contents/MacOS/Electron\n       0x1058f9000 -        0x108f25f97 +com.github.electron.framework (0) <6AE465ED-B1E7-3484-9CE0-AFC35A71CBFF> /Users/USER/Downloads/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework\n       0x109706000 -        0x10971bff7 +com.github.Squirrel (1.0 - 1) <C39DE518-902E-3EBE-B1A6-B4E7AE668521> /Users/USER/Downloads/Visual Studio Code.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel\n       0x10973c000 -        0x10979fff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/Downloads/Visual Studio Code.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa\n       0x109818000 -        0x10982cfff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/Downloads/Visual Studio Code.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle\n       0x109847000 -        0x10a400ff7 +libnode.dylib (0) <E7F96864-5A6F-37C4-B7A9-006481491759> /Users/USER/Downloads/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib\n       0x10a7f7000 -        0x10a841ff7  com.apple.audio.midi.CoreMIDI (1.9 - 78) <67E0B007-AE92-337E-A714-3455729EE240> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI\n       0x10a870000 -        0x10b20aa97  com.apple.CoreGraphics (1.600.0 - 340.4) <1B66B1D3-C371-329C-92AB-45C262241649> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    0x7fff654f0000 -     0x7fff6552493f  dyld (210.2.3) <36CAA36E-72BC-3E48-96D9-B96A2DF77730> /usr/lib/dyld\n    0x7fff806e1000 -     0x7fff8073bff7  com.apple.opencl (2.2.19 - 2.2.19) <3C7DFB2C-B3F9-3447-A1FC-EAAA42181A6E> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\n    0x7fff8073c000 -     0x7fff8075dfff  com.apple.Ubiquity (1.2 - 243.15) <C9A7EE77-B637-3676-B667-C0843BBB0409> /System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity\n    0x7fff8075e000 -     0x7fff80766fff  liblaunch.dylib (442.26.2) <2F71CAF8-6524-329E-AC56-C506658B4C0C> /usr/lib/system/liblaunch.dylib\n    0x7fff809dd000 -     0x7fff809f0ff7  com.apple.LangAnalysis (1.7.0 - 1.7.0) <023D909C-3AFA-3438-88EB-05D0BDA5AFFE> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\n    0x7fff809f1000 -     0x7fff80a8fff7  com.apple.ink.framework (10.8.2 - 150) <3D8D16A2-7E01-3EA1-B637-83A36D353308> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\n    0x7fff80a90000 -     0x7fff80a94fff  libCoreVMClient.dylib (32.5) <DB009CD4-BB0E-3331-BBB4-A118781D193F> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\n    0x7fff80a95000 -     0x7fff80aa2fff  com.apple.AppleFSCompression (49 - 1.0) <E616053D-D3C2-3600-B8DF-A5E0D9665634> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\n    0x7fff80aa3000 -     0x7fff80acdff7  com.apple.CoreVideo (1.8 - 99.4) <E5082966-6D81-3973-A05A-38AA5B85F886> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\n    0x7fff80ace000 -     0x7fff80adcff7  libkxld.dylib (2050.48.19) <C2A24ADB-71E6-37F8-906C-078D9E4A88F1> /usr/lib/system/libkxld.dylib\n    0x7fff80b0f000 -     0x7fff80b14fff  com.apple.OpenDirectory (10.8 - 151.10) <1F47EC96-7403-3690-8D8D-C31D3B6FDA0A> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\n    0x7fff80b44000 -     0x7fff80bd1ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <54A8069C-E497-3B07-BEA7-D3BC9DB5B649> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\n    0x7fff80bd2000 -     0x7fff80d30fef  com.apple.MediaControlSender (1.7 - 170.20) <853BE89D-49B0-3922-9ED5-DDBDE9A97356> /System/Library/PrivateFrameworks/MediaControlSender.framework/Versions/A/MediaControlSender\n    0x7fff80d31000 -     0x7fff80d37fff  com.apple.DiskArbitration (2.5.2 - 2.5.2) <C713A35A-360E-36CE-AC0A-25C86A3F50CA> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    0x7fff80d44000 -     0x7fff80f2eff7  com.apple.CoreFoundation (6.8 - 744.19) <0F7403CA-2CB8-3D0A-992B-679701DF27CA> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n    0x7fff80f2f000 -     0x7fff80fd5ff7  com.apple.CoreServices.OSServices (557.6 - 557.6) <E91B0882-E75C-30E9-8DCD-7A0EEE4405CC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\n    0x7fff81031000 -     0x7fff81074ff7  com.apple.RemoteViewServices (2.0 - 80.6) <5CFA361D-4853-3ACC-9EFC-A2AC1F43BA4B> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\n    0x7fff81075000 -     0x7fff8108cfff  libGL.dylib (8.10.1) <F8BABA3C-7810-3A65-83FC-61945AA50E90> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\n    0x7fff8108d000 -     0x7fff81097fff  com.apple.speech.recognition.framework (4.1.5 - 4.1.5) <5A4B532E-3428-3F0A-8032-B0AFFF72CA3D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\n    0x7fff81098000 -     0x7fff81098fff  com.apple.CoreServices (57 - 57) <45F1466A-8264-3BB7-B0EC-E5E5BFBED143> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    0x7fff810c8000 -     0x7fff810c9ff7  libremovefile.dylib (23.2) <6763BC8E-18B8-3AD9-8FFA-B43713A7264F> /usr/lib/system/libremovefile.dylib\n    0x7fff810ca000 -     0x7fff811bffff  libiconv.2.dylib (34) <FEE8B996-EB44-37FA-B96E-D379664DEFE1> /usr/lib/libiconv.2.dylib\n    0x7fff81210000 -     0x7fff812abff7  com.apple.CoreSymbolication (3.0 - 117.3) <7722470A-2BA5-3526-9D3B-D3B9E5B517A7> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\n    0x7fff812f9000 -     0x7fff81412fff  com.apple.ImageIO.framework (3.2.2 - 854) <D1F32C1E-A1C8-364B-A654-412C706B1EB6> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    0x7fff814bb000 -     0x7fff814bfff7  com.apple.CommonPanels (1.2.5 - 94) <5F81D593-4B87-3DCC-B934-625D436B4CB1> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\n    0x7fff81d76000 -     0x7fff81dc2fff  com.apple.framework.CoreWLAN (3.4 - 340.18) <3735FB49-30C0-3B11-BE25-2ACDD96041B5> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\n    0x7fff81dc3000 -     0x7fff81e5dfff  libvMisc.dylib (380.10) <A7F12764-A94C-36EB-88E0-F826F5AF55B4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\n    0x7fff820cc000 -     0x7fff820ceff7  com.apple.print.framework.Print (8.0 - 258) <8F243E49-021F-3892-B555-3010A7F450A2> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\n    0x7fff820cf000 -     0x7fff821a1ff7  com.apple.CoreText (275.18 - 275.18) <1574E725-4AED-3439-B6AA-E30F6BD7A9ED> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    0x7fff821a2000 -     0x7fff821f9ff7  com.apple.AppleVAFramework (5.0.19 - 5.0.19) <541A7DBE-F8E4-3023-A3C0-8D5A2A550CFB> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\n    0x7fff821fa000 -     0x7fff82219ff7  com.apple.ChunkingLibrary (2.0 - 133.3) <8BEC9AFB-DCAA-37E8-A5AB-24422B234ECF> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\n    0x7fff8249c000 -     0x7fff82568ff7  libsystem_c.dylib (825.40.1) <543B05AE-CFA5-3EFE-8E58-77225411BA6B> /usr/lib/system/libsystem_c.dylib\n    0x7fff8266e000 -     0x7fff826bdff7  libFontRegistry.dylib (100.1) <0537E4AD-6CC5-37D1-9846-4F6C46735387> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\n    0x7fff8298c000 -     0x7fff82a49ff7  com.apple.ColorSync (4.8.0 - 4.8.0) <73BE495D-8985-3B88-A7D0-23DF0CB50304> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\n    0x7fff82a4c000 -     0x7fff82a61ff7  libdispatch.dylib (228.23) <D26996BF-FC57-39EB-8829-F63585561E09> /usr/lib/system/libdispatch.dylib\n    0x7fff82a62000 -     0x7fff82a70ff7  libsystem_network.dylib (77.10) <2AAA67A1-525E-38F0-8028-1D2B64716611> /usr/lib/system/libsystem_network.dylib\n    0x7fff82a71000 -     0x7fff82dd0fff  com.apple.Foundation (6.8 - 945.19) <C98E55BA-553B-314B-B056-849FFB20C220> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    0x7fff82ddf000 -     0x7fff82de1fff  libCVMSPluginSupport.dylib (8.10.1) <F0239392-E0CB-37D7-BFE2-D6F5D42F9196> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\n    0x7fff82de2000 -     0x7fff82de2fff  com.apple.Cocoa (6.7 - 19) <3CFC90D2-2BE9-3E5C-BFDB-5E161A2C2B29> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\n    0x7fff8316f000 -     0x7fff83174fff  libcompiler_rt.dylib (30) <08F8731D-5961-39F1-AD00-4590321D24A9> /usr/lib/system/libcompiler_rt.dylib\n    0x7fff8395c000 -     0x7fff83c00ff7  com.apple.CoreImage (8.4.0 - 1.0.1) <CC6DD22B-FFC6-310B-BE13-2397A02C79EF> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage\n    0x7fff83c01000 -     0x7fff83c08fff  com.apple.NetFS (5.0 - 4.0) <195D8EC9-72BB-3E04-A64D-E1A89B4850C1> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\n    0x7fff83c0a000 -     0x7fff83c55fff  com.apple.CoreMedia (1.0 - 926.107) <405690E6-D857-3136-AC3A-5EDC6C3ABF60> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\n    0x7fff83c5a000 -     0x7fff83cb1ff7  com.apple.ScalableUserInterface (1.0 - 1) <93C14595-6172-37E9-88F2-CBC80A1C54D0> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/ScalableUserInterface.framework/Versions/A/ScalableUserInterface\n    0x7fff83cb2000 -     0x7fff83ccfff7  com.apple.openscripting (1.3.6 - 148.3) <C008F56A-1E01-3D4C-A9AF-97799D0FAE69> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\n    0x7fff83d22000 -     0x7fff83d24fff  libquarantine.dylib (52.1) <143B726E-DF47-37A8-90AA-F059CFD1A2E4> /usr/lib/system/libquarantine.dylib\n    0x7fff83da0000 -     0x7fff83da0fff  com.apple.vecLib (3.8 - vecLib 3.8) <6CBBFDC4-415C-3910-9558-B67176447789> /System/Library/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff83db6000 -     0x7fff83e90fff  com.apple.backup.framework (1.4.3 - 1.4.3) <6B65C44C-7777-3331-AD9D-438D10AAC777> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\n    0x7fff83e91000 -     0x7fff83f93fff  libJP2.dylib (854) <D94809A5-6212-35DA-A345-E5F57FF1A069> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\n    0x7fff83f94000 -     0x7fff83f96fff  com.apple.securityhi (4.0 - 55002) <26E6D477-EF61-351F-BA8C-67824AA231C6> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\n    0x7fff83fa6000 -     0x7fff84009fff  com.apple.audio.CoreAudio (4.1.2 - 4.1.2) <FEAB83AB-1DE5-3813-BA48-7A7F2374CCF0> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\n    0x7fff8400a000 -     0x7fff8400bfff  libDiagnosticMessagesClient.dylib (8) <8548E0DC-0D2F-30B6-B045-FE8A038E76D8> /usr/lib/libDiagnosticMessagesClient.dylib\n    0x7fff8400c000 -     0x7fff8400dff7  libSystem.B.dylib (169.3) <92475A81-385C-32B9-9D6D-38E4BAC90996> /usr/lib/libSystem.B.dylib\n    0x7fff84293000 -     0x7fff842a0ff7  com.apple.NetAuth (4.0 - 4.0) <A4A21A2F-B26A-3DC9-95E4-DAFA43A4A2C3> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\n    0x7fff842a1000 -     0x7fff842f0ff7  libcorecrypto.dylib (106.2) <CE0C29A3-C420-339B-ADAA-52F4683233CC> /usr/lib/system/libcorecrypto.dylib\n    0x7fff84418000 -     0x7fff84480fff  libvDSP.dylib (380.10) <3CA154A3-1BE5-3CF4-BE48-F0A719A963BB> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\n    0x7fff84731000 -     0x7fff8473ffff  libcommonCrypto.dylib (60027) <BAAFE0C9-BB86-3CA7-88C0-E3CBA98DA06F> /usr/lib/system/libcommonCrypto.dylib\n    0x7fff84740000 -     0x7fff8474cfff  com.apple.CrashReporterSupport (10.8.3 - 418) <DE6AFE16-D97E-399D-82ED-3522C773C36E> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\n    0x7fff8474d000 -     0x7fff84751ff7  com.apple.TCC (1.0 - 1) <F2F3B753-FC73-3543-8BBE-859FDBB4D6A6> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\n    0x7fff847a9000 -     0x7fff847aaff7  libdnsinfo.dylib (453.19) <14202FFB-C3CA-3FCC-94B0-14611BF8692D> /usr/lib/system/libdnsinfo.dylib\n    0x7fff847ab000 -     0x7fff847c5fff  com.apple.CoreMediaAuthoring (2.1 - 914) <23F2B9D0-7B73-3C42-8EDC-8ADBF9C7B8C2> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring\n    0x7fff847c6000 -     0x7fff847d1ff7  com.apple.bsd.ServiceManagement (2.0 - 2.0) <C12962D5-85FB-349E-AA56-64F4F487F219> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\n    0x7fff847d7000 -     0x7fff84858fff  com.apple.Metadata (10.7.0 - 707.13) <4F3EAB8E-CF5E-320E-A452-6CAFB96CF590> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\n    0x7fff84959000 -     0x7fff84b8eff7  com.apple.CoreData (106.1 - 407.7) <A676E1A4-2144-376B-92B8-B450DD1D78E5> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\n    0x7fff84b8f000 -     0x7fff84bd9ff7  libGLU.dylib (8.10.1) <6699DEA6-9EEB-3B84-A57F-B25AE44EC584> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\n    0x7fff84cf5000 -     0x7fff85112fff  FaceCoreLight (2.4.1) <DDAFFD7A-D312-3407-A010-5AEF3E17831B> /System/Library/PrivateFrameworks/FaceCoreLight.framework/Versions/A/FaceCoreLight\n    0x7fff85170000 -     0x7fff85174fff  com.apple.IOSurface (86.0.5 - 86.0.5) <4841B89D-501E-306D-8891-3651AA9326E6> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\n    0x7fff85175000 -     0x7fff851a1fff  com.apple.framework.Apple80211 (8.5 - 850.252) <73506CA1-CF76-3A98-A6F2-3DDAC10CB67A> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\n    0x7fff851a8000 -     0x7fff851a8fff  com.apple.Carbon (154 - 155) <1B2846B1-384E-3D1C-8999-201215723349> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    0x7fff851a9000 -     0x7fff851b0fff  libGFXShared.dylib (8.10.1) <B4AB9480-2CDB-34F8-8D6F-F5A2CFC221B0> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\n    0x7fff85214000 -     0x7fff85260ff7  libauto.dylib (185.4) <AD5A4CE7-CB53-313C-9FAE-673303CC2D35> /usr/lib/libauto.dylib\n    0x7fff852a8000 -     0x7fff85456fff  com.apple.QuartzCore (1.8 - 304.5) <5674D50C-D96C-3A2D-95C5-C93311C7FB56> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\n    0x7fff854b7000 -     0x7fff85525fff  com.apple.framework.IOKit (2.0.1 - 755.42.2) <18E64CC5-2671-3C47-B2C6-0EEEDF899461> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    0x7fff8556d000 -     0x7fff8566aff7  libxml2.2.dylib (22.3) <7FD09F53-83DA-3ECD-8DD9-870E1A2F0427> /usr/lib/libxml2.2.dylib\n    0x7fff856a6000 -     0x7fff856e0ff7  com.apple.GSS (3.0 - 2.0) <A358661E-DEE1-3FFA-B6A0-D34F7781BCF6> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\n    0x7fff856e1000 -     0x7fff85998fff  com.apple.MediaToolbox (1.0 - 926.107) <C8D74764-AD2C-3B8D-9AED-75E1A0176EFD> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox\n    0x7fff85999000 -     0x7fff859b0fff  com.apple.CFOpenDirectory (10.8 - 151.10) <10F41DA4-AD54-3F52-B898-588D9A117171> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\n    0x7fff859f4000 -     0x7fff85a1bfff  com.apple.framework.familycontrols (4.1 - 410) <50F5A52C-8FB6-300A-977D-5CFDE4D5796B> /System/Library/PrivateFrameworks/FamilyControls.framework/Versions/A/FamilyControls\n    0x7fff85a1c000 -     0x7fff85a4aff7  libsystem_m.dylib (3022.6) <11B6081D-6212-3EAB-9975-BED6234BD6A5> /usr/lib/system/libsystem_m.dylib\n    0x7fff85a5d000 -     0x7fff85a64ff7  libcopyfile.dylib (89.0.70) <30824A67-6743-3D99-8DC3-92578FA9D7CB> /usr/lib/system/libcopyfile.dylib\n    0x7fff85aed000 -     0x7fff85aedfff  com.apple.Accelerate (1.8 - Accelerate 1.8) <878A6E7E-CB34-380F-8212-47FBF12C7C96> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\n    0x7fff85af0000 -     0x7fff85c0892f  libobjc.A.dylib (532.2) <90D31928-F48D-3E37-874F-220A51FD9E37> /usr/lib/libobjc.A.dylib\n    0x7fff85c09000 -     0x7fff85c3ffff  libsystem_info.dylib (406.18) <32D9AC7E-3906-3EA7-9FEB-4BD333F14A01> /usr/lib/system/libsystem_info.dylib\n    0x7fff85c40000 -     0x7fff85ca9fff  libstdc++.6.dylib (56) <EAA2B53E-EADE-39CF-A0EF-FB9D4940672A> /usr/lib/libstdc++.6.dylib\n    0x7fff85caa000 -     0x7fff85fdafff  com.apple.HIToolbox (2.0 - 626.1) <656D08C2-9068-3532-ABDD-32EC5057CCB2> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\n    0x7fff86224000 -     0x7fff8628cff7  libc++.1.dylib (65.1) <E5A0C88E-0837-3015-A987-F8C5A0D35DD6> /usr/lib/libc++.1.dylib\n    0x7fff8632a000 -     0x7fff86345ff7  libsystem_kernel.dylib (2050.48.19) <81945B94-D6CB-3B77-9E95-0429540B0DF0> /usr/lib/system/libsystem_kernel.dylib\n    0x7fff865ed000 -     0x7fff865efff7  libunc.dylib (25) <2FDC94A7-3039-3680-85F3-2164E63B464D> /usr/lib/system/libunc.dylib\n    0x7fff865f0000 -     0x7fff86626fff  com.apple.DebugSymbols (98 - 98) <7059F71D-9A82-3D32-99BB-E043DEDA6174> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\n    0x7fff86628000 -     0x7fff86667ff7  com.apple.QD (3.42.1 - 285.1) <77A20C25-EBB5-341C-A05C-5D458B97AD5C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\n    0x7fff8666c000 -     0x7fff8671efff  com.apple.Bluetooth (4.1.7 - 4.1.7f6) <2D72C6B0-5317-3004-83A7-F9975E637013> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\n    0x7fff8671f000 -     0x7fff86894fff  com.apple.CFNetwork (596.6.4 - 596.6.4) <23B87D38-D2C1-38FE-8407-471F0CEB2748> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    0x7fff86895000 -     0x7fff86992fff  libsqlite3.dylib (138.1) <ADE9CB98-D77D-300C-A32A-556B7440769F> /usr/lib/libsqlite3.dylib\n    0x7fff86993000 -     0x7fff86993ffd  com.apple.audio.units.AudioUnit (1.9.2 - 1.9.2) <6D314680-7409-3BC7-A807-36341411AF9A> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\n    0x7fff86abf000 -     0x7fff86b3dfff  com.apple.ApplicationServices.ATS (341.2 - 341.5) <6B5001BF-101E-3135-9D1A-AD83ECD73C7A> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\n    0x7fff86ba6000 -     0x7fff86bd7ff7  com.apple.DictionaryServices (1.2 - 184.4) <FB0540FF-5034-3591-A28D-6887FBC220F7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\n    0x7fff86c20000 -     0x7fff86ca2fff  com.apple.Heimdal (3.0 - 2.0) <716C152F-D299-3ACB-BCB0-E51F2D604BD1> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\n    0x7fff86ca3000 -     0x7fff86cb7fff  com.apple.speech.synthesis.framework (4.1.12 - 4.1.12) <94EDF2AB-809C-3D15-BED5-7AD45B2A7C16> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\n    0x7fff86d00000 -     0x7fff86d06ff7  libunwind.dylib (35.1) <21703D36-2DAB-3D8B-8442-EAAB23C060D3> /usr/lib/system/libunwind.dylib\n    0x7fff86d1f000 -     0x7fff86e71fff  com.apple.audio.toolbox.AudioToolbox (1.9.2 - 1.9.2) <DC5F3D1B-036A-37DE-BC24-7636DC95EA1C> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\n    0x7fff86e72000 -     0x7fff86ff8fff  libBLAS.dylib (1073.4) <C102C0F6-8CB6-3B49-BA6B-2EB61F0B2784> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\n    0x7fff86ff9000 -     0x7fff872d6fff  com.apple.security (7.0 - 55719.16.12) <C66C10FF-3ED8-3195-82D0-D5B2FB81E831> /System/Library/Frameworks/Security.framework/Versions/A/Security\n    0x7fff87312000 -     0x7fff87709fff  libLAPACK.dylib (1073.4) <D632EC8B-2BA0-3853-800A-20DA00A1091C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\n    0x7fff8770a000 -     0x7fff8772cff7  com.apple.Kerberos (2.0 - 1) <416543F5-E7AF-3269-843F-C8CDA8DD0FFA> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\n    0x7fff8772d000 -     0x7fff87742fff  com.apple.ImageCapture (8.0 - 8.0) <71B24609-DEE9-3927-9C82-62E72270299C> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\n    0x7fff88173000 -     0x7fff88189fff  com.apple.MultitouchSupport.framework (237.4 - 237.4) <0F7FEE29-161B-3D8E-BE91-308CBD354461> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\n    0x7fff8818a000 -     0x7fff884a1ff7  com.apple.CoreServices.CarbonCore (1037.6 - 1037.6) <1E567A52-677F-3168-979F-5FBB0818D52B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\n    0x7fff884a2000 -     0x7fff884dffef  libGLImage.dylib (8.10.1) <91E31B9B-4141-36D5-ABDC-20F1D6D1D0CF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\n    0x7fff8851b000 -     0x7fff8851ffff  libGIF.dylib (854) <21F4F4A3-6F84-3BC3-A736-AB990CE4AD3C> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\n    0x7fff88520000 -     0x7fff8854bfff  libxslt.1.dylib (11.3) <441776B8-9130-3893-956F-39C85FFA644F> /usr/lib/libxslt.1.dylib\n    0x7fff8854e000 -     0x7fff88668fff  com.apple.coreavchd (5.6.0 - 5600.4.16) <85670361-96CA-3805-B981-B41B47E99A37> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD\n    0x7fff88669000 -     0x7fff886b8fff  com.apple.framework.CoreWiFi (1.3 - 130.13) <CCF3D8E3-CD1C-36CD-929A-C9972F833F24> /System/Library/Frameworks/CoreWiFi.framework/Versions/A/CoreWiFi\n    0x7fff886b9000 -     0x7fff88726ff7  com.apple.datadetectorscore (4.1 - 269.3) <5775F0DB-87D6-310D-8B03-E2AD729EFB28> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\n    0x7fff887b2000 -     0x7fff88803ff7  com.apple.SystemConfiguration (1.12.2 - 1.12.2) <581BF463-C15A-363B-999A-E830222FA925> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    0x7fff88804000 -     0x7fff8882cfff  libJPEG.dylib (854) <000ADF07-A59C-36F8-9894-CD03F6CFBC1E> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\n    0x7fff8882d000 -     0x7fff8884fff7  libxpc.dylib (140.43) <70BC645B-6952-3264-930C-C835010CCEF9> /usr/lib/system/libxpc.dylib\n    0x7fff88850000 -     0x7fff88853fff  com.apple.help (1.3.2 - 42) <418A9A41-BCB4-32A2-97ED-3A388F69CA9D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\n    0x7fff888f8000 -     0x7fff88952fff  com.apple.print.framework.PrintCore (8.3 - 387.2) <5BA0CBED-4D80-386A-9646-F835C9805B71> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\n    0x7fff88953000 -     0x7fff88953fff  libOpenScriptingUtil.dylib (148.3) <F8681222-0969-3B10-8BCE-C55A4B9C520C> /usr/lib/libOpenScriptingUtil.dylib\n    0x7fff88993000 -     0x7fff8899efff  com.apple.CommonAuth (3.0 - 2.0) <E5F401E5-3AEA-33DF-AC70-3C96B52CC754> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\n    0x7fff889b7000 -     0x7fff889c3fff  com.apple.CoreBluetooth (100.9 - 1) <94C4EAB8-20E6-3892-BD9E-27952318CF32> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\n    0x7fff889c4000 -     0x7fff889d7ff7  libbsm.0.dylib (32) <F497D3CE-40D9-3551-84B4-3D5E39600737> /usr/lib/libbsm.0.dylib\n    0x7fff889d8000 -     0x7fff889d9fff  libsystem_blocks.dylib (59) <D92DCBC3-541C-37BD-AADE-ACC75A0C59C8> /usr/lib/system/libsystem_blocks.dylib\n    0x7fff889da000 -     0x7fff889dafff  com.apple.ApplicationServices (45 - 45) <5302CC85-D534-3FE5-9E56-CA16762177F6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    0x7fff88cac000 -     0x7fff88dccfff  com.apple.desktopservices (1.7.4 - 1.7.4) <ED3DA8C0-160F-3CDC-B537-BF2E766AB7C1> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\n    0x7fff88de4000 -     0x7fff88df6ff7  libz.1.dylib (43) <2A1551E8-A272-3DE5-B692-955974FE1416> /usr/lib/libz.1.dylib\n    0x7fff88df7000 -     0x7fff88dfafff  libRadiance.dylib (854) <FE3F00E5-3A3A-3172-B6C7-0EAA80A040D9> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\n    0x7fff88dfb000 -     0x7fff88e08fff  libbz2.1.0.dylib (29) <CE9785E8-B535-3504-B392-82F0064D9AF2> /usr/lib/libbz2.1.0.dylib\n    0x7fff88e0e000 -     0x7fff88e19fff  libsystem_notify.dylib (98.6) <1E490CB2-9311-3B36-8372-37D3FB0FD818> /usr/lib/system/libsystem_notify.dylib\n    0x7fff88ed8000 -     0x7fff88fe4ff7  libFontParser.dylib (84.11) <AA35FD57-6410-3C34-86D3-735469AE8855> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\n    0x7fff8933c000 -     0x7fff898acff7  com.apple.CoreAUC (6.22.03 - 6.22.03) <A77BC97A-B695-3F7E-8696-5B2357C2726B> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC\n    0x7fff898ad000 -     0x7fff898adfff  libkeymgr.dylib (25) <CC9E3394-BE16-397F-926B-E579B60EE429> /usr/lib/system/libkeymgr.dylib\n    0x7fff898ae000 -     0x7fff898f2fff  libcups.2.dylib (327.9) <B626C104-D505-3E58-9BBB-7A86F4CF87F2> /usr/lib/libcups.2.dylib\n    0x7fff8997f000 -     0x7fff89a44ff7  com.apple.coreui (2.0 - 181.1) <83D2C92D-6842-3C9D-9289-39D5B4554C3A> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\n    0x7fff8a037000 -     0x7fff8a096fff  libTIFF.dylib (854) <29014639-6085-3F19-AE47-1026F70A3D0D> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\n    0x7fff8a097000 -     0x7fff8a09cfff  libcache.dylib (57) <65187C6E-3FBF-3EB8-A1AA-389445E2984D> /usr/lib/system/libcache.dylib\n    0x7fff8a09d000 -     0x7fff8a09eff7  libsystem_sandbox.dylib (220.4) <E2A3D8A9-80A3-3666-8D8B-D22829C2B0EC> /usr/lib/system/libsystem_sandbox.dylib\n    0x7fff8a194000 -     0x7fff8a195fff  liblangid.dylib (116) <864C409D-D56B-383E-9B44-A435A47F2346> /usr/lib/liblangid.dylib\n    0x7fff8a196000 -     0x7fff8a198fff  com.apple.TrustEvaluationAgent (2.0 - 23) <A97D348B-32BF-3E52-8DF2-59BFAD21E1A3> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\n    0x7fff8a19b000 -     0x7fff8a19ffff  libpam.2.dylib (20) <C8F45864-5B58-3237-87E1-2C258A1D73B8> /usr/lib/libpam.2.dylib\n    0x7fff8a1ee000 -     0x7fff8a1f4fff  libmacho.dylib (829) <BF332AD9-E89F-387E-92A4-6E1AB74BD4D9> /usr/lib/system/libmacho.dylib\n    0x7fff8a31a000 -     0x7fff8a329ff7  libxar.1.dylib (105) <B6A7C8AA-3E20-3A1D-A7BA-4FD0052FA508> /usr/lib/libxar.1.dylib\n    0x7fff8a32a000 -     0x7fff8a34bff7  libCRFSuite.dylib (33) <B49DA255-A4D9-33AF-95AB-B319570CDF7B> /usr/lib/libCRFSuite.dylib\n    0x7fff8a34c000 -     0x7fff8a363fff  com.apple.GenerationalStorage (1.1 - 132.3) <FD4A84B3-13A8-3C60-A59E-25A361447A17> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\n    0x7fff8a399000 -     0x7fff8a3c0ff7  com.apple.PerformanceAnalysis (1.16 - 16) <1BDA3662-18B7-3F38-94E5-9ACD477A7682> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\n    0x7fff8a3c1000 -     0x7fff8a3d0fff  com.apple.opengl (1.8.10 - 1.8.10) <AD49CF56-B7C1-3598-8610-58532FC41345> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n    0x7fff8a461000 -     0x7fff8a46aff7  com.apple.CommerceCore (1.0 - 26.2) <AF35874A-6FA7-328E-BE30-8BBEF0B741A8> /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Frameworks/CommerceCore.framework/Versions/A/CommerceCore\n    0x7fff8a476000 -     0x7fff8a47eff7  libsystem_dnssd.dylib (379.38.1) <BDCB8566-0189-34C0-9634-35ABD3EFE25B> /usr/lib/system/libsystem_dnssd.dylib\n    0x7fff8a494000 -     0x7fff8a4b4fff  libPng.dylib (854) <B45259B6-6489-38D4-BC5C-E0E2B2D2674C> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\n    0x7fff8a4d1000 -     0x7fff8b0fefff  com.apple.AppKit (6.8 - 1187.40) <F12CF463-6F88-32ED-9EBA-0FA2AD3CF576> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    0x7fff8b3a6000 -     0x7fff8b3f3fff  com.apple.CoreMediaIO (309.0 - 4163.1) <8FD1C1A9-25C5-3B9E-A76D-BE813253B358> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO\n    0x7fff8c3b4000 -     0x7fff8c40afff  com.apple.HIServices (1.20 - 417) <BCD36950-013F-35C2-918E-05A93A47BE8C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\n    0x7fff8c433000 -     0x7fff8c44eff7  libexpat.1.dylib (12) <95D59F1F-0A5C-3F33-BA97-26F7D796CE7A> /usr/lib/libexpat.1.dylib\n    0x7fff8c46d000 -     0x7fff8c470ff7  libdyld.dylib (210.2.3) <F59367C9-C110-382B-A695-9035A6DD387E> /usr/lib/system/libdyld.dylib\n    0x7fff8c4f4000 -     0x7fff8c573ff7  com.apple.securityfoundation (6.0 - 55115.4) <8676E0DF-295F-3690-BDAA-6C9C1D210B88> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\n    0x7fff8c5c8000 -     0x7fff8c60bff7  com.apple.bom (12.0 - 192) <0EFE0F2D-B6DE-3D1E-93C2-EED6D96F70A2> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom\n    0x7fff8c685000 -     0x7fff8c685fff  com.apple.Accelerate.vecLib (3.8 - vecLib 3.8) <F565B686-24E2-39F2-ACC3-C5E4084476BE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff8c686000 -     0x7fff8c886fff  libicucore.A.dylib (491.11.3) <5783D305-04E8-3D17-94F7-1CEAFA975240> /usr/lib/libicucore.A.dylib\n    0x7fff8c8e3000 -     0x7fff8ca54ff7  com.apple.QTKit (7.7.1 - 2599.54) <12F9CD59-5BCC-3847-BA6F-2002DC865DFE> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit\n    0x7fff8cabb000 -     0x7fff8cc56fef  com.apple.vImage (6.0 - 6.0) <FAE13169-295A-33A5-8E6B-7C2CC1407FA7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\n    0x7fff8cc57000 -     0x7fff8cd09ff7  com.apple.LaunchServices (539.14 - 539.14) <C85BBC8B-9227-3E81-9D0B-67AB4F8C7CE3> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\n    0x7fff8cd0a000 -     0x7fff8cd2fff7  libc++abi.dylib (26) <D86169F3-9F31-377A-9AF3-DB17142052E4> /usr/lib/libc++abi.dylib\n    0x7fff8cd39000 -     0x7fff8cd95ff7  com.apple.Symbolication (1.3 - 93) <D3AAB36A-D5EB-3044-BE9D-0B77E64C00FC> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\n    0x7fff8cd96000 -     0x7fff8cdb5ff7  libresolv.9.dylib (51) <0882DC2D-A892-31FF-AD8C-0BB518C48B23> /usr/lib/libresolv.9.dylib\n    0x7fff8cf10000 -     0x7fff8d34cfff  com.apple.VideoToolbox (1.0 - 926.107) <6C851058-5598-3207-87E2-577135587425> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\n    0x7fff8d34d000 -     0x7fff8d3acfff  com.apple.AE (645.6 - 645.7) <2F1E192C-DF34-3903-9F30-27B896699CA4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\n\nExternal Modification Summary:\n  Calls made by other processes targeting this process:\n    task_for_pid: 2\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by this process:\n    task_for_pid: 0\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by all processes on this machine:\n    task_for_pid: 3791\n    thread_create: 0\n    thread_set_state: 0\n\nVM Region Summary:\nReadOnly portion of Libraries: Total=236.9M resident=164.6M(69%) swapped_out_or_unallocated=72.3M(31%)\nWritable regions: Total=113.0M written=11.9M(11%) resident=12.2M(11%) swapped_out=0K(0%) unallocated=100.8M(89%)\n\nREGION TYPE                      VIRTUAL\n===========                      =======\nCG shared images                     96K\nMALLOC                             75.1M\nMALLOC guard page                    48K\nMemory tag=255                    554.1M\nMemory tag=255 (reserved)           256K        reserved VM address space (unallocated)\nSTACK GUARD                        56.0M\nStack                              25.5M\nVM_ALLOCATE                          16K\n__DATA                             16.6M\n__IMAGE                             528K\n__LINKEDIT                         60.8M\n__TEXT                            176.1M\n__UNICODE                           544K\nmapped file                        45.4M\nshared memory                       308K\n===========                      =======\nTOTAL                               1.0G\nTOTAL, minus reserved VM space      1.0G\n\nModel: MacBookPro10,1, BootROM MBP101.00EE.B09, 4 processors, Intel Core i7, 2.8 GHz, 16 GB, SMC 2.3f36\nGraphics: Intel HD Graphics 4000, Intel HD Graphics 4000, Built-In, 512 MB\nGraphics: NVIDIA GeForce GT 650M, NVIDIA GeForce GT 650M, PCIe, 1024 MB\nMemory Module: BANK 0/DIMM0, 8 GB, DDR3, 1600 MHz, 0x80AD, 0x484D5434314753364D465238432D50422020\nMemory Module: BANK 1/DIMM0, 8 GB, DDR3, 1600 MHz, 0x80AD, 0x484D5434314753364D465238432D50422020\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0xEF), Broadcom BCM43xx 1.0 (5.106.98.100.17)\nBluetooth: Version 6.1.7f5 15859, 3 service, 21 devices, 3 incoming serial ports\nNetwork Service: USB Ethernet, Ethernet, en2\nNetwork Service: Wi-Fi, AirPort, en0\nSerial ATA Device: APPLE SSD SM768E, 751.28 GB\nUSB Device: hub_device, 0x8087  (Intel Corporation), 0x0024, 0x1a100000 / 2\nUSB Device: FaceTime HD Camera (Built-in), apple_vendor_id, 0x8510, 0x1a110000 / 3\nUSB Device: hub_device, 0x8087  (Intel Corporation), 0x0024, 0x1d100000 / 2\nUSB Device: Keyboard Hub, apple_vendor_id, 0x1006, 0x1d110000 / 6\nUSB Device: Microsoft USB Optical Mouse, 0x045e  (Microsoft Corporation), 0x00cb, 0x1d113000 / 10\nUSB Device: Apple USB Ethernet Adapter, apple_vendor_id, 0x1402, 0x1d111000 / 9\nUSB Device: Apple Keyboard, apple_vendor_id, 0x024f, 0x1d112000 / 7\nUSB Device: hub_device, 0x0424  (SMSC), 0x2512, 0x1d180000 / 3\nUSB Device: Apple Internal Keyboard / Trackpad, apple_vendor_id, 0x0262, 0x1d182000 / 5\nUSB Device: BRCM20702 Hub, 0x0a5c  (Broadcom Corp.), 0x4500, 0x1d181000 / 4\nUSB Device: Bluetooth USB Host Controller, apple_vendor_id, 0x8286, 0x1d181300 / 8\n"}, {'title': '[Typescript] useCodeSnippetsOnMethodSuggest option generate wrong code', 'body': 'Awesome idea however that just work for simple signature. for example interface like\n\n``` typescript\n\ninterface IDoSometing {\n  getData(url: string, fn: (error, result) => void)\n}\n\n```\n\nwill generate this\n\n``` typescript\n\nvar x: IDoSometing;\nx.getData(url, fn, error, result)\n\n```\n\nand also please add an option to pick from overloads.\n'}, {'title': 'Object methods are missing IntelliSense', 'body': "Hey,\n\nmethods in POJOs don't autocomplete like here:\n\n``` javascript\nvar foo = {\n    bar() {\n    }\n\n    baz() {\n        this.bar<ctrl+space>\n    }\n}\n```\n\nalthough it works just fine for ES6 classes:\n\n``` javascript\nclass Foo  {\n    bar() {\n    }\n\n    baz() {\n        this.bar<ctrl+space>\n    }\n}\n```\n\nBR\nDominik\n"}, {'title': '[Handlebars] No understanding of open Handlebars tags', 'body': "Hey\n\n``` handlebars\n{{#if foo}}{{/<ctrl+space>}}\n```\n\nshows `No suggestions`, I'd expect it to show `/if` like it works with normal HTML tags.\n\nBR\nDomme\n"}, {'title': 'Vim control mode', 'body': 'Is there any possibility of a Vim style control mode in the future? The extensions API doesnt appear to be flexible enough for this, so it probably needs to be added as an official feature of the app\n'}, {'title': 'no responding', 'body': 'after upgrading to 0.10.1 code has often no responding very easily.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwe2bw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[Handlebars/HTMLBars/Ember] For block components `as` and `|` are not parameters', 'body': "Hey\n\nHTMLBars (sort of the Handlebars dialect Ember.js uses) has so called block components invoked like this:\n\n``` handlebars\n{{#each whateverList as |key value|}}\n  {{key}}: {{value}}\n{{/each}}\n```\n\nin vscode `whateverList as |key value|` is completely light blue, i'd expect the at least the `as` and the pipes to have a slightly different color, maybe the darker blue of the each.\n\nBR\nDomme\n"}, {'title': 'High DPI scaling for UI or settings for UI addition', 'body': 'I\'m testing this on a MacBook Pro 2015 Retina screen with Windows 10 stable build in Bootcamp.\nVS Code here does not scale according to my Windows DPI scaling settings, which is set to 125%.\n\nAs it does not, editor UI looks super tiny as the MBP has `2880px X 1800px` resolution.\nI\'m attaching a screenshot:\n\n![visual studio code high dpi](https://cloud.githubusercontent.com/assets/7989797/11289953/791322c8-8f3a-11e5-83b0-cbd99a5300e3.png)\n\nIn User Settings I can change editor font size, but not UI:\n\n```\n// Place your settings in this file to overwrite the default settings\n{\n    "editor.fontSize": 18\n}\n```\n#122 might be related, but it talks about DPI scaling issues with blurriness, which is not the case for me. The UI is just super tiny.\n'}, {'title': 'Support tilde character (~) in Razor links', 'body': "Code does translate correctly the tilde ~ as a proper path reference when the code runs (but that may be mono or core-clr doing that magic, or roslyn), but when I cmd-click the link, Code offers to create a new folder in the path that literally includes the tilde as the folder name in that path, when it should convert it to the proper path of wwwroot...this is in the _Layout.cshtml file. I'm unsure where to look in the code so I can see what it's doing to offer a fix. \n"}, {'title': 'Debugger is not working', 'body': "Getting error when running app in debug mode.\n\nWhen hitting play on debugger, debugger options appear for split second and exception occurs.\n\nerror while processing request '{_request}' (exception: {_exception})\n\n![screen shot 2015-11-19 at 10 09 28 pm](https://cloud.githubusercontent.com/assets/3191584/11291059/57dd9988-8f0a-11e5-9a1b-1b5804581e54.png)\n\nOS: Mac\n"}, {'title': 'Text selection cursor is visible when mousing over the git icon in the status bar', 'body': '**Repro:**\n1. Open vscode with no folder open\n2. Mouse over the git icon, observe the cursor becomes the text selection cursor\n\n![text_cursor](https://cloud.githubusercontent.com/assets/2193314/11292331/40ab3efe-8f01-11e5-8fb5-b3fdbb802646.gif)\n'}, {'title': 'Proposal: Add support for bash/sh file type', 'body': "Please add bash/sh file type support (code highlight, code complete, symbol navigations)\n\nshell script programming were very common development in unix/linux world.\n\nIf you can provided support for it. that's would be very impressive feature.\n"}, {'title': 'Allow to create multiple files at once from the command line with glob patterns', 'body': 'I would like to have a feature to create multiple file at once.\n\nFor example if you type the following pattern as a filename for a new file:\n\n```\ntest.{css,ts,html}, test2.{css,ts,html}\n```\n\nIt should create the following files:\n- test.css\n- test.ts\n- test.html\n- test2.css\n- test2.ts\n- test2.html\n\nThis would save a lot time.\n\nIs this something I can do with an extension or must I edit the electron-browser to get it running?\n\nI think an extension would be the better way because it is something special and not directly obvious to the user. What do you think? Of cause we can discuss the format for this operation. The example above is just a first try.\n\nI would implement it and do a pull request (if I must change vscode directly).\n'}, {'title': 'target not support ES7 in jsconfig.json file', 'body': 'target not support ES7 in jsconfig.json file\n'}, {'title': 'Find and replace with regex on does not allow replacing with \\n', 'body': 'The same applies to `\\r` and `\\t`, not sure if there are any others.\n\n**Repro**\n1. Open a file\n2. Ctrl+H to bring up find and replace\n3. Turn on regular expression matching\n4. Match a word\n5. Put `\\n` in the replace text box\n6. Press Replace All\n\n**Expected**\n\nThe matched words are replaced with new lines\n\n**Actual**\n\nThe matched words are replaces with `\\n`\n'}, {'title': 'Find does not match multi-line regex strings', 'body': 'The Find dialog (Ctrl+F) does not allow multi-line finds using the `\\n` character as it currently considers each line individually. See [`TextModel._doFindMatches`](https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/model/textModel.ts)\n\n_Created out of a discussion in https://github.com/Microsoft/vscode/issues/278_\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwgm_A==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'CSS frequency unit capitalization is not to spec', 'body': "[The spec](https://drafts.csswg.org/css-values-3/#frequency) shows frequencies are recommended to have a capital H but in CSS's [`langaugeFacts.ts`](https://github.com/Microsoft/vscode/blob/master/src/vs/languages/css/common/services/languageFacts.ts) this isn't so.\n"}, {'title': 'debugService should move into electron-browser namespace', 'body': 'Because it has a dependency to electron-browser/windowService\n'}, {'title': 'Should ES6 be the JavaScript Default?', 'body': 'Hey everyone, 2015 is almost over, but we still need an editor configuration file to edit what is currently "JavaScript as supported by browsers". I\'d like to avoid [reactions like these](https://twitter.com/sugarpirate_/status/667029989695582208). That would also solve issues like #54.\n\nI\'ll make a PR to pressure y\'all even more :stuck_out_tongue_winking_eye: \n'}, {'title': 'Error installing extensions', 'body': 'I am on windows 7, latest vscode, behind a corporate proxy, but have specified in in settings. I get a list of all extensions, but when I try and install for example magicpython I get the following error:\n\n`getaddrinfo ENOTFOUND marketplace.visualstudio.com marketplace.visualstudio.com:443`\n\nAny ideas?\n'}, {'title': 'Support HTML aria attribute completion', 'body': 'http://www.w3.org/TR/wai-aria/\n'}, {'title': 'Remove npm install from csharp-o compilation', 'body': "When running `gulp compile-plugins`, 20 seconds are needed for running `npm install` on that extension. It shouldn't really run on every compile pass.\n\nThe build machines already run `npm install` for everything before running compile. The problem is really each dev's machine. Should we come up with a `./scripts/installDependencies` script which runs `npm install` on the root as well as for all extensions that need it?\n"}, {'title': "[html] Add documentationLabel's to HTML tags", 'body': 'This would be particularly nice for lesser known tags such as `dl`, `dt`, `dd`, `s`, `bdi`, etc.\n'}, {'title': 'Implement soft text wrapping', 'body': 'Wrap text when it would otherwise create a horizontal scrollbar.\n'}, {'title': 'Extension Cannot be installed', 'body': "i am trying to install an extension, but while typing extention , there is showing 'No commands matching' messege\n![screenshot from 2015-11-20 14 20 01](https://cloud.githubusercontent.com/assets/10231751/11295495/d5c1b3c0-8f91-11e5-88f6-c0fa41abfdad.png)\n"}, {'title': 'Dead link on https://code.visualstudio.com/docs/extensions/patterns-and-principles', 'body': 'The last link on the [_Next Step_](https://code.visualstudio.com/docs/extensions/patterns-and-principles#_next-steps) Section is dead. The following page should be loaded, but does not exist:\n\nhttps://code.visualstudio.com/docs/extensionAPI/documents-and-editors\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwh5nw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "Inserting electric char doesn't replace selected text", 'body': "Try this.\nOn a new, otherwise empty js or ts file, put in a simple one line program. Any text will do.\n\nSelect All.\n\nThen type a single quote (or double quote or bracket etc, anything electric)\n\nRather than replacing the whole selection with the single quote as you might expect, it surrounds the selected text with a quote.\n\nThis is inconsistent with the behaviour if you do a select all and then type a normal character, where it just replaces the selection.\n\nIt doesn't feel like this is deliberate behaviour, but it might conceivably be. It's confusing if it is!\n"}, {'title': 'Feature: allow editing the taskSampleConfig file', 'body': 'I am thinking of adding a command called "Tasks: Edit Sample tasks.json" which opens `workbench\\parts\\tasks\\common\\taskSampleConfig.json`.\n\nWould this be a useful feature?\n'}, {'title': 'Portable version!', 'body': 'You can provide a portable version of it? Or to support the configuration file or plug-sync to the cloud;\nOtherwise, each computer must be installed once, configured once. . It is a waste of time;\n\nThank you\n'}, {'title': 'Line breaking around Chinese and Japanese characters are still incorrect', 'body': 'When mixing English and Chinese(or Japanese) with whitespace, you can insert line breaks between Chinese(or Japanese) characters, instead of break in whitespace. The current incorrect line breaking can be seen when shrinking the window containing this line \n\n`天地玄黃宇宙洪荒 English 春夏秋冬風花雪月冠婚葬祭起承轉合喜怒哀樂士農工商生老病死風林火山男女老幼人含道善典謨訓誥`\n\nIt should be typesetted as:\n![image](https://cloud.githubusercontent.com/assets/240091/11297722/4e1d525c-8fb5-11e5-8abe-8cbc26d48f62.png)\n\nInstead of:\n![image](https://cloud.githubusercontent.com/assets/240091/11297738/6e570c70-8fb5-11e5-935b-3900cfe13138.png)\n\nI\'ve checked out source code, by adding **all** Chinese and Japanese characters into a "hidden" setting item `"editor.wordWrapBreakAfterCharacters"`, this issue can be, well, mostly fixed (some Kinsoku Shori is still incorrect, but at least long paragraphs are readable).\n'}, {'title': "Replace all doesn't replace everything", 'body': 'Currently when we do a replace all, it only replaces content among the currently displayed buffer and not throughout the file.\n\nI had a file with 20000 lines and I had to change the table name, so I had to click on replace all 1000 times to make that happen\n'}, {'title': "Close button doesn't close the file", 'body': 'The close button just hides the file and does not actually close it.\n'}, {'title': 'Permanently assign file type to new extensions', 'body': 'there are few extensions which are new like gtpl for go template or tmpl, there is no way currently to permanently assign the syntax, we have to do so each time we open the file\n'}, {'title': 'Slow startup / crashes - unusable', 'body': "Hello,\n\nsince the release of VS Code v0.10.1 I cannot use it anymore - yes, I already tried to reinstall it.\nIt takes minutes to start and all I'm getting is the following:\n![unbenannt](https://cloud.githubusercontent.com/assets/7961978/11297744/c5accec8-8f7a-11e5-8bc3-632a0873b1f2.PNG)\n\nI am using Windows 10 Pro on my Microsoft Surface Pro 3.\n"}, {'title': "IntelliSense won't work for C#", 'body': 'Even if "editor.quickSuggestions" and "editor.suggestOnTriggerCharacters" are set to true.\nMeanwhile, IntelliSense works for JavaScript etc.\n'}, {'title': 'Built emmet plugin', 'body': 'The next version can be built emmet plug it, like webstorm as custom emmet；\n\nthank you!\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwjqdw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Browse the Gallery command windows always disappear when clicked somewhere else', 'body': 'I tried to get "Browse the Gallery command line/Windows " on by pressing F1 / CTRL P, when I tried to \nnavigate to web browser and follow the instruction from website\nhttps://code.visualstudio.com/docs/editor/extension-gallery?pub=ms-vscode&ext=jscs\nThe command line/ windows disappear, it is quite annoying\n\nAny suggestion how to solve this issue?\n'}, {'title': 'SUGGESTION: Add Duplicate File to the Context Menu', 'body': 'I have often had to navigate to `Finder` in order to duplicate files while I have been working.\n\nI would imagine that duplicating a file is a common way of developing.\n\nHope to see it in the future :)\n'}, {'title': "Running from source, missing dependency 'run-in-terminal'", 'body': "It seems like vscode is depending on npm module 'run-in-terminal' which does not get installed by running `scripts\\npm install`. There is nothing mentioned in the package.json file in the root dir (it is, however, listed as a dependency in package.json in extensions\\csharp-o). `gulp watch` shows one error in `extensions\\csharp-o\\src\\features`, line 13 reads `import {runInTerminal} from 'run-in-terminal';`\n\nRunning `npm install run-in-terminal` manually fixes this.\n\nEdit: Might somehow be connected with #321? I rarely use npm/gulp and I am far from an expert when it comes to dependencies etc.\n"}, {'title': 'Format code in xml', 'body': 'The command Format code is missing in the Command Pallette for XML files.\n'}, {'title': 'Editing a simple C# program always shows errors (despite compiling fine)', 'body': 'Example:\n\n![Image of Code](https://i.imgur.com/meqxJMl.png)\n\n```\nThe type or namespace \'Convert\' does not exist in the namespace \'System\' (are you missing an assembly reference?)\n```\n\nand:\n\n```\n\'Console\' does not contain a definition for \'Clear\'\n```\n\nMy `project.json` is as follows:\n\n```\n    {\n        "dependencies": {\n\n        },\n        "commands": {\n            "ConsoleApp": "ConsoleApp"\n        },\n        "frameworks": {\n            "dnx451": { },\n            "dnxcore50": {\n                "dependencies": {\n                    "System.Console": "4.0.0-beta-*"\n                }\n            }\n        }\n    }\n```\n\nVS Code Version: `0.10.1` running on `OS X (Yosemite) 10.10.5`\n'}, {'title': 'Visual Studio Code deleting content of git submodules inside a git project', 'body': 'I have a git project that contains several git submodules of other projects and I have seen that the Git integration in Visual Studio Code takes a lot of times to "scan" my git project to in the end delete the content of my submodules leaving my git checkout corrupted.\n'}, {'title': 'Support workspace extensions', 'body': "It would be interesting for people working on different projects to have a way to : \n1: Set up extensions for the all team to have an uniform configuration\n2: Have different extensions on different projects\n\nI think that having a list of extensions in the Workspace configuration could solve this. \nOtherwise i'll just have to write an extension for it :-)\n"}, {'title': 'Wrong indentation of block comments.', 'body': '![indent-of-block-comment](https://cloud.githubusercontent.com/assets/1937871/11301257/fe7534bc-8fd8-11e5-80ba-85b32be4e3c6.gif)\n\nA space before the first `*` in each line is lost.\nThis behavior is inconvenience a bit.\n'}, {'title': 'TypeScript syntax highlighting wrong after decorator', 'body': 'When adding a decorator to a variable declaration i TypeScript, both public/private and the name of the variable is plain white, while if removing the decorator both are colored correctly.\n'}, {'title': 'Should collapse xml elements', 'body': 'Right now it is not possible to collapse the xml elements in the editor.\n\n![code_xml](https://cloud.githubusercontent.com/assets/5127501/11301612/ca8c46f8-8f98-11e5-80d3-685bae4abb78.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwlJpw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '\'No best common type exists among return expressions.\' in function that returns either "new Promise" or "Promise.reject"', 'body': "In my JS project I have a few functions that look like this:\n\n``` javascript\nfunction doSomethingAsync(options) {\n    if (!options.someCondition) {\n        return Promise.reject('You are missing something');\n    }\n\n    return new Promise((resolve, reject) => {\n        // do something async and then resolve or reject\n    });\n}\n```\n\nThis causes every single line inside this function to be underlined in red (which is visually kind of distracting, especially if a function has 50+ lines). I think it would be best to just underline the return statements, instead of every line.\n\nI can workaround this by moving the if condition inside the function body of the promise, but I'm wondering if this is really a valid error? I guess the problem here is that the return type of `Promise.reject` is `Promise<void>` while `new Promise` returns `Promise<{}>` (according to IntelliSense).\n\nI figured that this error is coming from TypeScript and not VS Code, but I thought I'd still post it here.\n"}, {'title': 'Save on focus lost', 'body': 'Greetings!\n\nVS Code is an awesome editor. Thank you for that.\nBut is it possible to set-up "save on focus lost"?\nWhen you are developing a web app using automated build-systems (gulp, webpack, etc...) its very annoying when is auto saves not completed code.\nAll editors auto save feature works with "focus" (Sublime, Atom, Webstorm...).\n\nThank you in advance!\n'}, {'title': 'Error from the plugin host: write EPIPE', 'body': "Since I've upgraded my Code, for a few minutes it works ok, like ever, but suddenly a plugin freezes the entire application and when I kill it (a node.exe process that's using a lot of memory and 50% of processor, what means here that it's using an entire processor, because it's dual core) Code shows me these messages:\n\n> Error from the plugin host: write EPIPE\n> Plugin host terminated unexpectedly. Please restart VSCode to recover.\n> Error from the plugin host: channel closed\n\nAnd I have no more code suggestions.\n\nI'm editing PHP files, writing in PHP/HTML. Using windows 7 x32 with Code version 0.10.1 from 2015-11-17, with Shell version 0.34.1 and Node version 4.1.1\n\nOh, and Code started to ask me for the PHP executable path:\n\n> Cannot validate the php file. The php program was not found. Use the 'php.validate.executablePath' setting to configure the location of 'php'\n\nI activated it before and with the sudden crashes, I though maybe was my php executable, deactivated it but the crashes still happen.\n"}, {'title': 'Linux: WatcherService consumes 100% cpu on large folder', 'body': 'As soon as I open Visual Studio Code, the watcherService process (a process with flag --type=watcherService) started from the renderer process starts to consume 100% cpu and 60Mb to 1.6 Gb of memory. If I kill the process, it relaunches immediately. No other process consumes cpu in the idle state.\nVersion: 0.10.1\nOS: Ubuntu 14.04\n'}, {'title': 'Flicker when use Chinese IME for the first character', 'body': '![screen shot 2015-11-20 at 23 25 11](https://cloud.githubusercontent.com/assets/10388011/11303489/10dcb1e8-8fde-11e5-8367-7dcddc3f49f6.png)\nWhen you input text using Chinese IME, the first char cause a reposition of the input bar shows on windows. This create a very bad experience when input text other then English.\n'}, {'title': 'wiki: npm global install requires sudo on *nix', 'body': "The instructions for installing dependencies should make use of `sudo` for `npm` install as global packages on Linux and Mac.\n\n``` diff\ndiff --git a/How-to-Contribute.md b/How-to-Contribute.md\nindex ab42f72..42d4228 100644\n--- a/How-to-Contribute.md\n+++ b/How-to-Contribute.md\n@@ -32,7 +32,7 @@ After you have these tools installed, run the following commands to check out Co\n **OS X**\n\n        git clone https://github.com/microsoft/vscode\n-       cd vscode && npm install -g mocha gulp\n+       cd vscode && sudo npm install -g mocha gulp\n        ./scripts/npm.sh install\n\n **Windows**\n@@ -45,7 +45,7 @@ After you have these tools installed, run the following commands to check out Co\n **Linux**\n\n        git clone https://github.com/microsoft/vscode\n-       cd vscode && npm install -g mocha gulp\n+       cd vscode && sudo npm install -g mocha gulp\n        ./scripts/npm.sh install --arch=x64\n        # for 32bit Linux\n        #./scripts/npm.sh install --arch=ia32\n@@ -120,4 +120,4 @@ We're also interested in your feedback for the future of Code. You can submit a\n\n ## Discussion Etiquette\n\n-In order to keep the conversation clear and transparent, please limit discussion to English and keep things on topic with the issue. Be considerate to others and try to be courteous and professional at all times.\n\\ No newline at end of file\n+In order to keep the conversation clear and transparent, please limit discussion to English and keep things on topic with the issue. Be considerate to others and try to be courteous and professional at all times.\n```\n"}, {'title': 'Allow to diff dirty files to their version on disk', 'body': 'Indicators showing that I have a modified open is great but I may forget what exactly has been changed before I save the file. The context menu for both or either the editor window and Working Files list could have an option to show a diff of some sort between the saved and unsaved file contents.\n'}, {'title': 'Window snaps to top left corner when trying to maximize', 'body': 'It just docks top left and goes back to its original size...\n'}, {'title': 'Issue when with multiple code lens provider for the same model', 'body': ''}, {'title': 'Facing problem writing definitely typed file.', 'body': 'I want to write a definitely typed file for a nodejs library I am writing. Suppose I am using my library like this:\n\n```\nvar Lib = require("lib");\nvar Book = require("book");\nvar lib = new Lib();\nlib.add(new Book("a"));\nlib.on("event", function("I take", "only 2 arguments");\nvar book = lib.getFirstBook();\nbook.changeAuthor("I am an author");\n```\n\nI have tried many things, but typedefintion allows function which I haven\'t defined like `lib.shouldNotExit()` without showing any error (In Visual Studio Code). Also, do I need to require typedefinition file `book.d.ts`, as  I have added it in `d.ts`reference path in `lib`\'s `d.ts` file.\n\nMaybe because I have skipped `Typescript` I am struggling so much. But I only want to write `TypeDefinition` and not `Typescript`. I couldn\'t find any good resource for writing `d.ts` file on net. If anyone can point me to one it would be great. \n\n---\n\nI tried this\n\n```\nrequire("http").shouldNotExist();\n```\n\nI was expecting some warning, but none was shown. Do I need to set some strict flag for it to show warning?\n\n---\n\nI also tried this\n\n```\ndeclare module "library" {\n    class Library {\n        constructor();\n        book: string;\n    }\n    export = Library;\n}\n```\n\nBut VSCode now treats `new Library()` as `any`. The workaround I found was using `export class Library {...}` instead of `export = Library`, but clearly this requires change in the source files itself, as it suggests a usage like this `new require("library").Library()`. Is there no way I can achieve the export of a class itself, which VSCode can recognize?\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwmhqQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '"Flipped cursor" is a Windows cursor, even when running VS Code on OS X', 'body': "Minor cosmetic change suggestion. The cursor displayed when you move your mouse to the line numbers in the editor is a Windows cursor:\n\nhttps://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/src/vs/editor/browser/viewParts/lineNumbers/flipped-cursor.svg\n\nIdeally we'd display a cursor that matches the current platform. (So OS X it would be black with a white border)\n\nI can write a PR for this if you're okay with it :smile: \n"}, {'title': 'Extension process makes Macbook Air fan goes crazy!', 'body': "Since the new update (0.10.1) my Macbook Airs fan sounds like a jet engine!!! If this isn't a bug, please make an option to disable some of the new things to make it quiet again. I REALY REALY loves Visual Code, so please fix this!\n"}, {'title': 'Allow developers create custom main menu items from extensions.', 'body': "Hello,\n\nIt would be nice to have a possibility to create custom menu items for extensions' commands, e.g. `Edit -> Format Document`. I think it should work similar to `keybindings` contribution point.\n\nSincerely,\nIlya\n"}, {'title': 'Get "Activating extension `.test`" failed error upon running the Hello World extension example', 'body': "I get the following error when I run (F5) the extension. I am following the steps in this [tutorial](https://code.visualstudio.com/docs/extensions/example-hello-world)\n\n```\n'C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe' --debugBrkPluginHost=9677 --extensionDevelopmentPath=d:\\Playground\\vsCodeExt\\test \nLoading development extension at d:/Playground/vsCodeExt/test\nActivating extension `.test` failed: Cannot find module 'd:/Playground/vsCodeExt/test/out/src/extension'.\nActivating extension `.test` failed:  Cannot find module 'd:/Playground/vsCodeExt/test/out/src/extension'\nHere is the error stack:  Error: Cannot find module 'd:/Playground/vsCodeExt/test/out/src/extension'\n    at Function.Module._resolveFilename (module.js:336:15)\n    at Function.Module._load (module.js:286:25)\n    at Function.n._load (c:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\out\\vs\\workbench\\node\\pluginHostProcess.js:18:17333)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Function.t [as __$__nodeRequire] (c:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\out\\vs\\loader.js:5:1298)\n    at u (c:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\out\\vs\\workbench\\node\\pluginHostProcess.js:12:20550)\n    at t._loadPluginModule (c:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\out\\vs\\workbench\\node\\pluginHostProcess.js:12:24382)\n    at t.e._actualActivatePlugin (c:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\out\\vs\\workbench\\node\\pluginHostProcess.js:11:29061)\n    at t._actualActivatePlugin (c:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\out\\vs\\workbench\\node\\pluginHostProcess.js:12:24874)\n```\n\nWhat am I missing. There hardly any steps to follow in the tutorial. Is the yeoman generator outdated?\n\nThanks.\n"}, {'title': 'Allow detachable multiple windows on the same workspace', 'body': 'Allow opening additional windows (BrowserWIndow) to be able to work on multi-monitor setups.\n\nSee also:\n- [Detachable split-view](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8279298-detachable-split-view)\n- [Ability to have a "folder" open over multiple windows (like Visual studio)](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7764594-ability-to-have-a-folder-open-over-multiple-wind)\n- [Multiple windows, same folder](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8162727-multiple-windows-same-folder)\n'}, {'title': 'launch.json resetting its content to default after debugging session', 'body': 'I tried changing default Unity profile in "configurations", adding custom profile, but every time I stop debugging launch.json resets to its default state.\n\nOS: MacOS Yosemite 10.10.5.\nVS Code version: 0.10.1 (issue was there before). \n'}, {'title': 'IntelliSense text doesn’t wrap / gets cut off', 'body': 'The IntelliSense text hint (at least in CSS) is a single line, so often a lot of the text description and browser support gets cut off.\n\n![screen shot 2015-11-20 at 10 05 58 am](https://cloud.githubusercontent.com/assets/465069/11307690/aaeb539a-8f6e-11e5-8c65-7dc19fbe55f6.png)\n\nIt would be nicer to either allow the text to wrap, show the full text on hover/focus, or make the text more concise so important info is less likely to get cropped. \n\nPerhaps the browser support info should be cleared to the next line to make it less likely to be cropped?\n'}, {'title': 'Error when trying to debug (f# on mono on OS X)', 'body': 'When I try to debug a small hello-world like fsharp 4.0 program like the attached, I get an error "error while processing request \'{_request}\' (exception: {_exception})" in Visual Code 0.10.1 on OS X 10.10.5 on mono 4.2.1. The associated launch.json file is as follows:\n{\n    "version": "0.2.0",\n    "configurations": [\n        {\n            "name": "Launch",\n            "type": "mono",\n            "request": "launch",\n            "program": "hello2.exe",\n            "args": ["test","test2","bla"],\n            "cwd": ".",\n            "runtimeExecutable": null,\n            "env": {}\n        },\n        {\n            "name": "Attach",\n            "type": "mono",\n            "request": "attach",\n            "address": "localhost",\n            "port": 5858\n        }\n    ]\n}\n\n[hello2.txt](https://github.com/Microsoft/vscode/files/40396/hello2.txt)\n'}, {'title': 'Mac: File -> Open should open in new window', 'body': 'On Mac, the standard behavior of the File -> Open menu is to open in a new window, but Visual Studio Code instead replaces the project in the current window with the new one. Achieving the standard Mac behavior requires first selecting File -> New Window before selecting File -> Open. Please instead make File -> Open follow the standard behavior.\n'}, {'title': 'Program hangs after update', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwoqpA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[Info] pop ups while writing code in Visual Studio Code', 'body': 'Is there a way to turn off the [Info] pop ups that queue up while writing code in VSCode? I have to manually click to close them and I don\'t want them appearing while writing new code. It\'s driving me nuts! Tried Googling the topic and couldn\'t find anything.\n\n<img width="671" alt="vscode_info_popups" src="https://cloud.githubusercontent.com/assets/1461386/11309428/cecb869a-8f91-11e5-96b6-e93aea8fb945.PNG">\n'}, {'title': '[html] intellisense should be more context aware', 'body': "Currently HTML intellisense will present special attributes that are only related to tags but that's about as smart as it gets. Here are some improvements that could be made:\n- Don't suggest attributes that aren't valid on a particular tag (eg. aria widget attributes on a non-widget element)\n- Don't suggest tags that are not valid within the parent tag (eg. `<li>` is the only tag valid within `<ol>` and `<ul>`)\n"}, {'title': 'Git current branch status indicator show hash instead of name', 'body': 'The current branch shows as a hash at the left of the status bar, instead of as a name - e.g. "bac18a40" instead of "mainline"\n\nVersion 0.10.1, Linux 64-bit\n'}, {'title': 'OutputChannel.hide throws error', 'body': "It seems that `OutputChannel.hide()` is throwing an error when called.\n\nThis is the error I'm receiving:\n\n``` js\n{ exception: null,\n  error: \n   { stack: 'TypeError: Cannot read property \\'getVisibleEditors\\' of undefined\\n    at e.close (out/vs/workbench/workbench.main.js:1661:15751)\\n    at t.e.handle (out/vs/workbench/workbench.main.js:1613:7048)\\n    at a (out/vs/workbench/workbench.main.js:1594:19297)\\n    at Object.h.handle (out/vs/workbench/workbench.main.js:1594:19861)\\n    at out/vs/workbench/workbench.main.js:1675:13\\n    at ChildProcess.<anonymous> (out/vs/workbench/workbench.main.js:1675:2055)\\n    at emitTwo (events.js:87:13)\\n    at ChildProcess.emit (events.js:172:7)\\n    at handleMessage (internal/child_process.js:685:10)\\n    at Pipe.channel.onread (internal/child_process.js:440:11)',\n     message: 'TypeError: Cannot read property \\'getVisibleEditors\\' of undefined',\n     count: 1 },\n  promise: \n   { _oncancel: null,\n     _nextState: null,\n     _state: \n      { name: 'error',\n        enter: [Function],\n        cancel: [Function: r],\n        done: null,\n        then: null,\n        _completed: [Function: r],\n        _error: [Function: r],\n        _notify: [Function: f],\n        _progress: [Function: r],\n        _setCompleteValue: [Function: r],\n        _setErrorValue: [Function: r] },\n     _value: \n      { stack: 'TypeError: Cannot read property \\'getVisibleEditors\\' of undefined\\n    at e.close (out/vs/workbench/workbench.main.js:1661:15751)\\n    at t.e.handle (out/vs/workbench/workbench.main.js:1613:7048)\\n    at a (out/vs/workbench/workbench.main.js:1594:19297)\\n    at Object.h.handle (out/vs/workbench/workbench.main.js:1594:19861)\\n    at out/vs/workbench/workbench.main.js:1675:13\\n    at ChildProcess.<anonymous> (out/vs/workbench/workbench.main.js:1675:2055)\\n    at emitTwo (events.js:87:13)\\n    at ChildProcess.emit (events.js:172:7)\\n    at handleMessage (internal/child_process.js:685:10)\\n    at Pipe.channel.onread (internal/child_process.js:440:11)',\n        message: 'TypeError: Cannot read property \\'getVisibleEditors\\' of undefined',\n        count: 1 },\n     _isException: false,\n     _errorId: 2,\n     done: [Function],\n     then: [Function] },\n  handler: undefined,\n  id: 2,\n  parent: undefined }\n```\n\n// @bpasero \n"}, {'title': 'Code --help should show usage', 'body': "Currently --help just launches the app. The `-n` and `[path]` command line arguments aren't discoverable (see #48).\n"}, {'title': 'Error when trying to save to root of drive', 'body': "In version 0.10.1 it is no longer possible to write to the root of a drive (which worked up to 0.9.1).\nWhen trying to save to e.g. `r:\\example.txt`, the following error message appears:\n\n```\nEPERM: operation not permitted, mkdir 'r:\\'\n```\n\nTested on Windows 7 Ultimate and Windows 10 Professional, US language, German region settings.\n"}, {'title': 'Markdown preview does not handle links with parentheses ', 'body': 'The Common Markdown spec covers the possibility of having links with parentheses (which should be considered valid links regardless).\n\nHere is an example where the preview engine in VSCode mis-renders those:\n![image3](https://cloud.githubusercontent.com/assets/1389609/11311743/8662bd8e-8f86-11e5-932f-885b5f6d7103.png)\n'}, {'title': 'Should allow adjusting font weight', 'body': 'We have the settings `editor.fontFamily` and `editor.fontSize`, but I\'m missing an `editor.fontWeight`. This is most needed when using a dark theme, as folds become visually bolder in that setting. Compare for example Code using Input Mono (regular):\n\n<img width="928" alt="screen shot 2015-11-20 at 22 14 34" src="https://cloud.githubusercontent.com/assets/125426/11312092/3cee7ed8-8fd4-11e5-840e-f72a11390c5b.png">\n\nwith Sublime Text using Input Mono Thin:\n\n<img width="896" alt="screen shot 2015-11-20 at 22 15 13" src="https://cloud.githubusercontent.com/assets/125426/11312097/450ac388-8fd4-11e5-9888-da919fcea386.png">\n\nThis could be either accomplished by a weight setting similar to the CSS `font-weight`, or as part of the font name (i.e. Sublime text accepts "Input Mono Thin" as the font name, while Code currently rejects that).\n\n---\n\nOh, and kudos for creating an editor experience to rival the best on Mac! I never thought the day would come when I\'d run a Visual Studio product on Mac, but I\'m happy to be proven wrong!\n'}, {'title': 'Feature request: go to required file from require() statement', 'body': "There is some existing functionality around viewing definitions of a symbol. I would like to propose an expansion of this: when the user's cursor is on a `require` statement in CommonJS, there is a way to jump to the file that will be returned by that statement. For instance:\n\n``` js\nconst getPageName = require('./get-page-name');\n```\n\nI would like to be able to put my cursor on the `require` statement, hit a hotkey, and then open the `get-page-name.js` file. If the `require` statement is for a node module, like `require('lodash')`, I would expect that hitting the hotkey would open the `main` file of the `lodash` package.\n\nFunctionality very similar to this exists in Webstorm. I use it there all the time.\n\nI would be interested in submitting a PR for this, but I'd like to see if you think this is a good idea first.\n\nThanks!\n"}, {'title': 'Feature request: in the file open shortcut, support substring searching', 'body': "I like the file opener. However, I would like it to support a wider set of queries.\n\nFor instance, let's say that I have two files called `maestro-events`:\n\n![searching with full text](https://cloud.githubusercontent.com/assets/829827/11314808/05ac7d66-8f9e-11e5-96b3-9f74f1424857.png)\n\nThis works fine. However, I would also like to be able to search for a substring of the file name, and have the same set of files be returned:\n\n![searching with shorthand](https://cloud.githubusercontent.com/assets/829827/11314812/0dd27928-8f9e-11e5-8477-417b9dd09c6d.png)\n\nThis behavior is supported in Webstorm. I use it there all the time.\n\nI'd be happy to submit a PR for this if you think it's a good idea.\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwraEQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'What is the compatibility of Razor with VSCode and Intellisense?', 'body': "I'm surprised that so few people have made any comments regarding the lack of Razor intellisense support. I don't totally understand what makes this difficult. I will likely ask the folks over at Razor to see if they have anything to say, but I thought I'd ask here first because it's this tool that doesn't have the intellisense for it. \n"}, {'title': "git doesn't work on windows/mingw64", 'body': "I'm using msys2 git version 2.6.2 on windows10\n\nBut always display `Initialize git repository` in GIT pane.\n\n![](https://i.gyazo.com/b7c23c833fd06fa02a23db76d83f79fd.png)\n"}, {'title': 'Please add i18n support. ', 'body': ''}, {'title': 'Please add more file encodings like GBK', 'body': ''}, {'title': 'Proposal: Extension auto update', 'body': "VSCode support extension, that's good. but i found extension will not auto update. nor auto check update , nor notify us to update.\n\nSo i suggest can you please improve extension update?\n1. Auto check update\n2. Notify user to update or not \n3. User can setting check up frequency(every start? one day? one week?)\n4. The check update can be put in background, not slow down the main VSCode window\n5. Check update can be single/mutiple request. (If installed multiple extensions. check update may slow )\n6. If user choose update, then download new extensions one by one and installed or down them simultaneouslyl and installed \n"}, {'title': 'Open in terminal should open new terminal window', 'body': 'Bug: Open in terminal should open new terminal window. \nI am using mac osx 10.11. I opened a terminal, with tmux .\nI ssh login into remote server debug.\n\nnow, open VSCode, open some folder, choose any one file right click mouse, then choose open in terminal.\n\nThe VSCode just open new tmux screen ? what the hell...\n'}, {'title': "wiki url can't open", 'body': '<img width="767" alt="screen_shot_2015-11-21_at_12_35_00_pm" src="https://cloud.githubusercontent.com/assets/3118295/11316698/74e52026-904c-11e5-80b1-348d0bf32b69.png">\n'}, {'title': 'Auto Intelisense for C#', 'body': "It's a use case scenario where a user has already visual studio and c# tools \nInstalled on his PC . even then he has to manually setup the vs code for C# Intel'sense \n\nSo why don't we make it automatic .. Either in the first setup process or as an extension that checks \nUr PC for new compilers and etc...\n"}, {'title': 'VScode is no longer responding', 'body': '![1](https://cloud.githubusercontent.com/assets/12008675/11316709/0eda6498-904d-11e5-9cc9-c35d3d80a669.png)\nthis situation is occurring while coding "xxx".\n![2](https://cloud.githubusercontent.com/assets/12008675/11316710/10585f64-904d-11e5-973d-66b661a72330.png)\n'}, {'title': 'Omnisharp times out when getting started', 'body': "I'm not sure how to view any kind of log besides the basic one that vscode already provides to see what's going on with it, but for whatever reason Omnisharp fails to start because it says that it took too long. I'm happy to provide more detail for this issue, if I can get some direction on where to get the info to provide. :-)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwsqKA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Add support for opening multiple project folders in same window', 'body': "Right now it doesn't seem possible to opening multiple project folders in the same window which imho is a bit constraining. If you are working on modular modern projects it's a must have to be productive.\n"}, {'title': 'Feature Request: add a Structure Inspector for TS, JS', 'body': 'It would be really nice to have a tab showing a hierarchy tree of all used/available namespaces,classes, objects, generics, interfaces, functions etc.\n\nThank you for your time and to Microsoft for this brilliant gift to Node/JS/TS community.\n\n-- RM\n'}, {'title': '[c++] c++11 raw strings not highlighted properly', 'body': "When I write a raw string in c++11 that span among many lines, it's not highlighted properly.\n\nWhat I see:\n\n![raw-string-bad-highlighted](https://cloud.githubusercontent.com/assets/13927767/11317640/0049bbf8-9035-11e5-813a-6da9d0c034ef.png)\n\nAs you can see, raw string has not the string uniform color.\n"}, {'title': '[Marketplace] Set background color the same as gallery banner', 'body': 'It could be great to put background color on each extension card to be consistent with the gallery banner.\n\nYou can have an example here (https://marketplace.visualstudio.com/vscode/Other) where my extension `pomodoro-code` does not look as expected (white image on white background).\n'}, {'title': 'Linux block select', 'body': "The linux build doesn't seem to support block select like the Windows build; alt-shift-cursor keys.\nI'd like (an option at least) for the cursor mechanics to behave identical in linux as windows. I shouldn't need to retrain my decade+ old muscle memory every time I need to fix/test the linux build.\n"}, {'title': 'Breaks with xml file bigger than 55MB', 'body': "I opened an XML file without knowing was that big, VS Code broke immediately couldn't open that file xml file.\n"}, {'title': 'Keyboard shortcuts for Find & Replace In-View Options', 'body': "Options inside the Find & Replace View have no keyboard shortcuts. There's no way to switch selection, casing, regex with the keyboard, and have to manually click on them using the mouse. \n\nIts one of the only place I find myself being forced to actually use the mouse. And I believe I'm correct in saying its a bug, since VSCode is a keyboard centric editor. \n\nPS: Also seems like the design of this box just got directly inherited from VS. A larger box like Atom, Sublime style, or with support for multi-line would more comfortable to work with. \n"}, {'title': 'TypeScript tsserver error after yeoman generation of extension', 'body': "I created a new TypeScript extension for Code by running `yo code` and I received this error when I opened the extension folder in Code:\n\nThe path /Users/jranderson/workspace/dot-net-apps/Hello World/node_modules/typescript/lib doesn't point to a valid tsserver install. TypeScript language feature will be disabled.\n\nI ran `npm i -g typescript` and installed it. However, I still get the error.\n"}, {'title': 'This can only be used in ts files', 'body': 'Hi,\nI have the following code while using Babel.\n\nThis is my config:\n\n```\n{\n    "compilerOptions": {\n        "target": "ES6",\n        "module": "commonjs"\n    }\n}\n```\n\nWhy do I get the following error:\n- This can only be used in ts files, cannot find name Handler*\n  here:\n\n```\nimport express from "express";\nimport React from "react";\nimport Router from "react-router";\nconst app = express();\n\n// set up Jade\napp.set(\'views\', \'./views\');\napp.set(\'view engine\', \'jade\');\n\nimport routes from "../shared/routes";\n\napp.get(\'/*\', function (req, res) {\n  Router.run(routes, req.url, Handler => {\n\n        ////////////////// This can only be used in ts files, cannot find name Handler ////////////////\n    let content = React.renderToString(<Handler />); \n  ////Block Scoped Variable used before its declaration/////\n    res.render(\'index\', { content: content });\n\n  });\n});\n\nvar server = app.listen(3000, function () {\n  var host = server.address().address;\n  var port = server.address().port;\n\n  console.log(\'Example app listening at http://%s:%s\', host, port);\n});\n\n```\n'}, {'title': 'debug bug: cannot connect to runtime process', 'body': 'I sometimes get this cryptic error message: _Error cannot connect to runtime process (reason: [object Object])_ when I launch the debugger. After I get it, I can not debug at all, until I have closed all open instances of VS code.\n\nThe main issue here seems to be that the error message is unreadable.\n\nOS Name Microsoft Windows 7 Professional\nVersion 6.1.7601 Service Pack 1 Build 7601\nSystem Type x64-based PC\n\n![vscodedebugerror](https://cloud.githubusercontent.com/assets/43763/11318681/5580081c-905c-11e5-811b-bc685f39225a.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwuKAA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Downgrade Code to a previous version', 'body': 'Hi folks,\n\nthe new version 0.10.1 has a really bad performance on my system. \nEverything is slow, letters appears seconds after I have typed them, the windows loads row by row and so on.\nI spend like the last 30 minutes searching the web for a previous installation of vscode. The last version, that worked on my system was 0.9.1.\nWhere can I find it / How can I downgarde?\n\nGitHub Releases do not cover this version, nor does the website.\n\nCheers\nDaniel\n'}, {'title': 'Extension that calls process.exit() brings down extension host', 'body': "D'oh :)\n\n@alexandrudima fyi, I think we should prevent/override calls to process.exit() but obviously there might be more ways to bring down the host.\n"}, {'title': 'Block select', 'body': 'Please consider adding block-selection like VS proper; shift-alt-cursor manages selection.\nCertain kinds of edits are very repetitive or tedious without it.\n'}, {'title': 'VSCode 0.10.1 editor panel hangs on a PHP file', 'body': 'After few seconds working on a PHP file, the editor panel hangs and the whole program needs to be killed.\nOnly the editor panel stops responding, while the menu bar can be clicked (but clicking on "Exit" doesn\'t produce any effect).\n\nTask manager shows a stable 40% CPU load coming from code.exe process.\n\nWindows 10 Pro x64 build 1511\nVSCode 0.10.1\n'}, {'title': 'Wiki Documentation Issue', 'body': 'There are really two issues.  \n1) https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source\n    The link at the bottom of the above page doesn\'t allow the wiki to be forked.\n2) The instructions for the window build.  On a clean install git and node, etc.  Before the "gulp watch" incremental build will work you will also need to :+1: \n      npm install dateformat -g\n      npm install inherits -g\n      npm install isarray -g\n      npm install inflight -g\n      npm install once -g\n\nAnd then the gulp watch\'s dependencies will be met.  I would have just submitted a documentation update, but that is when I ran into bullet 1) above, I am probably missing something simple, but I don\'t see a wiki folder in the main vscode project, or the vscode-doc project either, so I don\'t know how to contribute the hint.\n'}, {'title': 'Support programming ligatures', 'body': 'Such as in the font http://github.com/tonsky/FiraCode .\n'}, {'title': 'redirecting test results output to file instead of debug console', 'body': 'VS Code test results are output to the debug console in VS Code. Is it possible to intercept the output being printed to the console or to redirect the test output to a file?\n\nThis would allow for running the test suite for extensions in a CI environment. The CI in question can run windowed processes.\n'}, {'title': 'Incorrect licence listed on the website', 'body': 'The licence is [given here](https://github.com/Microsoft/vscode/blob/master/LICENSE.txt) as MIT but on the website it is [Microsoft Pre Release](https://code.visualstudio.com/License).\n'}, {'title': 'Problem with updating Extension', 'body': 'I have just tried to update an installed extension, but the process seemed to hang.\n\nI eventually decided to restart VS Code, and when I did, the extension in question was no longer installed.  I attempted to install it again, but the process never seemed to complete.  I did this a few times, each time opening/closing VS Code, and eventually, on I think the fourth attempt, the extension correctly installed.\n\nIs this a known issue?  Are there any logs that I can provide to help identify the problem?\n'}, {'title': '`yo code` line break problems on OSX', 'body': "It's nothing serious: On OSX, line breaks in the `yo code` tool don't seem to work properly.\nAm I right here or is this an issue with yo itself?\n\n![ezgif com-video-to-gif](https://cloud.githubusercontent.com/assets/2205595/11319942/b5b94342-9089-11e5-9efb-5503c525512d.gif)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwvPkw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'VSC Crashed when validating the syntax for PHP', 'body': 'Hello, today as i was writing code i came across a bug which causes the editor to crash.\n\nThat happens in the latest VSC version which introduces extensions and the new PHP linter.\n\n**Bug Replication**\nThe bug apears when there is a syntax error, then when i fix it the autocomplete dies and after a while the editor crashes.\n\nTo make it easier to understand it i also made a video on youtube explaining how i did it.\n- Link: https://www.youtube.com/watch?v=_xzR2Cf0mRI\n'}, {'title': 'Add ability to play sound', 'body': 'Refering to https://github.com/Odonno/pomodoro-code/issues/8, will it be possible to play a sound ?\n'}, {'title': 'Preserve window size when restoring a maximized window', 'body': 'The window size is not preserved, if VSCode is closed being maximized. \nThe correct behavior should be that it restore to the previous un-maximized size, when restored. \n'}, {'title': 'Extension Management View', 'body': 'Add a view for extension management like Atom with detailed lists, extension download / update progress. \n'}, {'title': 'Format Code command missing on Mac OS X', 'body': 'The format code command seems to have been lost, unless I am missing something.  Please restore!\n'}, {'title': 'Is it possible to listen to events of an inputbox?', 'body': 'If I accept input using\n\n```\nwindow.showInputBox();\n```\n\nIs there any way I can listen to key change events? I am writing an extension and I want to accept an input from the user and I want to autocomplete when the user hits `tab` like most terminals. If this is not possible inside the inputbox is there any other control I can use to achieve this?\n'}, {'title': 'Support (customizable) file type icons in the sidebar', 'body': 'Sublime Text and Atom supports displaying an icon indicates the type of files shown in the sidebar. These icons can be customized by "UI" themes. The current VSCode does not support any sidebar customization.\n![image](https://cloud.githubusercontent.com/assets/240091/11320670/37ad911c-90dc-11e5-988f-e8ff9e0b0d16.png)\n'}, {'title': 'IntelliSense descriptions cutoff in Visual Studio Code for Mac', 'body': 'I am using Visual Studio Code `v0.10.1` on Mac. When I was utilizing IntelliSense in a `tsconfig.json` file that have for a `TypeScript` project, I noticed that the descriptions for some of the properties was being cutoff. See screenshot below:\n\n![visual studio code](https://cloud.githubusercontent.com/assets/7575912/11321263/6e6bc068-906c-11e5-9ff7-07f5a27cbd85.png)\n\nI would expect the IntelliSense window to expand to show the full description, or for the description to flow onto a new line. Not sure if this is specific to `tsconfig.json` files or if it is more widespread but I just wanted to flag it as an issue. Thank you.\n'}, {'title': 'Unable to zoom out past default zoom level.', 'body': "When I tried the very first public release of VCS, I was able to both zoom in and out from the initial zoom.\n\nMy personal preferred zoom level is around 90%; I like content to be as dense as possible as long as I can still read the fonts, that way I can fit more windows/information on a screen at at time.\n\nAn update from a few months ago changed it so I could only zoom in, but not zoom out past the default zoom level.\n\nNow that the source code is available, I've looked into why that happens and found this comment in [src/vs/workbench/electron-browser/actions.ts#L169](https://github.com/Microsoft/vscode/blob/bff376d1388d40050aaabf9ec96101a427b506de/src/vs/workbench/electron-browser/actions.ts#L169):\n\n``` TypeScript\nexport class ZoomOutAction extends Action {\n...\n    if (webFrame.getZoomLevel() > 0) {\n        webFrame.setZoomLevel(webFrame.getZoomLevel() - 1); // prevent zoom out below 0 for now because it results in blurryness\n    }\n...\n}\n```\n\nI'm opening this issue to track this issue (I did not find any existing open issues tracking this specific problem), because I'd really like to see it resolved so I can use 90% zoom level. Thank you!\n"}, {'title': 'Renaming identifiers should save on other files', 'body': 'It is right now very problematic for me when renaming things. I need to rename an identifier and save all other files the rename touches that is in the workspace folder.\n\nWhen renaming files it should save the renamed identifiers on other files, even though they are open. If there are other open workspace files, that contains other unsaved changes I think it should save only the renamed identifier, and leave the rest unsaved. \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwwsdw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'JSON schema support for .jshintrc and .jscsrc', 'body': 'Prior to the 0.10.1 release, the following  settings were baked into the editor:\n\n``` json\n        // Control whether jshint is enabled for JavaScript files or not.\n    "jshint.enable": true,\n\n    // The jshint options object to provide args to the jshint command.\n    "jshint.options": {},\n```\n\nNow that there\'s an official [JSHint extension](https://marketplace.visualstudio.com/items/dbaeumer.jshint), the following schema support should be added by it rather than including it into the editor:\n\n``` json\n        {\n            "fileMatch": [\n                "/.jshintrc"\n            ],\n            "url": "http://json.schemastore.org/jshintrc"\n        },\n```\n\nI\'d argue the same point regarding the [JSCS extension](https://marketplace.visualstudio.com/items/ms-vscode.jscs). It should add the following to the settings, rather than baking it into the editor:\n\n``` json\n        {\n            "fileMatch": [\n                "/.jscsrc"\n            ],\n            "url": "http://json.schemastore.org/jscsrc"\n        }\n```\n'}, {'title': 'Keyboard shortcut to focus the "Working Files" section of the sidebar. ', 'body': "Apparently after focusing the sidebar, we cannot navigate to the working files section using the keyboard arrow keys. Only options available through keybindings are to select the previous and next working file. There isn't a option to cycle through them or select them individually through sidebar using keyboard shortcuts. \n"}, {'title': 'this.commitInputBox.layout is not a function: TypeError: this.commitInputBox.layout is not a function', 'body': 'Found this when switching to git viewlet and the result was an empty viewlet:\n\n```\n        [8037:1121/090324:INFO:CONSOLE(309)] "this.commitInputBox.layout is not a function: TypeError: this.commitInputBox.layout is not a function\n            at ChangesView.layout (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/parts/git/browser/views/changes/changesView.js:123:33)\n            at GitViewlet.layout (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/parts/git/browser/gitViewlet.js:109:34)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:235:33\n            at CompletePromise_then [as then] (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/winjs.base.raw.js:1826:49)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:228:49\n            at CompletePromise_ctor.CompletePromise_then [as then] (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/winjs.base.raw.js:1826:49)\n            at SidebarPart.showViewlet (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:190:41)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:109:34\n            at Object.notifySuccess [as _notify] (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/winjs.base.raw.js:1440:59)\n            at Object.state_success_notify.enter (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/winjs.base.raw.js:1127:30)", source: file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/electron-browser/shell.js (309)\n        [8037:1121/090324:INFO:CONSOLE(309)] "this.commitInputBox.layout is not a function: TypeError: this.commitInputBox.layout is not a function\n            at ChangesView.layout (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/parts/git/browser/views/changes/changesView.js:123:33)\n            at Array.<anonymous> (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/parts/git/browser/views/changes/changesView.js:108:109)\n            at InputBox.EventEmitter._emitToSpecificTypeListeners (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/eventEmitter.js:177:37)\n            at InputBox.EventEmitter._emitEvents (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/eventEmitter.js:202:22)\n            at InputBox.EventEmitter.emit (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/eventEmitter.js:219:22)\n            at InputBox.adjustHeight (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/browser/ui/inputbox/inputBox.js:245:18)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/browser/ui/inputbox/inputBox.js:67:51", source: file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/electron-browser/shell.js (309)\n        [8037:1121/090327:INFO:CONSOLE(309)] "this.commitInputBox.layout is not a function: TypeError: this.commitInputBox.layout is not a function\n            at ChangesView.layout (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/parts/git/browser/views/changes/changesView.js:123:33)\n            at GitViewlet.layout (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/parts/git/browser/gitViewlet.js:109:34)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:235:33\n            at CompletePromise_then [as then] (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/winjs.base.raw.js:1826:49)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:228:49\n            at CompletePromise_ctor.CompletePromise_then [as then] (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/winjs.base.raw.js:1826:49)\n            at SidebarPart.showViewlet (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:190:41)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:109:34\n            at CompletePromise_ctor.CompletePromise_then [as then] (file:////Users/bpasero/Development/Microsoft/monaco/out/vs/base/common/winjs.base.raw.js:1826:49)\n            at file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/browser/parts/sidebar/sidebarPart.js:93:54", source: file:////Users/bpasero/Development/Microsoft/monaco/out/vs/workbench/electron-browser/shell.js (309)\n```\n'}, {'title': 'can not open multiple VSCode instances from command line', 'body': 'I added `code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* }` to my `.zshrc` but it didn\'t work. When the first time I use `code a` to open folder `a`, it was OK. However, then I use `code b` to open folder `b`, VSCode still had one instance and still folder `a` is open.\n\nEven I use `open -n /Applications/Visual\\ Studio\\ Code.app`, things doesn\'t work too.\n'}, {'title': '`ext install` is slow', 'body': '`ext install` is slow with slow internet connection to fetch extensions list, is this possible cache the results?\nor use git instead of fetch list every time ([vsoGalleryService.ts](https://github.com/Microsoft/vscode/blob/6e94b27e06cef23a84fca0aff18b7702dc670014/src/vs/workbench/parts/extensions/node/vsoGalleryService.ts#L85))?\n'}, {'title': 'fold functions and code ', 'body': 'There is currently no way to fold functions, when the code size is huge this starts to be a problem\n'}, {'title': 'Allow to pick working files via quick open', 'body': "There is a ctrl+tab feature right now, but it isn't among the working files, it is among the latest files, a feature I haven't really understood yet\n"}, {'title': 'Open next file when you close one file', 'body': 'when I close a working file, the next file in the buffer should be opened rather than blank window\n'}, {'title': 'Find and replace all open/pinned files in current session', 'body': 'replace all in session might be a good option should you choose to keep it \n'}, {'title': 'Provide an option to keep quick open open on focus lost', 'body': "when i try to switching between windows using `alt+tab` QuickOpen panel (which i opened with `f1`) close, it's a little annoying\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwxzaw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Using the Monaco Editor in a browser without VSCode', 'body': "Now that VS Code is open source, it also means that the [Monaco Editor is open source](https://github.com/Microsoft/vscode/tree/master/src/vs/editor) _(at-least to some extent)_.\n\nI would really like to use this editor in my own web application for editing TypeScript files. The only problem is I can't find any documentation about how to do this. I know its possible because the editor is on [TypeScript Playground](http://www.typescriptlang.org/Playground) and [a few other places](http://www.hanselman.com/blog/ARichNewJavaScriptCodeEditorSpreadingToSeveralMicrosoftWebSites.aspx). \n\nAs far as I can tell, the open sourcing of VS Code is the first time the source code of the Monaco editor has been made public. Also, I think that the VS Code repository is the primary source of the Monaco editor _(someone from Microsoft please confirm?)_. \n\nSo far, there have been many questions about using the Monaco Editor on Stack Overflow and other forums, but I have yet to see an official reply from Microsoft. \n\n**Can someone please provide some documentation on using the Monaco Editor in a web site, or perhaps release the source code of TypeScript Playground** _(There is nothing to hide now that we have the Monaco source in the VS Code repository)_. \n\nCurrently, the only thing keeping me from using TypeScript as a JavaScript replacement is the fact that I can't easily use the Monaco Editor inside of my web application. I'm currently using the ACE Editor with a  [Tern plugin I created](http://sevin7676.github.io/Ace.Tern/demo.html#javascript). I don't want to go through all of the work of creating full Intellisense support for TypeScript inside of ACE because its a significant undertaking- Instead I'd rather contribute to the Monaco editor and use it as a replacement for ACE (and replace JavaScript with TypeScript). \n"}, {'title': 'Question: Is it possible to use IFrameEditor inside extensions?', 'body': 'Is it possible somehow to use IFrameEditor inside extensions? It may be handy in case if we want to provide different preview for Markdown files(for example in case of jekyll based blog).\n'}, {'title': "Don't close Commands View on losing Focus", 'body': 'Closing Commands View on losing focus is annoying, particularly when installing or searching for extensions, and commands that are not instantaneous. \n\nPlease stop the commands view from closing itself when the window loses focus.\n'}, {'title': "Problem matcher can't support absolute and relative filenames at the same time", 'body': 'I have a problem matcher that works on the output of the Delphi compller. Sometimes it gives relative and absolute file names at the same time. When I set `"fileLocation": ["absolute"]`  the messages having relative paths can\'t be opened. When I set `"fileLocation": ["relative", "${workspaceRoot}"]` the messages having absolute paths can\'t be opened anymore.\n\nIs it possible to define a a problem matcher that uses relative paths as long as the mentioned file exists and uses absolute paths as a fallback mode?\n'}, {'title': 'Untitled Resource SaveAs should default to All Files (*.*)', 'body': 'Experienced on Windows\n\nIts a minor nuisance that when saving a new file, it always defaults to "Untitled-[X].txt" with Save as type set to "Plain Text". Therefore if you specify an extension and dont change the dropdown to all files (or correct type) it will save it like SampleFile.js.txt.\n\nPropose that untitled files default to just "Untitled-[X]" with no extension and save as type set to all files.\n\nAppears to be as simple as removing the mime type suggesestion in [/src/vs/workbench/browser/parts/editor/untitledEditorInput.ts](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/browser/parts/editor/untitledEditorInput.ts#L78)\n\n``` javascript\n    public suggestFileName(): string {\n        if (!this.hasAssociatedFilePath) {\n            let mime = this.getMime();\n            if (mime) {\n                return suggestFilename(mime, this.getName());\n            }\n        }\n\n        return this.getName();\n    }\n```\n\nCurrently electron autoappends \\* . \\* on "all files", although looks like it was fixed v0.34.2+\nWorkaround in the meantime is to show no default text\n'}, {'title': 'Unable to save file without extension', 'body': 'Experiencing on Windows\n\nWhen trying to save a file without an extension using All Files type, Save As Dialog throws a "The file name is not valid" alert.\n'}, {'title': 'Problem matcher severity handles "Note" and "Hint" as errors', 'body': "I'm using a problem matcher that handles compiler outputs. The messages can have the severities `Note`, `Hint`, `Warning`, `Error` and `Fatal`.\r\nThe last three are displayed correctly but the first two severities are displayed as errors too. Can I define a mapping for serverities anywhere?\r\n"}, {'title': 'Could vs code supports ES6 in <script></script>?', 'body': "I use Vue and webpack to build my webapp, which allows me to write a web component  like this:\n\n``` html\n<style>\n /*the component's css goes here*/\n</style>\n<template>\n  <!-- the component's html goes here-->\n  <div></div>\n</template>\n<script>\n  // the component's js goes here\n  import Xx from 'xx'\n  let xx = new Xx()\n  xx(yy => {\n    return 'Have a nice day'\n  })\n</script>\n```\n\nbut, the problem is even I created a jsconfig.json file which sets the target to ES6. It just didn't work.\n"}, {'title': 'OSS Build - Failed to tokenize input error with certain languages', 'body': 'Certain laungauges syntax highlighting do not work for me running the OSS development build on Windows 7. The release build works fine with these languages however.\n\nSo far I have noticed it with XML, Clojure, VB, TypeScript and F#\n\nQuite possibly is an issue with vscode-textmate or oniguruma.\n\nThrows the following:\n\n```\nC:\\[VSCODE_PATH]\\node_modules\\vscode-textmate\\node_modules\\oniguruma\\build\\Release\\onig_scanner.node: Error: %1 is not a valid Win32 application.\nC:\\[VSCODE_PATH]\\node_modules\\vscode-textmate\\node_modules\\oniguruma\\build\\Release\\onig_scanner.node\n    at Error (native)\n    at Object.module.(anonymous function) (ATOM_SHELL_ASAR.js:137:20)\n    at Object.module.(anonymous function) [as .node] (ATOM_SHELL_ASAR.js:137:20)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object.<anonymous> (C:\\[VSCODE_PATH]\\node_modules\\vscode-textmate\\node_modules\\oniguruma\\lib\\oniguruma.js:4:17)\n    at Object.<anonymous> (C:\\[VSCODE_PATH]\\node_modules\\vscode-textmate\\node_modules\\oniguruma\\lib\\oniguruma.js:65:4)\n    at Module._compile (module.js:434:26)\nThe mode has failed while tokenizing the input.\n```\n'}, {'title': 'Php autocomplete issue', 'body': "Autocomplete stops working for php\n\n```\nworkbench.main.js:1550 WARNING: Promise with no error callback:undefined\nworkbench.main.js:1550 Error: Promise did not implement oncancel(…)\n```\n\nThis is how to reproduce.\nSay you start writing `array_chunk`, it autocompletes fine, as you are writing.\nThen you open and close the parentheses and now you have this `array_chunk()`. Now begin to delete what you just wrote, when you delete the parentheses and you get back to having just `array_chunk` again that's where that error shows up in the dev tools and autocomplete stops working for everything until you restart the editor. Of course this happens with any other function also not just array_chunk.\n\nI tested this behavior on Fedora 22 and Windows 10 both 64bit\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBwzGBA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'default lauch.json for new node app has empty configurations', 'body': 'Using VS Code 0.10.1 on Mac OS 10.10.5\n1) create and cd into a new project directory\n2) invoke "npm init" and specify "entry point" file (i.e. "main" in package.json)\n3) create the entry point file (i.e. index.js)\n4) invoke "code ."\n5) switch to debug view and click the gear icon or press "run"\n\nExpect result:  launch.json should include configurations for "Launch index.js" and "Attach" with "type":"node" and other needed parameters.\n\nActual result: launch.json configurations is [], an empty array, i.e.\n\n```\n{\n    "version": "0.2.0",\n    "configurations": []\n}\n```\n'}, {'title': 'Support user stylesheet(s) and user script(s)', 'body': 'Atom equivalent: "Open Your Stylesheet" and "Open Your Init Script".\n\nIt\'s nice to be able to make small changes (e.g. I like to use a 1px-wide cursor instead of the default 2px), without having to create a theme/extension.\n'}, {'title': 'Blinking cursor', 'body': 'Any option to disable cursor blinking?\nAlso, how to increase the font size for the file explorer.\n'}, {'title': "Intellisense does not autocomplete modules in 'node_modules' folders.", 'body': 'While Intellisense do index **require**d**()** modules which are provided by relative path,\nit is not the case for modules found in **node_modules** folders.\n\nPlease respect modules search path as described in [Node.js documentation](https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders)\n'}, {'title': 'how to focus cursors from extension api?', 'body': 'I want to move a cursor from a extension. I wrote below codes.\n\n```\nvar p = new vscode.Position(line,char);\nvar s = new vscode.Selection(p, p);\nvscode.window.activeTextEditor.selection = s;\n```\n\nThe cursor moves, but when it move to outside of a window, the window does not focus it.\nHow to focus cursors from a extension api?\n'}, {'title': 'not working key-binding with JIS Keyboard', 'body': 'I make VIM-style key-binding plugin ( https://github.com/74th/vscode-vim ).\nI use keybinding with JIS keyboard on MacOSX, bellowing keys not work.\n- no key hits\n  - `shift+2`\n  - `shift+7`\n  - `shift+[`\n  - `shift+;`\n  - `\'`\n  - ```\n  - `space`\n- a number of keys hits ( key-bind -> JIS Key )\n  - `-` -> `-`,`_`\n  - `shift+=` -> `=`,`+`\n  - `[` -> `[`,`@`\n  - `shift+\'` -> `"`,`\'`\n  - `shift+`` -> `~`,```` `\n- strange keys hits\n  - `shift+-` -> `shift+_`\n  - `=` -> `^`\n\nI am happy to be able to use `:` and `"` for key-binding setting , instead of `shift+;` and `shift+2`.\n'}, {'title': 'Split editor vertically and to more rows / columns', 'body': 'Complex layout is more powerful when displaying non-editor panels in workspace. the workspace in Atom can be split vertically and horizontally .\n'}, {'title': 'Trim trailing whitespaces on line with cursor when explicitly saving', 'body': "I have this set in my settings.json:\n\n![image](https://cloud.githubusercontent.com/assets/314188/11328824/c1e909cc-91f6-11e5-94a0-3687d1b02c08.png)\n\nBut after saving a file containing some trailing whitespace, it doesn't get trimmed:\n\n![image](https://cloud.githubusercontent.com/assets/314188/11328829/e300064c-91f6-11e5-8fda-75e8680f0561.png)\n"}, {'title': "what does this do? import 'vs/css!./media/workbench';", 'body': "Hi,\n\nQuick question. I see in a lot of .ts files this type of import 'vs/css!./xxx/yyy'. What does this do?\n"}, {'title': 'Replace does not work on mac', 'body': 'Hi,\n\nI am trying to use Replace but it does nothing when I select it from the menu or use the shortcut.\nMac version 10.11\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBw1eqQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'VsCode keeps freezing', 'body': 'After the latest update vscode keeps freezing after running for about an hour.\n'}, {'title': '"dnu restore" tries to use ASP.NET beta3?', 'body': 'I\'ve got ASP.NET 5 RC 1 installed, but the "dnu restore" command in Visual Studio code is explicitly trying to use beta3:\n\n```\ncd \'/Users/danlo/src/aspnettest/TestApp1\' ; /Users/danlo/.k/runtimes/kre-mono.1.0.0-beta3/bin/dnu restore\ndanlo-mbp1:~ danlo$ cd \'/Users/danlo/src/aspnettest/TestApp1\' ; /Users/danlo/.k/runtimes/kre-mono.1.0.0-beta3/bin/dnu restore\n-bash: /Users/danlo/.k/runtimes/kre-mono.1.0.0-beta3/bin/dnu: No such file or directory\n```\n\nIf I run "dnu restore" myself, it works fine. \n\nHow do I fix Visual Studio code?\n'}, {'title': 'VSCode/OmniSharp looking for DNX runtime in wrong directory', 'body': 'On Mac OS, DNVM installed the DNX runtime in `/usr/local/lib/dnx/runtimes/dnx-mono.1.0.0-rc1-final`. However, OmniSharp in Visual Studio Code was incorrectly looking in `/Users/danlo/.dnx/runtimes`. To get it to work properly, I created a symbolic link:\n\n```\nln -s /usr/local/lib/dnx/runtimes /Users/danlo/.dnx/runtimes\n```\n\nThis smells super hacky though.\n'}, {'title': 'No autocompletion from .d.ts files inside node_modules for JavaScript projects', 'body': "Autocompletion from .d.ts definition files placed in node_modules directory works just fine for TypeScript projects (projects which have a .tsconfig file).\nIt even works for JS-based projects if one has .d.ts files inside the project. However if the definition files are placed inside node_modules directory in a JS-based project VS Code doesn't seem to pick them up.\n"}, {'title': 'git.path in user settings', 'body': 'I have portable git on my Windows 10. In VS Code you can set user settings for this section:\n\n```\n    //-------- Git configuration --------\n\n    // Is git enabled\n    "git.enabled": true,\n\n    // Path to the git executable\n    "git.path": null,\n\n    // Whether auto fetching is enabled.\n    "git.autofetch": true,\n```\n\nSo I set "git.path": "c:\\tools\\git\\bin" and restart, it still can\'t find git install.\n\nLater I set System Env Path to include git, then it\'s happy; seems setting above doesn\'t really change anything?\n\nBest,\n\nDong\n'}, {'title': '[debug] Support to add launch configs after the fact', 'body': 'I would like to add an additional config to an existing launch.json.\nTypically this config if from the same debug type as the existing configs, but has a variation in one or more arguments.\nIntellisense on the configurations array level could offer to insert configs.\n'}, {'title': 'Cannot install extension behind NTLM proxy (Windows)', 'body': 'When I try to install the extension, I get the error:\n`connect ETIMEDOUT ip:443`\n'}, {'title': 'add cusor bug: ctrl+alt+up/down conflict with windows shortcut.', 'body': "As mentioned in the title, the add cursor shortcut conflict with the windows shortcut to flip screen Since I'v updated my os to windows 10 th2 pro, all is ok when I was using the family version.\n"}, {'title': 'File watcher fails with chinese characters in path', 'body': "**First of all , Thanks to all contributor**\n\nWhen i use the lastest version to build my node app, i want to debug my app..\n\nwhen i add the launch.json , but not appear in the  launch configuration dropdown menu.\n\nSo , i  guess need restart the VSCode ,    Yes...  did it...\n\nMaybe it's a  tiny bug...\n\nthx.\n\nOS : Windows 10 pro 10586\n"}, {'title': "Autocomplete doesn't work in .jsx-files", 'body': "Autocompletion of variable names, auto closing of brackets and so on doesn't seem to work in .jsx-files. Shouldn't these files work the same way as the regular .js-files with the exception of supporting the JSX syntax?\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBw3wuw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[Feature Request] SQF syntax highlighting', 'body': 'I would really like to hgave the ArmaA SQF (Status Quo Function) file format syntax highlighting in it.\nMore Info: https://community.bistudio.com/wiki/SQF_syntax\n'}, {'title': 'Source map debugging not working for built in extensions', 'body': 'Steps to reproduce:\n- clone vscode and follow steps here https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source\n- run scripts\\code\n- open VSCode on the vscode folder\n- select Attach to Extension Host launch config\n- Attach debugger\n- open bufferSyncSupport.ts and set a breakpoint on line 62\n- open a ts file in the instance started via scripts\\code and type into the file\n\nObserve: debugger not hit.\n\nIf you set a breakpoint in the JS file everything works as expected.\n'}, {'title': '[bat] Batch File Syntax highlighting not working on variables or comments.', 'body': 'After upgrading to version 0.10.1 Syntax highlighting within windows .bat files has become reduced.\n\nPrevious versions would syntax highlight variables (%VARIABLENAME%) and comments(REM-COMMENT TEXT" now these both appear as normal text:\n\n![image](https://cloud.githubusercontent.com/assets/594681/11335412/f2e5a0c6-91d3-11e5-84d7-51d17cc69b0c.png)\n\n![image](https://cloud.githubusercontent.com/assets/594681/11335426/06c101c6-91d4-11e5-9789-d016f364fa4b.png)\n'}, {'title': 'Unicode characters show as question marks in method documentation hover window', 'body': "I have a few methods which documentation contains Unicode (UTF-8) characters. When showing documentation by hovering over a method I get garbage question mark characters instead in this window.\n\nLooks like (when hovering over Jednorożec's constructor):\n![2015-11-23](https://cloud.githubusercontent.com/assets/1633261/11335474/c3cee9c4-91dc-11e5-9579-df8edf0ac317.png)\n\nXML documentation for this method:\n![2015-11-23 1](https://cloud.githubusercontent.com/assets/1633261/11335478/c61b000a-91dc-11e5-85be-2eee073ef994.png)\n\nAll files are saved as UTF-8.\n"}, {'title': '[json] Support to contribute JSON schema from an extension', 'body': 'See https://github.com/Microsoft/vscode-jshint/issues/4 as a use case.\n'}, {'title': 'Support GitHub Desktop authentication', 'body': 'I have scm git installed and GitHub for Windows.\n\nWhen I try to push I get prompted for username/password then get "Authentication failed on the git remote."\n\nI am able to push from GitHub for Windows and command line using same credentials\n'}, {'title': 'Resizable "Opened Editors"', 'body': 'Please, add ability to resize (vertically) "working files" area.\n'}, {'title': 'Language plugin adding new problem matcher', 'body': "In my [vscode-dylan](https://github.com/dylan-lang/vscode-dylan/) extension, I'd like to be able to add a new problem matcher so that it can be shared between all projects that run the [Dylan](http://opendylan.org/) compiler.\n"}, {'title': 'Markdown Preview does not interpret kbstyle() [Not sure if it is a Bug]', 'body': 'In the vscode-docs repo there are some markdown documents who contains function like syntax "kbstyle()"\n\n![image](https://cloud.githubusercontent.com/assets/2528972/11336344/acd245ec-91cb-11e5-90c8-c53b931cef89.png)\n\nThe Markdown preview doesn\'t seem to understand this syntax, but in the official documentation page it has a different coloring.\n\n![image](https://cloud.githubusercontent.com/assets/2528972/11336368/e6c8bb0a-91cb-11e5-9886-b71956591429.png)\n\nI\'m not sure if this is a Bug, or just an expected behavior, as I haven\'t found any documentation on this "kbstyle()" syntax\n'}, {'title': 'Color Theme completely changed', 'body': 'I used to edit my TSQL scripts on Visual Studio Code. When was added the feature to support Themes, the Dark themes was completely changed (at least for TSQL scripts). Ok, I started using the Monokai Dimmed, and now, on the last version, it was completely changed again. Why do this on existing themes??? Would be easier just create another theme ? :( \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBw42xg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Selection expansion command and hotkey', 'body': "One of the features I can't live without is selection expansion and contraction. This is obviously language specific but it would be amazing.\n\nHere are two implementations:\n- https://www.jetbrains.com/resharper/help/Coding_Assistance__Extend_Shrink_Selection.html\n- https://github.com/aronwoost/sublime-expand-region\n"}, {'title': 'Find widget only highlights the first 19999/20000 matches', 'body': 'Using the search with regular expression in the VS Code 0.10.1, it only highlights the matched items with couple hundreds of lines from the top and skips the rest of the document.\n\nThis can be done by creating an empty document and fill it up with thousands lines of text and perform a regex search.\n'}, {'title': 'Crash every few minutes', 'body': "Code seems to be crashing on me every few minutes, occasionally it will last an hour or so but then locks up not saving any work and suggests I restart the program. Not had this issue before it seems to have come with the last update but It doesn't report any error message to send over is there anything I can provide to help narrow down the cause?\n\nCode 0.10.1\n\nProcessor   Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz\nVideo Card 1    AMD Radeon R9 200 Series\nVideo Card 2    Intel(R) HD Graphics 3000\nMemory  16 GB\nOperating System    Microsoft Windows 7 Professional Edition Service Pack 1, 64-bit\n"}, {'title': 'Change the editor fallback defaults to insertSpaces: true, tabSize: 4', 'body': "I don't have a preference setting about spaces vs tabs. When I open `.travis.yml`, VSCode **always** uses tabs instead of spaces to create new indentation. This is very problematic since YAML files **forbid** tabs.\n\n![image](https://cloud.githubusercontent.com/assets/22350/11338152/b61513e2-91f2-11e5-8a5d-78df2e7346d1.png)\n\nI thought the editor would automatically figure out the indentation to use?\n"}, {'title': '[coffeescript] syntax highlighting broken when divide symbol is not separated using space', 'body': '<img width="231" alt="screen shot 2015-11-23 at 8 16 36 pm" src="https://cloud.githubusercontent.com/assets/7571618/11339358/2c163ae0-921f-11e5-80a4-510ef8c05863.png">\n'}, {'title': 'Possible to auto close html tags when pressing enter?', 'body': 'Right now you have to type `</` and press enter to close the last tag it would be much simpler to just press enter and have it close \n'}, {'title': 'debug console scrollable horizontally, just like code ', 'body': '_From @joeblew99 on November 23, 2015 15:11_\n\nwould make debugging much smoother is the debug console window was scrollable horizontally.\nin a code window its nice that i can scroll easily to see long longs.\n\nIf there is a way to maybe force the debug console window to flow onto the next line that would be also good.\n\n_Copied from original issue: Microsoft/vscode-go#66_\n'}, {'title': 'Hide File | Preferences | Workspace Settings when not applicable', 'body': 'When opening VS Code without a folder/project opened, choose File --> Preferences --> Workspace Settings. An Info box appears and says "Open a folder first to create workspace settings." The Workspace Settings option should only be present in the File menu when a project is opened. Thoughts?\n'}, {'title': 'File watcher fails over Samba share', 'body': "The Explore sidebar doesn't always reflect the current state of the file system, e.g. I add a file from outside of vscode and it doesn't appear in Explore. I frequently have the same problem with Atom (which I also have running and which may be consuming all of the watches), but at least in Atom's tree view I can collapse, expand a folder via keyboard commands to get it to refresh. Is there a way to do it in vscode? If not, I pose it as a feature request. Thanks!\n"}, {'title': '64bit version for Windows?', 'body': 'Is there a reason why there is no 64bit version of Code for Windows? I get that Electron 64bit was only released after Code was already out but is that the only reason? :)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBw8RWg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Crash when running overnight', 'body': "Ubuntu 12.04, VSCode 0.10.1\n\nSeveral times VS Code has become unresponsive overnight on the above configuration (locked). Here is the program output:\n\n```\n$ code .\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\n\n<--- Last few GCs --->\n\n173527197 ms: Scavenge 1397.0 (1457.6) -> 1397.0 (1457.6) MB, 1.8 / 0 ms [allocation failure] [incremental marking delaying mark-sweep].\n173527199 ms: Scavenge 1397.0 (1457.6) -> 1397.0 (1457.6) MB, 1.9 / 0 ms [allocation failure] [incremental marking delaying mark-sweep].\n173529040 ms: Mark-sweep 1397.0 (1457.6) -> 1396.9 (1457.6) MB, 1841.7 / 98 ms [last resort gc].\n173530775 ms: Mark-sweep 1396.9 (1457.6) -> 1396.1 (1457.6) MB, 1735.0 / 5 ms [last resort gc].\n\n\n<--- JS stacktrace --->\n\n==== JS stack trace =========================================\n\nSecurity context: 0x8a48933a859 <String[7]: file://>\n    1: _completed [file:////home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/vs/workbench/workbench.main.js:~1544] [pc=0x23ff9b465433] (this=0x1a37262790b1 <JS Object>,e=0x1cd36e9041b9 <undefined>)\n    2: arguments adaptor frame: 0->1\n    6: bound  [native v8natives.js:1208] [pc=0x23ff99a26270] (this=0x8a489346089 <JS Global Object>)\n\n==== Details =============================...\n\nFailed to get crash dump id.\nReport Id: \nevents.js:141\n      throw er; // Unhandled 'error' event\n      ^\n\nError: channel closed\n    at process.target.send (internal/child_process.js:509:16)\n    at Console.console.error (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/bootstrap.js:5:937)\n    at process.<anonymous> (/home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/bootstrap.js:5:1340)\n    at emitOne (events.js:77:13)\n    at process.emit (events.js:169:7)\n    at process._fatalException (node.js:223:26)\n[VS Code]: detected unresponsive\n```\n\nThis has never occurred with Atom.\n"}, {'title': 'Default keybindings that conflict with default Ubuntu OS keybindings', 'body': '_Related https://github.com/Microsoft/vscode/issues/51_\n\nThe following default keybindings conflict with default Ubuntu OS keybindings.\n\nMove app to different workspace:\n\n```\n{ "key": "ctrl+shift+alt+down",   "command": "editor.action.copyLinesDownAction",\n                                     "when": "editorTextFocus" },\n{ "key": "ctrl+shift+alt+up",     "command": "editor.action.copyLinesUpAction",\n                                     "when": "editorTextFocus" },\n{ "key": "ctrl+shift+alt+left",   "command": "workbench.action.focusLeftEditor" },\n{ "key": "ctrl+shift+alt+right",  "command": "workbench.action.focusRightEditor" },\n```\n\nMaximize/unmaximize(?):\n\n```\n{ "key": "ctrl+meta+up",          "command": "editor.action.insertCursorAbove",\n                                     "when": "editorTextFocus" },\n{ "key": "ctrl+meta+down",        "command": "editor.action.insertCursorBelow",\n                                     "when": "editorTextFocus" },\n```\n'}, {'title': "Context menu for 'non-admin' users", 'body': "I'm running VSCode in a corporate network (Active Directory), when I install VSCode I'm asked for an admin password, after the installation normal users sessions don't have the VSCode context menu options, only the admin account has that menu.\n\nHow can I add the context menu for all users?\n"}, {'title': 'Breaking vscode into modules', 'body': "It's really great to see vscode's source released! \n\nI've been look at your implementation of git and given the extensiveness of it, I was wondering if it could be a great, general purpose git wrapper around the CLI. \n\nI spent a little bit of time trying to see what would be involved in extracting it into an npm module compiled into JavaScript (bear in mind I've never used typescript).\n\nI ran into quite a few challenging problems:\n\n1) typescript and module paths - it looks as if typescript handles modules very differently than node, brunch, webpack, ES6, etc. I've never used typescript before, but maybe they have some sort of global paths rather than relative paths or perhaps this was a choice by the vscode team? Ideally, all of the git implementation would be self-referencing using relative paths and depend on the smallest number of shared modules as needed using absolute paths to the node_modules folders / modules.\n\n2) cross-dependencies into the vs directory - it looks like vscode was written in a semi-monolithic, but nicely grouped way rather than as many smaller modules. Ideally, there would be a separation between client, common, and node logic around smaller aspects rather than through the big `platform` and `workbench` buckets to reduce cross-dependencies and to promote reuse. When I'm trying to only compile an entry point through common/git/git.ts, it seems to be pulling in `vs/base/browser/keyboardEvent.ts` but I cannot figure out where the dependency is from (I'm new to typescript so not sure how to do dependency tracing).\n\nThese two aspects of code structure makes it difficult to separate the git functionality from all of the application logic so I'm putting aside this idea for now; however....I was wondering if there any plans to break up vscode into smaller, reusable modules using npm like Atom did?\n\nObviously, it is still early days for open sourcing vscode and I'm sure there are a lot of other things on your roadmap, but this would be a great longer-term goal!\n"}, {'title': 'Moving selection after editor.action.insertCursorBelow shows the original line having a double highlight', 'body': 'I think the highlight is doubling up due to the symbol underneath on the first line being highlighted, symbol highlighting should be disabled when the current selection is multi-line.\n\n**Repro**\n1. Select a point in text\n2. Move the cursor down using editor.action.insertCursorBelow\n3. Hold shift and move the selection to the right (but not off the line)\n\n**Expected**\nThe highlight color should be uniform\n\n**Actual**\nThe first line is \n\n![double-selection](https://cloud.githubusercontent.com/assets/2193314/11350345/ee43df8a-91e5-11e5-8724-dbe2557935a4.png)\n'}, {'title': "Cannot read property '0' of undefined", 'body': 'Started appearing after I upgraded to beta 0.10 (Version 0.10.1 (0.10.1), build df352367df2efcfa9d602d471e4e2f42140a0f05)\n\n![screen shot 2015-11-24 at 9 40 03 am](https://cloud.githubusercontent.com/assets/596749/11352247/5e3c3c34-928f-11e5-83ad-765a29b1cf34.png)\n'}, {'title': 'Support JSDoc type information', 'body': 'Below a JSDOC comment which does not show properly in document type javascript.\n\n```\n// Interface new functions\n/**\n * @param  {Object} to\n * @param  {Object} from\n * @param  {Boolean|String} override=false\n */\nfunction Interface(to,from,override) {\n       // some code\n    }\n```\n\nIt always shows **"to:any, from:any, override:any"**\nwhy not **"to:any, from:any, override:Boolean=false|String"** or something simular\n'}, {'title': 'Crash when samba connection drops', 'body': 'On a Mac (running OSX 10.11.1), if the network connection to a connected Samba share with open files interrupts, VSCode crashes with the error that says it needs to restart.\n'}, {'title': '[Help] Multiple TextEdits[] not working', 'body': 'If method `provideDocumentFormattingEdits` actually returns multiple TextEdits silently nothing happens. Is it a bug? Or I doing something wrong? Is there a documentation about how changes of TextEdits applied to document?\n'}, {'title': 'Allow to change the font size and font of the workbench', 'body': 'At the moment, we can only change the font size / font of the editor. If we want to change the font size, we need to use a roundabout method of "zooming in / out". It would be nice if this could be adjusted through the preferences. \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxBJrQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Editor) move file explorer to the right of the screen, not left', 'body': 'At the moment, the file explorer (along with the other options) are fixed to the left. It would be much more convenient if they could be moved to the right if wanted. \n'}, {'title': 'Replace may lead a crash', 'body': 'When use the replace function in a large file(more than 20MB), the vs code will crash.\n'}, {'title': 'Easier method to customise colours', 'body': "It's currently very difficult for a newcomer to visual studio code to customise the colours of the editor (and explorer, etc.) It would be nice if Code could have a way manually helping users select their colours for various parts of the editor. \n\nFor example, I'd like my explorer white, whereas my editor dark - this is very difficult to simply get. \n"}, {'title': '[json] schema specified in workspace settings not triggering Intellisense', 'body': 'My .vscode/settings.json has this section:\n\n``` json\n    // ...\n    "json.schemas": [\n        {\n            "fileMatch": [\n                "/tslint.json"\n            ],\n            "url": "http://json.schemastore.org/tslint"\n        }\n    ]\n```\n\nWhen I make a tslint.json file in the root of my project, Intellisense does not activate to suggest properties, as I expect it to. The developer console does not show any errors.\n\nReferencing that schema by putting a `"$schema": "http://json.schemastore.org/tslint",` property directly into tslint.json doesn\'t do the trick either.\n\nI am running VS Code version 0.10.1 on OSX. My internet connection is working fine.\n\nAm I doing something incorrectly?\n\n(Side-question: Will specifying a single element in that "json.schemas" array within my project-local settings then clobber all the other elements of that array in the general settings (such as package.json)? Or does it just merge into the previously specified schemas?)\n'}, {'title': 'bitwise operations in if structure', 'body': 'if(window.innerWidth < 1600 <b>&</b> window.innerWidth > 1200){\n....\n}\n\nthe "<b>&</b>" It allowed in javascript. It is a bitwise operation\n![Uploading bitwise.png…]()\n\nhttp://diyo.netai.net/bitwise.png\n'}, {'title': 'Support ctrl+up/ctrl+down to scroll without moving the caret', 'body': 'Like other editors, VS Code should support Control + Up / Down arrows to scroll the current viewport without moving the caret\n'}, {'title': 'Add terminal window(terminal service) in workbench', 'body': 'The workbench on visual studio online on Azure has a nice power-shell terminal to let user work with their workplace in cloud. Other mature IDE products also have term window in their workbench. That way, user can interactively exec some command without switch between desktop and vscode window. \n'}, {'title': 'REPL for fsi', 'body': "Hi guys,\nGreat job, `vscode` looks promising! The only thing that I can't leave without is REPL for F#. Is there an extension that I need to install for it?\n"}, {'title': 'File/Folder picker', 'body': "In my Yeoman plugin, I run the generator in the current workspace. Off course, if no workspace is opened, it fails (at the moment). That's why it would be nice if we had a file/folder picker that I could use to pick the current working directory (`cwd`).\n\nMore information at https://github.com/SamVerschueren/vscode-yo/issues/21#issuecomment-159148393\n\n// @bpasero \n"}, {'title': "[sass] Hover Feature not work correctly in SCSS Rule with Parent Selectors '&'", 'body': '![sass-bug](https://cloud.githubusercontent.com/assets/344283/11360340/8c5b84b0-92be-11e5-922c-d5c0567a2733.png)\n\nRemind the cursor pointer in the screenshot above, it should be `<element class="meizu-header-logo-img" ...` which displays  `<undefined-logo-img ...` now.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxDswA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[php] backtick commands not colorized correctly', 'body': 'Hello.\nIt is not comment, it is selection all files from the directory\n![screenshot from 2015-11-24 10 53 08](https://cloud.githubusercontent.com/assets/10979831/11360893/a9cc9f9a-9299-11e5-8b4d-6040c1b7b4a6.png)\n'}, {'title': 'How to setting php.validate.executablePath?', 'body': 'How to setting php.validate.executablePath?\n'}, {'title': 'Allow user-level installations', 'body': 'When i installed Visual Studio Code as an Administrator and log in with another account afterwards, the "Open with Code" Explorer entries (in the context menu of Files and Folders) are gone.\n\nI searched for it in the Windows Registry and it seems to me, that the Windows Setup only add the entries for the current user. In my example only for the Administrator account of my computer which is another one than that i worked with normally.\n\nIt would be nice when the Visual Studio Code setup add the "Open with Code" capability to any user of the system. \n\nThanks & Greetings,\nAndreas\n'}, {'title': 'plan to support babel-cli debugging?', 'body': "Hello.\nVS Code supports only 'node' type. But it's not enough to test my project. I need to exec command directly such as `babel` and `eslint`. So I'm asking to you where options for aforementioned?\n\nThank you!\n"}, {'title': 'Add "sort lines" option', 'body': 'I think it would be very helpful the option to sort alphabetically (desc / asc) the lines you have selected. For example, a `bower.json` file and its packages.\n'}, {'title': 'Extension is not deactivated during an extension upgrade', 'body': 'We need to support extension deactivation. Primary use cases will be uninstallation and update.\n\nUsers are already hitting issues due to it:\n\n> So I and another user had an issue while trying to update an already-installed extension.  If you go into “Install Extensions” and select the new version of the PowerShell extension, it tries to install but fails halfway through.  If you reopen code, the plugin host starts crashing.   You end up having to delete the extension folder manually before you can install the update.\n> \n> I think this may be due to the fact that I’m running my language server process from inside of the extension folder.  If the process is running, it seems to block the successful reinstall of the extension.  Seems like we may need some way to kill the running extension before attempting to update it.\n\n@daviwil \n'}, {'title': 'The IntelliSense gets triggered even in comments', 'body': 'This is both useful and bad depending on situations. But mostly undesirable. Maybe add a config value to control this as well?\n'}, {'title': 'Changing ExperimentalDecorators requires restart to take effect', 'body': '![image](https://cloud.githubusercontent.com/assets/9221137/11362592/578d84e0-925a-11e5-9a3d-17d8222f3752.png)\n\nEven after setting experimentalDecorators to true in the tsconfig.json, the error message persists. The error message goes away once you restart vs code.\n'}, {'title': 'How to handle focused items in vscode.window.showQuickPick?', 'body': "_From @alefragnani on November 18, 2015 1:38_\n\nI would like to replicate the behavior of **Go to Symbol** command, where I give a list if items and the user can use UP/DOWN keys to navigate between them. Each now focused item, it scrolls the editor to the position where that piece of code is located. My intention is to use the _line number_ to navigate.\n\nI was thinking to use `vscode.window.showQuickPick`, but didn' find how to do this (no event, for instance).\n\nThanks in advance.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#122_\n"}, {'title': 'Add CamelHumps support', 'body': 'Like atom it is a good feature to move cursor around parts of a camel cased word with Alt+Right and Alt+Left\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxFPKg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Add vertical select feature', 'body': 'Vertical select is a must have feature for modern text editors\n'}, {'title': '[html] Please provide a built-in HTML.tmLanguage file', 'body': "Lots of template languages extend html syntax.\n\nSince popular text editors such as sublime text and atom usually have built-in `HTML.tmLanguage` file, most online syntax definition files just simply add an `include: text.html.basic` field in them.\n\nHowever, Visual Studio Code does not have that built-in syntax definition file, thus forcing language extension authors to manually include an `HTML.tmLanguage` file. This feels awkward. I don't want to redefine HTML syntax in every single language extension I wrote.\n\nSo, please provide a built-in HTML syntax definition file for language extension authors!\n"}, {'title': "Cannot find name 'Fluxxor' && 'Import Fluxxor' - multiple conflicting Intellisense detections", 'body': '![screen shot 2015-11-24 at 10 43 58 pm](https://cloud.githubusercontent.com/assets/406975/11367128/6a53fb2e-92fd-11e5-911c-752e64b96a2f.png)\n'}, {'title': 'Aveces el programa no responde', 'body': 'Algunas veces estoy programando normal y el programa deja de responder, no arroja ningún error o mensaje con causa del mismo.\n'}, {'title': '[debug] launch.json validation shows warnings for extension debug adapters', 'body': 'A user reported this on the vscode-powershell repo:\n\nhttps://github.com/PowerShell/vscode-powershell/issues/20\n\nWhen a user opens their launch.json to debug PowerShell scripts using my extension\'s debug adapter, they get a warning stating that the type is not an accepted value:\n\n![image](https://cloud.githubusercontent.com/assets/79405/11368654/dc3a3aac-926f-11e5-8885-a0fb8af3202f.png)\n\nThere\'s also a warning which states that a property named "request" is missing.  These warnings cause the user to think that their launch.json file is configured incorrectly even though the debugger launches successfully.\n\nI suppose the validation just hasn\'t been updated yet to account for non-node debug adapters?\n'}, {'title': 'Allow language extensions to expose a persistent interactive console (REPL)', 'body': 'While it is awesome that we have the Debug Console for an interactive console experience while debugging, it would be ideal if VS Code also supported a persistent REPL (interactive console) which could also be used at any time.  Users of languages such as PowerShell, F#, Python, Ruby, and many others would benefit from this.\n\nAt least in the case of PowerShell, all that would really be needed is an event that can be registered when the user enters a command and then some API for writing the output.  The PowerShell, F#, and Elm extensions already simulate this by allowing the user to select some text, run a command to execute it, and then have the output written to an output channel.  \n\nUsers of the PowerShell extension have requested feature this here: https://github.com/PowerShell/vscode-powershell/issues/10\n\ncc @Krzysztof-Cieslak\n'}, {'title': 'Atom packages compatibility', 'body': 'Hi, I really like the new features of vscode. I think it would be really interesting the IDE to be compatible with Atom packages (apm).\n'}, {'title': 'TextMate-derived themes should be able to affect colors of VS Code UI outside of the editor control', 'body': 'It\'s cool how the in-box themes are able to change the colors of the UI surrounding the editor control.  It would be really nice if there was a way for TextMate themes to affect the colors of this UI also.  \n\nOne way to accomplish this would be to provide some new fields to the "theme" contribution in package.json which maps VS Code UI colors to specific keys in the TextMate definition.  It would be up to the author of the theme package to choose which keys/colors to use for the UI element colors.  This would allow the theme author to be able to write the color codes in the theme file without having to update their package.json.\n'}, {'title': "add perl task didn't output anything", 'body': 'tasks.json\n\n``` json\n{\n    "version": "0.1.0",\n    "command": "perl",\n    "isShellCommand": true,\n    "showOutput": "always",\n    "args": ["${file}"]\n}\n```\n\ntest.pl\n\n``` pl\nuse strict;\nuse warnings;\n\nprint "Hello World.";\n```\n'}, {'title': 'wiki changes: how to fork wiki and submit a PR against it', 'body': "I cannot seem to figure out how you can fork the wiki and submit a PR with my changes. I can clone the wiki and can manually create a remote on GH but I don't see how GH lets me submit a PR against a non-code branch (the wiki).\n\nIdea? Process?\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxLJFw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "macos: can't open dot files", 'body': "_From @jeffallen on November 24, 2015 18:17_\n\nMaybe I just don't know how to use the file chooser in MacOS, but I thought I'd use my nifty new vscode install to edit my .bash_profile and add the code alias proposed in the install docs. But then I couldn't get it to let me open .bash_profile no matter what I tried. Sadly, I went to Emacs and did it there. VSCode fail. :(\n\nI get it. You're doing the right thing by using the Mac file dialog. And Apple is doing the right thing by hiding dotfiles. Except, I'm a programmer, and I know what I'm doing (except when I don't, but then I search stack overflow...)\n\n_Copied from original issue: Microsoft/vscode-go#83_\n"}, {'title': '[razor] inconsistent syntax highlighting ', 'body': '`<h2>@ViewData["Title"]</h2>` causes incorrect tag highlighting. Fixed by any html text string following it such as `<vsfix>&nbsp;</vsfix>` Reproducible in multiple and default themes. \n\n![screen shot 2015-11-24 at 10 47 06 am](https://cloud.githubusercontent.com/assets/175955/11377021/ca6dbf32-9298-11e5-8e4c-ecae784ce201.png)\n![screen shot 2015-11-24 at 10 47 32 am](https://cloud.githubusercontent.com/assets/175955/11377022/ca6f6242-9298-11e5-9811-812311552104.png)\n'}, {'title': "jsconfig {target: ES6} doesn't suppress error on => in .html files", 'body': 'Any use of => in a script inside an HTML file produces an error and says you have to set target:ES6 in jsconfig.json. But doing so does not make the error go away - it only applies to .js files\n'}, {'title': 'Running `code .` in a terminal does not get env vars from the terminal if there is any Code window already open', 'body': "It seems that currently users can't rely on running `code .` from a terminal providing that terminals env vars in the new Code window.  \n\nIf Code was not running before hand, they will see the expected env vars.\n\nBut if Code was running before hand, the new window will see the same env vars as the previous Code windows.\n\nFor the `vscode-go` plugin this causes issues because Go relies heavily on env vars to establish the working environment, and different development sessions in different terminals are likely to use different GOPATH vars even during concurrent development sessions.\n"}, {'title': 'Expose methods to alter cursor appearance via extensions API', 'body': 'I would like to be able to change the cursor appearance via the extensions API.  My particular use-case is to implement vim-like modal text editing, and would like to be able to style a block cursor for normal mode.\n'}, {'title': 'vscode random crush', 'body': 'I\'m working at a .php file and vs code crush at random, freeze is a more accurate description, wen i\'m typing,   open files, all i can say it\'s a behavior witch appeared after the last update. And i\'ve noticed that intellisense remain opened long after i\'ve finished typing the function. Yes i have the warning: "Cannot validate the php file. The php program was not found. Use the \'php.validate.executablePath\' setting to configure the location of \'php\'".  \nDidn\'t try with other type of files to see if this issue appear.\nMy version of SO: Microsoft Windows [Version 10.0.10586]\nVSCode version:\n![vscodever](https://cloud.githubusercontent.com/assets/5724331/11379022/cf16ec3a-92f6-11e5-8c4e-d69cf57b3fc9.png)\n\n![vscodecrush](https://cloud.githubusercontent.com/assets/5724331/11378856/f2b813cc-92f5-11e5-931e-b66a0860692b.png)\n'}, {'title': 'Add progress bar to the statusbar', 'body': '_From @SamVerschueren on November 18, 2015 13:50_\n\nIs it possible to show a progress bar or something to the status bar?\n\nAnd is there any documentation regarding adding a statusbar item?\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#126_\n'}, {'title': 'Support more options for formatting text and inserting links to commands in Output Channel', 'body': '_From @ArtemGovorov on November 18, 2015 5:37_\n\nMore specifically:\n- colors and other text formatting options.\n- inserting links that can execute commands with parameters. I only need to open files, but the existing pattern matching doesn\'t work for me for 2 reasons: \n  - no relative paths support and long paths don\'t look good and waste space.\n  - file links open files in the same pane where I had the Output pane opened. What I\'d like to do is to open files in a text editor (if it\'s currently opened as well), so that the text editor and the Output pane could be used side by side.\n\nSo here is what I have in VS Code currently:\n\n![screen shot 2015-11-18 at 2 59 37 pm](https://cloud.githubusercontent.com/assets/979966/11233066/6fca8066-8e05-11e5-9d44-79b8b22dc2a3.png)\n\nHere is what I\'d like to have:\n\n<img width="423" alt="screen shot 2015-11-18 at 3 03 28 pm" src="https://cloud.githubusercontent.com/assets/979966/11233075/9b670d02-8e05-11e5-9e72-58d8d50e23e9.png">\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#124_\n'}, {'title': 'setDecorations should validate hover message is a string or string array', 'body': '_From @alexandrudima on November 17, 2015 15:48_\n\nExtracted from #115 \n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#120_\n'}, {'title': 'Allow to open non-text files via API', 'body': '_From @ArtemGovorov on November 17, 2015 3:8_\n\nI can open an image (PNG) in the editor manually and there\'s `workspace.openTextDocument`, but, as expected from the function name, I can\'t use it to open the image file: `"cannot open file:///.... Detail: File seems to be binary and cannot be opened as text"`. Perhaps there should be another function, such as `openFile` that could open any supported file type?\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#117_\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxM1Ew==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Extension is not deactivated on closing the editor window', 'body': "_From @ArtemGovorov on November 16, 2015 7:15_\n\nMy extension spins up a few processes that I'd like to kill when it's deactivated.\nThe deactivation callback for `ExtensionContext`\n\n``` JavaScript\ncontext.subscriptions.push({dispose: () => ...});\n```\n\nworks perfectly when I stop debugger for the Extension Development Host. However, if I just close the editor window on OSX, the deactivation callback is not invoked, so I can see all created processes hanging around and not being killed.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#113_\n"}, {'title': 'Extension Gallery styles', 'body': "_From @mikiest on November 13, 2015 9:58_\n\nThe **readme.md** displayed in the Extension Gallery doesn't respect all the styles I think it should.\n\nFor instance:\n- H<1,2..> all have the same font size\n- Multi line code quotes look like plain text\n- Inline code quotes look like plain text\n\nI hope this helps the Extension Gallery look great for the public release :)\nOther than that, it is awesome!\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#108_\n"}, {'title': 'Gallery images are squashed in Edge', 'body': '_From @roblourens on November 13, 2015 18:15_\n\n![image](https://cloud.githubusercontent.com/assets/323878/11153699/79c3dd66-89ef-11e5-84d5-12343938fb5f.png)\n\nLooks fine in Chrome\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#110_\n'}, {'title': 'Unable to spawn Code via child_process.exec', 'body': '_From @alefragnani on November 12, 2015 15:44_\n\nWhen I try to spawn another **Code** instance using `child_process.exec`, nothing happens (neither an error). \n\n```\n    exec(\'start \\"open ui\\" "C:\\\\Program Files\\\\Microsoft VS Code\\\\Code.exe" "C:\\\\Program Files\\\\Winmerge\\\\Files.txt"\').\n```\n\nOriginal from issue #84 \n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#101_\n'}, {'title': 'ANSI colors in OutputChannel', 'body': '_From @SamVerschueren on October 30, 2015 6:9_\n\nI might have seen a post regarding styling of the `OutputChannel`, but not sure though.\n\nI think it would be a nice feature to support ANSI colors. This way libraries like [chalk](https://github.com/chalk) can be used to style the output. Another benefit is that if you develop a plugin like Yeoman, who outputs to the console, the output can be directly passed to the `OutputChannel`.\n\nNot sure if this is possible, but I think it would be a nice feature. No need to implement our own styling stuff in the channel, just use libraries that already exist.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#69_\n'}, {'title': 'Extension Gallery styles', 'body': "_From @mikiest on November 13, 2015 9:58_\n\nThe **readme.md** displayed in the Extension Gallery doesn't respect all the styles I think it should.\n\nFor instance:\n- H<1,2..> all have the same font size\n- Multi line code quotes look like plain text\n- Inline code quotes look like plain text\n\nI hope this helps the Extension Gallery look great for the public release :)\nOther than that, it is awesome!\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#108_\n"}, {'title': 'rewrite completion list ui', 'body': '_From @BleyChen on November 12, 2015 9:56_\n\nAs we know , when you write JavaScript code in VSCode ,it will popup an Completion list UI as following.\n![vscode](https://cloud.githubusercontent.com/assets/15098626/11115402/46d811bc-8966-11e5-919e-5b21bf3fe0e7.png)\nI want to know whether i can overwrite the Completion list UI ,because i want to provide additional information for each JavaScript API, anyone can help me ? \n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#99_\n'}, {'title': 'A parameterized action to open a file or folder', 'body': '_From @alefragnani on November 8, 2015 17:4_\n\nWhere can I find documentation for _core commands_, like `workbench.action.files.openFolder`?\n\nI\'m creating an extension to switch between projects (folders) and was thinking to use this command, indicating the destination folder (`vscode.commands.executeCommand("workbench.action.files.openFolder", "c:\\somefolder\\somesubfolder")`). But instead of switching to that folder, it only shows an _open dialog_. \n\nOf course, I don\'t know if I\'m using the wrong command, or using it wrongly :)\n\nThanks in advance\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#84_\n'}, {'title': 'keybindings should not work in normal mode by default', 'body': "_From @guillermooo on November 8, 2015 13:4_\n\nFor Vim emulation, there needs to be a way to capture key strokes and suppress them before they are inserted in the buffer. That is, normal mode in Vim.\n\nIn other editors, it's a problem that all key bindings work by default in normal mode. Because plugins are loaded alphabetically, there is then a chance that the plugin to load last may override Vim key bindings, even though that plugin isn't interested in normal mode at all and/or doesn't even work when the editor is in normal mode.\n\nWhen VS Code enables a variant of normal mode (when? :-)), I think it'd be best if key bindings had to opt-in explicitly to normal mode.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#83_\n"}, {'title': 'Replacing core commands', 'body': '_From @alefragnani on November 4, 2015 1:12_\n\nIs there a _correct way_ to replace core commands? \n_(of course, if this is something that is available or in the roadmap)_\n\nMy intention is to create an extension to replace _Edit / Copy (`editor.action.clipboardCopyAction`)_ and _Edit / Cut (`editor.action.clipboardCutAction`)_ commands. So, when there is no selection, the _Copy/Cut_ would use the _current word_ instead of the _entire line_.\n\nAbout coding, I can:\n- Determine the word based on the cursor position\n- Select the word\n- Execute `vscode.commands.executeCommand("editor.action.clipboardCopyAction")` \n- Remove the selection, returning the cursor to its initial position.\n\nBut I was wondering if there is something else that I could (or couldn\'t) do, like defining the `keybindings` in `package.json` to `Ctrl + C / Ctrl + X`; or define `vscode.commands.registerCommand` for the core command, with my own code.\n\nThanks in advance\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#79_\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxM28A==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Edit of adjacent ranges does not work.', 'body': '_From @vilic on October 31, 2015 17:29_\n\nFor example:\n\n``` ts\nedit.delete(new Range(1, 1, 1, 2));\nedit.delete(new Range(1, 2, 1, 3));\n```\n\nThis issue applies to other operations like `replace` as well.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#72_\n'}, {'title': 'How to get whole CompletionItems that vscode provided in language service API "registerCompletionItemProvider"?', 'body': '_From @BleyChen on November 10, 2015 6:57_\n\nI want to develop an extension for JavaScript Intellisense in VSCode , And now i meet an problem that when i call the API "registerCompletionItemProvider" in the following code , i can\'t get the whole completionItems that provided by the VSCode itself in method "provideCompletionItems",anyone can help me?\n\n```\n  vscode.languages.registerCompletionItemProvider("javascript",\n{\n    resolveCompletionItem(item:vscode.CompletionItem, token: vscode.CancellationToken): vscode.CompletionItem \n    {\n\n       var completionItem1:vscode.CompletionItem = new vscode.CompletionItem("id");\n       completionItem1.detail = "aaa";\n       completionItem1.filterText = "aa";\n       completionItem1.insertText = "aa";\n       return completionItem1;\n    }\n    ,\n    provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): Promise<vscode.CompletionItem[]> \n    {\n    // I want to get    completionItems that provided by the VSCode itself ,not like following code ,provided by myself. does any variable has stored completionItems.\n\n        return new Promise((resolve, reject) => { \n        var completionItems:vscode.CompletionItem[] = [];\n        var completionItem:vscode.CompletionItem = new vscode.CompletionItem("bb");\n        completionItem.detail = "bde";\n        completionItem.filterText = "bb";\n        completionItem.insertText = "bb";\n        completionItems.push(completionItem);\n        return resolve(completionItems) ;\n                    });\n    }\n})\n```\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#89_\n'}, {'title': 'contributing key bindings by including files', 'body': '_From @guillermooo on November 8, 2015 12:55_\n\nFrom the docs, it seems that extensions need to include the key bindings in the manifest proper. For extensions that will contribute a lot of key bindings, it may be more convenient to include _files_ of key binding definitions.\n\nExample:\n\n``` json\n...\n"contributes": {\n    "keybindings": [{\n        "command": "extension.sayHello",\n        "key": "ctrl+f1",\n        "mac": "cmd+f1",\n        "when": "editorTextFocus"\n    },\n    { "include": "motions.json" },\n    { "include": "actions.json" }\n  ]\n}\n...\n```\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#82_\n'}, {'title': 'Can I get scope / scopeRange at a position?', 'body': '_From @billti on November 1, 2015 6:10_\n\nThe API call `document.getWordRangeAtPosition(position)` appears to use its own definition of a word. For example, my tmLanguage defines `attrib-name` as a token/scope, yet `getWordRangeAtPosition` appears to break this into 2 words on the `-` character.\n\nHow can I get token ranges at a position based on my custom syntax? (And it would be really useful if I could get the scope name that goes along with it too).\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#76_\n'}, {'title': 'Updating user settings', 'body': '_From @alefragnani on November 2, 2015 0:36_\n\nIt should be really useful to be able to _update_ some of the _user settings_ for my packages. I only found `vscode.extensions.getConfigurationMemento` which is _readonly_, and `vscode.extensions.getStateMemento` which is _read/write_, but its content is not stored in `settings.json`. Is there any other way for this?\n\nThe _update_ that I want to do is, in fact, only a shortcut (command) that I gave to the user. So he can use _User settings_ menu to edit the value by himself, but also add/update its content based on commands that I registered.\n\nThanks in advance\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#77_\n'}, {'title': 'New way to define bracket matching for word based brackets?', 'body': "_From @Wosi on November 10, 2015 12:0_\n\nI created a [`languageDef.js` file for ObjectPascal](https://github.com/Wosi/vs.language.objectpascal/blob/master/objectpascalDef.js) that used to work from the first preview version until v0.9.2. \nAs far as I know this format is no longer supported so I moved to the `.plist` definition format. I was able to rewrite the grammar definition in order to let the highlighted source look like 95% the same as before.\n\nBut I have a problem to redefine the bracket matching.\nThis screenshot shows the bracket matching for `begin` and `end` in version 0.9.2:\n![vscodebeginendbracketmatching](https://cloud.githubusercontent.com/assets/3448684/11061783/b52bfb88-87a9-11e5-8b0a-b7d0a417dfae.PNG)\n\nI used this code in 0.9.2 to enable the bracket matching:\n\n```\n    brackets: [            \n        // ...\n        { token: 'keyword.tag-begin', open: 'begin', close: 'end' },\n       // ...     \n    ],\n```\n\nHow do I enable the bracket matching in version 0.10.0 for this kind of brackets?\nI tried to do it in the `languageMain.js` file inside the language configuration sections `brackets`, `__electricCharacterSupport` and `__characterPairSupport`. But none of the works when the brackets contain multiple characters. \nIs this feature completely broken in 0.10.0?\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#90_\n"}, {'title': 'Support autoClosingPairs for strings like `begin` and `end`', 'body': "_From @Wosi on October 27, 2015 20:23_\n\nI'd like to define `autoClosingPairs` for Pascal like `begin <-> end`, `if <-> then` etc.\nDefinitions for closing pairs like these seem to be ignored by VSCode. It looks like auto closing is currently supported for character pairs only. \n\nPlease add support for longer auto closing pairs.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#66_\n"}, {'title': 'Add Quick info panel ', 'body': '_From @Krzysztof-Cieslak on October 11, 2015 18:9_\n\nQuick Info panel is "small margin located at the bottom of the code editor. It automatically shows errors and warnings under the cursor, eliminating the need to use mouses to see tooltips with the same info." \n\nThat\'s how it looks like in Ionide Atom - \n![image](https://cloud.githubusercontent.com/assets/5427083/10418149/4e564d68-7053-11e5-96ce-ef123dfd91da.png) Same feature is also implemented in Visual F# Power Tools - https://fsprojects.github.io/VisualFSharpPowerTools/quickinfopanel.html\n\nIMO, it might be interesting addition to language services API.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#6_\n'}, {'title': 'Provide an API for advanced/semantic source highlighting', 'body': '_From @Wosi on October 13, 2015 14:22_\n\nI\'m looking for a way to implement an advanced source highlighting \nwhere a language service changes the color of words in a file. The result would look similar to the output Visual Studio creates in C# files. \nThe screenshot shows C# code in Visual Studio. The word "Customer" is highlighted differently based on its context:\n![advancedhighlighting](https://cloud.githubusercontent.com/assets/3448684/10456067/6b53769e-71bf-11e5-95b3-f2e95348101b.PNG)\n\nTo implement highlighting like this it\'s necassary to let a language service decide about the color of a word after the grammar based highlighter has done its job.\nI would like to see an API for this in the future.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#14_\n'}, {'title': 'Link to a file position in Output Channel', 'body': "_From @ArtemGovorov on October 19, 2015 2:0_\n\nAs mentioned in [this issue](https://github.com/Microsoft/vscode-extensionbuilders/issues/19#issuecomment-148695187), output channel supports link rendering. I'd like to append a link to a workspace file position (by providing a file name, line and column in some form). If it's already possible, could you please paste an example on how to do it?\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#41_\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxM4xA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Something like an OutputInputChannel?', 'body': "_From @SamVerschueren on October 23, 2015 19:18_\n\nIs it possible to have something like an OutputInputChannel? I am creating a command that requires terminal input from the user.\n\nIf necessary, want to share more on the project I'm working on.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#55_\n"}, {'title': 'Count of currently visible lines in current Editor', 'body': '_From @jsturtevant on October 26, 2015 23:25_\n\nIs there an API or way to detect which lines are visible in the current editor?\n\nIn a large file if i use \n\n``` typescript\nlet count = doc.getLineCount();\n```\n\nI get all the count of all the lines in the document but I my case I need to restrict my search to only the current visible lines.  In the example below I would get a count of 35 lines although the file is 90+.\n\n![image](https://cloud.githubusercontent.com/assets/648372/10745288/bae66598-7c16-11e5-8337-641032000ba7.png)\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#63_\n'}, {'title': 'Support Extensions Providing TypeScript Definition Files', 'body': "_From @thoughtentity on October 27, 2015 4:59_\n\nAs part of the extension I'm developing, I'm developing a TypeScript definition file to light up the editor with intellisense for the JavaScript APIs my users will be using when working with my extension in their project. Currently, to support this I need to explicitly inject the type definition files into a user's project through an init command provided by the extension. I'd be nice if VS Code supported this scenario better by implicitly loading definition files from an extension's typings directory. Users can override the extension provided definitions by providing their own type definition files that redefine the typings the extension provided.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#64_\n"}, {'title': 'Add onDidStopChangingTextDocument', 'body': '_From @Krzysztof-Cieslak on October 26, 2015 15:23_\n\nIdea is to add new event on workspace which will fire whenever user stop editing document for X milliseconds.\n\nThe problem with `onDidChangeTextDocument` is that it fires on every key stroke what is often not necessary (or not possible for more expensive / longer operations).\n\nImplementing it is easy (just a timeout (re)started on every `onDidChangeTextDocument` ) but I think it would be nice to have built-in helper for it in API.\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#61_\n'}, {'title': 'How to read languages/colorizer settings?', 'body': "_From @alefragnani on October 24, 2015 0:31_\n\nHow could I get  some language/colorizer settings?\n\nI'm creating an extension to add personalized comments, and would like to get the _line comment_ language/colorizer setting (`//`, `#`, etc) from the current language.\n\nI did take a look at [vscode-comment](https://github.com/Microsoft/vscode-comment) demo and `export interface ILanguage`, but didn't find how to _read_ the setting.\n\nThanks in advance\n\n_Copied from original issue: Microsoft/vscode-extensionbuilders#57_\n"}, {'title': 'Incorrect green highlighting of variable in separate files', 'body': 'Here is how to reproduce the problem: \n\nI have a folder open in VS Code where I made two files: fileA.js and fileB.js\n\nfileA.js was made first and a variable called "example" was declared and defined with a string. fileB.js was made after and another variable, also called "example" was declared and defined, but this time with an integer. The variable "example" in fileB.js is underlined green with the message "Subsequent variable declarations must have the same type".\n\nIs this behavior correct?\n\nI am using VS Code 0.10.1\n'}, {'title': 'target enum should include es2015', 'body': 'Currently the "target" [enum field](https://github.com/Microsoft/vscode/blob/8883fcd03b7afd2eba21ea845bdd2dfbaf3d4c38/src/vs/languages/json/common/jsonSchemaService.ts#L1536) has\n\n``` js\n [\'ES3\', \'ES5\', \'ES6\', \'es3\', \'es5\', \'es6\']\n```\n\nIt should also have `\'es2015\'` and `\'ES2015\'`.\n'}, {'title': 'default target to ES5.', 'body': 'Since IE8 is falling off on Jan 12, 2016 it would be rad to bump the default target to ES5 instead of ES3.\n'}, {'title': 'Code has stopped responding.', 'body': 'I am going to need help to actually get you useful information to debug this. As it stands my only data is "versions 0.10.0 and up have a bug where it randomly locks up, tells me it locked up, asks if i want to wait, and if i say yes wait, locks so hard windows itself cannot even close it without killing the process"\n\n0.9.0 did not do this.\n\nit will be fine running all weekend alone doing nothing, but then within minutes of actually using it it just gives up. i can constantly cause it by just using it, always happens in mid-stride while typing a string. i\'m working in a php file almost every time it happened. and it happens fairly quickly (in under 10 minutes).\n\nit affects both 0.10.0 and 0.10.1.\n\ni\'m running windows 10 on the fast insider ring, code on the insider ring, um. i got nothing else.\n'}, {'title': 'Running spelled wrong', 'body': 'When a project.json file is open, the Running text in the far lower right corner, next to the smiley face, is spelled incorrectly with 3 n\'s... "Runnning"\n\n:)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxN5Sw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Open New Command Prompt should honor %COMSPEC% environment variable on Windows', 'body': "On Windows, The 'Open New Command Prompt' command should lookup the %comspec% environment variable instead of using hard-coded 'cmd.exe'.\nThis enables alternate interpreters/shells to be started - such as TCCLE.\nThere may be similar things for Linux/OSX.\n\nThanks for this great tool!\n"}, {'title': 'Enable error highlighting syntax toggle on/off', 'body': "There are certain aspects of code that are experimental that the VSCode Editor doesn't recorgnize. It would be useful to easily be able to toggle error highlighting on/off.\n"}, {'title': '[css] Figure out how to keep css.plist in sync with Atom css.cson?', 'body': "While VS Code uses the same css.plist for CSS syntax highlighting as TextMate, Atom has this own forked version that is way more up to date:\nhttps://github.com/atom/language-css/blob/01146c2eac7d47455d5c964dd65eaeb209cfa778/grammars/css.cson\n\nWould be nice to find a way to keep all three in sync.\n\nNot all parts of css.plist are used in VSCode. For example some features such as the Media Query media features are highlighted from css.plist, but CSS properties that are not included in the file such as the flex box properties get highlighted anyway. I’m not 100% sure which ones need to always be up to date, and which ones don't matter for VSCode yet.\n"}, {'title': 'Immediately-invoked function expressions are an error in the linter', 'body': "[In case you don't know what that thing is.](https://en.wikipedia.org/wiki/Immediately-invoked_function_expression)\n\nThis code `(function(){})()` is an error in the linter despite being perfectly valid, it says string literal expected. \n\nI also want to say, the intellisense on the editor is amazing and I can't wait for jsx support :)\n"}, {'title': 'Implementing an alternative jump to file?', 'body': "I'd like to implement an alternative jump to file that uses a [custom matching algorithm](https://github.com/spion/fuzzy-matcher). Is this possible, or is the extension API too limited to do this?\n\nThe closest thing seems to be [the quickpick api](https://code.visualstudio.com/docs/extensionAPI/vscode-api#QuickPickOptions), and it falls short. Perhaps `QuickPickItem` could be allowed to implement a `matches(input:string):boolean` method?\n"}, {'title': 'Feedback popup does not appear when zoomed in too much', 'body': '**Steps to reproduce**\n1. Open VS Code and zoom in as much as possible.\n2. Click feedback button ☺️\n**Expected**\n- Feedback popup appears, and is zoomed in along with everything else.\n- There are scroll bars so you can see the whole popup.\n\n**Actual**\n- Feedback popup is not visible.\n- Can tab into the feedback popup.\n  - After tabbing into it, there are no scrollbars.\n- This happens when the **height** of the popup is greater than that of the main text area (see screenshots).\n\n**Before zoom**\n![before_zoom](https://cloud.githubusercontent.com/assets/1149641/11385769/eddf97c6-9313-11e5-8c13-a818ed2a6ce9.PNG)\n\n**After zoom**\n![after_zoom](https://cloud.githubusercontent.com/assets/1149641/11385773/f9f30fd4-9313-11e5-9eea-bf2954468c87.PNG)\n\n**Version**\nFound in version 0.10.1\n![image](https://cloud.githubusercontent.com/assets/1149641/11386027/c90014ce-9315-11e5-984f-553a0ee5c526.png)\n'}, {'title': 'Add more reusable types for CSS Intellisense ', 'body': "There are a lot of parts of CSS that are reused in multiple properties, that get duplicated in the XML file, leading to code bloat and risk of inconsistencies.\n\nThe most obvious one are the colour keywords which are repeated 42 times in css-scheme.xml alone (and there are a lot of colours!, and they're included in other files on top), but there are others such as border-style values (that are in column-rule, etc.), timing functions (transitions, animations, etc)\n\nSome things already are reused, such as the length units, and hsla,rgba, etc. Would be nice to expand this.\n"}, {'title': '[css] Support auto-complete of gradient function parameters like currently do for rgb/hsl', 'body': 'The colour functions in CSS currently prefill the parameters and allow you to tab through the values. Similarly it would be nice to support that for the 4 gradient functions, especially as the syntax is some times hard to remember (not helped by the fact it has changed so many times). Currently it just supplies empty (). \n\nThe colour functions are set up in languagefacts, while the gradients are just standard property values in the XML file.\n'}, {'title': 'Please add support form Haml/Slim. Most of the new frameworks use these languages instead of html', 'body': 'There are lots of frameworks uses haml/slim as template languages. Haml and Slim save lots of time. So please add support for haml and slim in visual studio code.\n'}, {'title': "Add 'experimentalAsyncFunctions' compiler options to jsconfig.json", 'body': 'Hello.\nMy codes uses `async` / `await` and `target` option is `ES6`.\nVSCode highlights around of `async` / `await` with red underline.\nIs there way solve it?\n\nThank you.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxQKFA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Visual Studio Code keeps Crashing?', 'body': 'Since this most recent update VSCode seems to crash randomly when editing files (particularly PHP files for me). Everything will pause (besides the menus) and just sit there until it asks me to wait or close the program.\n'}, {'title': 'ext install: auto go away while focus out from one window to another', 'body': 'I think Ctrl+Shift+P dialog should persist until unless I select option by hit enter key or click on cross\\* icon or press Esc key to close this dialog. \n\nUnfortunately when my mouse focus out from code window to other or click somewhere else. Package control dialog disappear and then need to start search again!.\n'}, {'title': 'golang: incorrect syntax error for legal code: type Var string', 'body': 'The go code\n\ntype Var string\n\nis legal, but underlined in red with syntax error: unexpected type. Incorrect case insensitive treatment of Var keyword?\n\nVisual Studio Code: Linux\nVersion 0.10.1\nCommit df352367df2efcfa9d602d471e4e2f42140a0f05\nDate 2015-11-17T15:21:23.766Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\n'}, {'title': 'Removing a keyboard shortcut is not feasible when multiple are in place', 'body': 'I want to remove a one keyboard shortcut from a tab key, and not touch the others. Specifically:\n\nOriginal:\n\n```\n{ "key": "tab",                   "command": "editor.emmet.action.expandAbbreviation",\n                                     "when": "editorTextFocus && !editorHasSelection && !editorHasMultipleSelections && !editorTabMovesFocus" }\n```\n\nThere is no way to remove _only_ above tab command. I tried to do it like the FAQ says, and added this:\n\n```\n    // Remove emmet from tab key\n    { "key": "tab",             "when": "editorTextFocus && !editorHasSelection && !editorHasMultipleSelections && !editorTabMovesFocus" },\n\n```\n\nBut it removes _all_ tab commands, including normal tab.\n'}, {'title': 'Variables view in debugger got stale', 'body': "Did the smoke test and debugged through some express code. The variables view in the debugger got stale. Couldn't close/open nodes in the tree. Variables didn't update. \n\nCouldn't reproduce a second time but showed to @weinand \n"}, {'title': 'Unnecessery save changes dialog when deleting a file', 'body': '1. DIsable auto save\n2. modify a file - do not save\n3. delete that file\n4. I first get a dialog if I am sure I want to delete, I say yes, then I get a dialog wheter I want to save changes to my file. \n\nI would not expect the second dialog since I just choose to delete that file\n'}, {'title': 'Executing a built in command does not wait for it to be executed', 'body': 'The use case is to call the `workbench.action.closeAllEditors` function and then assert that the number of visible editors is 0. Currently when doing the check after calling the function, `window.visibleTextEditors` is still 1.\n\nI think this is a timing issue where executing a built in command does not wait for any changes to be propagated to the PH side.\n\nTest case showing the issue (commented out atm): https://github.com/Microsoft/vscode/blob/master/extensions/vscode-api-tests/src/commands.test.ts#L19\n'}, {'title': 'TextDocument needs a dispose() method or leaks otherwise', 'body': 'There currently seems to be no way of explicitly disposing a `TextDocument` instance. Only if you show it inside a `TextEditor` you are able to call a built in command to dispose the document (e.g. by closing the editor if the file is not in working files or by calling Close All Files command).\n\nWithout a dispose() method, the `workspace.textDocuments` array will leak entries.\n'}, {'title': 'Cannot debug extensions if offline', 'body': "If my wifi is offline or my laptop is in flight mode I am unable to launch the VSCode debugger for debugging extensions.\n## Steps to repo\n1. Clone a repository with an extension (or `yo code`)\n2. Restore npm packages\n3. Open extension in VS Code\n4. Press `F5`\n\nWhen doing so the following error is displayed:\n\n![vscode-error](https://cloud.githubusercontent.com/assets/434140/11396522/27d92b88-93c6-11e5-85a1-49f039dac7f6.PNG)\n\nI've reproduced it on my machine while network disconnected and while in flight mode. Once wifi connectivity is reestablished it works just fine, I didn't close/open VS Code in between.\n## System info\n- Windows 10 (latest updates via fast ring)\n- VS Code 0.10.1\n- Node.js 4.0.0\n- npm 3.4.1\n"}, {'title': 'Add command to change case (to lowercase, to uppercase)', 'body': 'Please add support for changing case (at least for ASCII range). It would be nice to have command to capitalize names (eg: SOME_NAME to SomeName).\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxUTbA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Add onDidCreateTextDocument', 'body': "I dont know whether there is a event on workspace which will fire create a new file.\nI think it's better to add new event on workspace which will fire whenever user create a new file.\n"}, {'title': 'When load the folder contains PHP file and edit it, the ediotr often appears unresponsive', 'body': 'The version is the lastest, PHP is 5.5.3。\n'}, {'title': 'Auto-complete of HTML Media Element', 'body': 'Provide "HTML Media Element" intellisense support inside js file.\n\n`<video src=""><\\video>`\n\n`document.querrySelector(\'video\').paused;`\n\n"paused" should be auto-complete in JavaScript and inside `<script><\\script>`\n'}, {'title': 'Color picker', 'body': 'It could be great have a color picker to update color.\nFor example, when you have a CSS file like this : \n\n![capture](https://cloud.githubusercontent.com/assets/6053067/11398092/b4613d90-937e-11e5-8abe-1e44cd142265.PNG)\n\nA color picker could be generated when you click on the colored element.\n'}, {'title': "Can't cancel debug environment picker", 'body': "In a new project, switch to the debug viewlet and click the gear. You'll get the debug environment picker. Pressing `Escape` or clicking outside the quick open widget will not cancel the operation as expected but it will create an almost empty `launch.json` instead.\n"}, {'title': 'Bad margins in debug call stack', 'body': 'The call stack line numbers overlap with the scrollbar. Make sure we get enough right margin/padding in there.\n\n![image](https://cloud.githubusercontent.com/assets/22350/11400299/d2caf858-938c-11e5-837f-5c68364ffc58.png)\n'}, {'title': 'Error list should focus file if already open', 'body': 'When picking an error from the error list that belongs to a file that is already open in an editor, Code should focus that editor and reveal the range instead of always using the currently focused editor and opening the file with the error in it.\n'}, {'title': "ES6 validator doesn't understand static class methods", 'body': 'The following code is valid ES6 code:\n\n``` javascript\n(function ()\n{\n    class C {\n        static Foo()\n        {\n            console.log("Foo");\n        }\n    };\n})();\n```\n\n(jsconfig.json must specify the "ES6" target to understand the class syntax)\n\nVS code underlines "static" in red and says "Modifiers cannot appear here". This is an incorrect error: it is valid ES6 syntax.\n\nNote VS Code does not mark it as an error if the class is not wrapped in an IIFE, but these are typically used for encapsulation.\n'}, {'title': 'Javascript replaced with "(...token: string[]): void', 'body': 'When editing come javascript files, when I add a new property to an object, upon hitting CR/Enter, the line I just typed disappears, and VSCode renders "(...token: string[]): void".  (screenshot attached.).   I cannot type further until hitting the escape key.\n\n![image](https://cloud.githubusercontent.com/assets/9296597/11401959/f02291cc-935a-11e5-96de-adbbcb795e6d.png)\n\nIn some cases, the aforementioned text does not necesarily completely overlay my prior line. \n\n![image](https://cloud.githubusercontent.com/assets/9296597/11402036/72e6b94e-935b-11e5-978a-9d70425a73d2.png)\n'}, {'title': "Event 'file changed' triggered when scss/less files are editing (win7)", 'body': 'To illustrate this issue, I wrote this gulp task that watches for changes on some files with differents extensions :\n\n``` javascript\ngulp.task(\'watch\', function() {\n  var filesToWatch = [\n    \'src/styles/*.scss\',\n    \'src/styles/*.less\',\n    \'src/styles/*.css\'\n  ];\n\n  function doSomething() {\n    console.log("I do something ...");\n  }\n\n  gulp.watch(filesToWatch, doSomething) ;\n});\n```\n\nI run the task and open the folder project with vscode (0.10.1).\n\n```\n#> code .\n#> gulp watch\n```\n\nAs long as I keep a sass file (.scss) opened in the code viewer, the function `doSomething()` is fired without stop (same bevahior when editing less files).\n\nIt\'s quite annoying.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxXbQA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Maintain File Permissions when Copying Directories/Files on Linux and MacOS', 'body': 'When copying a directory or file in the file tree on Linux and MacOS, all of the file permissions in the destination file/directory get reset to 644.\n\nVS Code should maintain file permissions.\n'}, {'title': 'Wrong colors in d.ts after `::`', 'body': "This content doesn't get parsed correctly for coloring:\n\n``` typescript\nexport declare const localhostAliases: {\n    'localhost': boolean;\n    '127.0.0.1': boolean;\n    '::1': boolean;\n};\n```\n\n![screen shot 2015-11-25 at 17 43 39](https://cloud.githubusercontent.com/assets/563469/11403242/1f32ab28-939c-11e5-9a68-09766bafbac6.png)\n"}, {'title': 'Create a pre-commit hook that checks for repo hygiene', 'body': '- [x] Make `gulp hygiene` run only through some files\n- [x] Create a script which runs `git diff --cached --name-only --diff-filter=AMCRTUXB` to get the list of files to check and call `gulp hygiene` on that list\n- [x] Bring in [ghooks](https://www.npmjs.com/package/ghooks) as a dev dependency\n'}, {'title': 'Need better extension management UI', 'body': "The quick open UI isn't working fully well.\n\nWe need to come up with a better UI story that can\n- increase visibility of extensions;\n- fix awkward UI interactions we have today (status bar widget, error output pane, messages, etc);\n- enable us to implement more features in the future (enablement/disablement, statistics, etc).\n"}, {'title': 'Allow to undo/redo edits across multiple files', 'body': "When you do a rename operation that makes edits in multiple files, undo does not correctly undo the edits in files other than the active document.\n\n``` typescript\n// In a.ts\nexport function foo() {}\n\n// In b.ts\nimport { foo }  from './a'\nfoo();\n```\n\nRename from the usage of `foo()` to `foo3`.  Then undo.  The code now reports errors on the import because the definition in `a.ts` is still `foo3`.\n\nI believe this affects any extension which provides a `WorkspaceEdit` crossing multiple files.\n"}, {'title': 'Support Markdown Code Block Language Autocomplete', 'body': 'The markdown editor very nicely supports nested language syntax highlighting which is awesome. One small addition to make things easier is adding a autocomplete list of standard language names used in markdown. Cursor after three ticks ``` would list the languages.\n\nOptionally showing a symbol next to languages with syntax highlighting support would be kind of cool, but not needed.\n\nTo see a list of the languages that could be included:\nhttps://github.com/github/linguist/blob/master/lib/linguist/languages.yml\n'}, {'title': 'Toggle Line Comment on German Keyboard.', 'body': 'Toggle Line Comment does not work on a german Keyboard on OSX  (CMD + /)\n'}, {'title': 'Support command-Y as "redo" on Mac', 'body': 'MS Word, Sublime text, and others all support command-Y as the "redo" command on the Mac.\nPlease support this in VS Code as well.\n'}, {'title': 'Version 0.9 and higher is super slow while opening editor, project or files', 'body': 'After update to 0.9.0 my VSC got super slow while opening editor, projects or files takes 10 or more seconds.\n\nCould be this machine related as i dont have any problems on another one. Tried to open editor after windows startup without any extra programs opened, still slow. Win 10 64bit\n'}, {'title': 'API: No way to find out that an editor has closed', 'body': "For the VS Code API tests I have a clean up function that signals that it is done when all editors are closed. Currently the solution is hacky, it needs to install a setInterval to periodically check on the `vscode.window.visibleTextEditors` property to eventually become 0 (see https://github.com/Microsoft/vscode/blob/master/extensions/vscode-api-tests/src/utils.ts#L52).\n\nThe issue is that the `window.onDidChangeActiveTextEditor` event is not good enough for testing on the visible text editors as shown by the following test:\n\n```\ntest('visibleTextEditors', () => {\n    return workspace.openTextDocument(join(workspace.rootPath, './far.js')).then(doc => {\n        return window.showTextDocument(doc).then((editor) => {\n            return new Promise((c, e) => {\n                const listener = window.onDidChangeActiveTextEditor(d => {\n                    console.log('editor is null?: ' + !d);\n                    if (window.visibleTextEditors.length > 0) {\n                        console.log('visibleTextEditors count is: ' + window.visibleTextEditors.length);\n                        return;\n                    }\n\n                    listener.dispose();\n                    c();\n                });\n\n                commands.executeCommand('workbench.action.closeAllEditors').then(null, e);\n            });\n        });\n    });\n});\n```\n\nThe value passed in from the event is null as expected because I am running the close all editors action. However, `window.visibleTextEditors.length` is still 1 at that point.\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxY9ZQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Column position not updated after pressing the tab-key', 'body': 'The column position in the statusbar is not updated after pressing the tab-key.\n\nVersion: 0.10.2\n'}, {'title': " Cannot read property 'toString' of undefined", 'body': 'Issue Id: <b>67160aeb-b96f-e291-6bc8-324197f4dcf6</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L31:37 (hashParameterHints)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L31:37 %28hashParameterHints%29)<br />[/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L28:15 (hashParameterHints)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L28:15 %28hashParameterHints%29)<br />[/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L24:18 (hashParameterHints)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L24:18 %28hashParameterHints%29)<br />[/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L106:14 (ParameterHintsModel.doTrigger)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/parameterHints/browser/parameterHintsModel.ts#L106:14 %28ParameterHintsModel.doTrigger%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1311:0 (_run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1311:0 %28_run%29)<br />    at Object.__dirname.undefined.P.enter (out/vs/workbench/workbench.main.js:1544:5535)<br />    at __dirname.undefined.t.Class.define._run (out/vs/workbench/workbench.main.js:1544:7361)<br />    at __dirname.undefined.t.Class.define._completed (out/vs/workbench/workbench.main.js:1544:6802)<br />\n'}, {'title': 'Cannot delete .asar file while VS Code is open', 'body': "Hi!\n\nIt looks like VS Code opens `.asar` files to make them browsable in the workspace tree view. That sounds helpful, except it seems like a file handle is kept open at all times, preventing some packaging script of mine from deleting `.asar` files if I keep VS Code open when running it.\n\nWould it be possible to ensure `.asar` files are only opened by VS Code if they are being browsed explicitely in the tree view? or maybe avoid keeping the file handle open on them while idling?\n\nI'm running VS Code 0.10.2 on Windows 7 64-bit.\nThanks for a great editor! ♥\n"}, {'title': "Rejecting the promise returned from provideReferences doesn't display an error to the user", 'body': 'If I return a rejected promise from `provideReferences`, no error is displayed to the user and an empty "No results" window is shown.\n\nIs this intentional?  \n\nThere seems to be different behaviour of rejected promises across the various providers.  Perhaps the docs could indicate what resolved and rejected promises are expected to mean?\n'}, {'title': " Cannot read property 'word' of null", 'body': 'Issue Id: <b>23348893-8387-5633-a41d-b4d4d77169c9</b> <br /><br />_Versions_ <br />\\- 0.10.1-release<br />\\-  a4bfcb890dc97f3e0801d8d824d0653e31ab3d44<br />\\-  663967cab998be7893985b3ab0a8823c368c584e<br />_Stack_ <br />[/vs/editor/contrib/goToDeclaration/browser/goToDeclaration.ts#L314:130 (GotoDefinitionWithMouseEditorContribution.startFindDefinition)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/goToDeclaration/browser/goToDeclaration.ts#L314:130 %28GotoDefinitionWithMouseEditorContribution.startFindDefinition%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1311:0 (_run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1311:0 %28_run%29)<br />[/vs/base/common/async.ts#L121:4 (Throttler.queue)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/async.ts#L121:4 %28Throttler.queue%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1782:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1782:0 %28onComplete%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1448:0 (call)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1448:0 %28call%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />    at __dirname.undefined.t.Class.define._run (out/vs/workbench/workbench.main.js:1544:7361)<br />\n'}, {'title': " TypeError: Cannot read property 'replace' of null", 'body': 'Issue Id: <b>e2f57c64-fe76-0e60-93ff-11fb814e751f</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/base/common/uri.ts#L167:14 (URI.file)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/uri.ts#L167:14 %28URI.file%29)<br />    at /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/csharp-o/out/launchTargetFinder.js:10:47 <no sourcemaps><br />[vs/workbench/node/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/node/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)<br />[vs/workbench/node/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/node/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)<br />[vs/workbench/node/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/node/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />[vs/workbench/node/vs/base/common/winjs.base.raw.js#L1311:0 (_run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/node/vs/base/common/winjs.base.raw.js#L1311:0 %28_run%29)<br />    at __dirname.undefined.t.Class.define._completed (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:5:8092)<br />    at Object.p.handle (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbenc<br />\n'}, {'title': ' TypeError: Converting circular structure to JSON', 'body': 'Issue Id: <b>b2f72267-f7dd-d57b-dc9d-2cb86f4115e2</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />\nTypeError: Converting circular structure to JSON \nat Object.stringify (native) \n[/vs/base/common/marshalling.ts#L119:14 (marshallObject)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/marshalling.ts#L119:14 %28marshallObject%29)<br />[/vs/platform/plugins/common/ipcRemoteCom.ts#L131:19 (create.serializeAndSend)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/plugins/common/ipcRemoteCom.ts#L131:19 %28create.serializeAndSend%29)<br />[/vs/platform/plugins/common/ipcRemoteCom.ts#L114:4 (create)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/plugins/common/ipcRemoteCom.ts#L114:4 %28create%29)\n'}, {'title': " TypeError: Cannot read property 'host' of undefined", 'body': 'Issue Id: <b>9c0a1fe6-f1ae-7809-8442-04fc1c290480</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/languages/typescript/common/project/projectService.ts#L378:38 (ProjectService._syncProject)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/project/projectService.ts#L378:38 %28ProjectService._syncProject%29)<br />[/vs/languages/typescript/common/typescriptWorker2.ts#L124:24 (TypeScriptWorker2.acceptProjectChanges)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/typescriptWorker2.ts#L124:24 %28TypeScriptWorker2.acceptProjectChanges%29)<br />[/vs/languages/typescript/common/typescriptMode.ts#L291:39 (TypeScriptMode._doAcceptProjectChanges)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/typescriptMode.ts#L291:39 %28TypeScriptMode._doAcceptProjectChanges%29)<br />[vs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 %28onComplete%29)<br />[/vs/editor/common/modes/abstractMode.ts#L122:35 (AbstractMode._worker)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/modes/abstractMode.ts#L122:35 %28AbstractMode._worker%29)<br />[/vs/languages/typescript/common/typescriptMode.ts#L291:14 (TypeScriptMode._doAcceptProjectChanges)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/typescriptMode.ts#L291:14 %28TypeScriptMode._doAcceptProjectChanges%29)<br />[/vs/platform/thread/common/workerThreadService.ts#L93:16 (WorkerThreadService.AllWorkers)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/thread/common/workerThreadService.ts#L93:16 %28WorkerThreadService.AllWorkers%29)<br />[/vs/platform/thread/common/threadService.ts#L81:33 (AllWorkers)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/thread/common/threadService.ts#L81:33 %28AllWorkers%29)<br />[/vs/platform/thread/common/workerThreadService.ts#L51:42 (WorkerThreadService._handleRequest)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/thread/common/workerThreadService.ts#L51:42 %28WorkerThreadService._handleRequest%29)<br />[/vs/platform/thread/common/workerThreadService.ts#L57:21 (WorkerThreadService.dispatch)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/thread/common/workerThreadService.ts#L57:21 %28WorkerThreadService.dispatch%29)<br />    at t.dispatch (out/vs/editor/common/worker/editorWorkerServer.js:14:25163)<br />\n'}, {'title': " SplitLinesCollection: attempt to access a 'newer' model", 'body': 'Issue Id: <b>22661fef-40e1-4a32-cd16-b2121b1ebb19</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/editor/common/viewModel/splitLinesCollection.ts#L221:9 (SplitLinesCollection._ensureValidState)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/viewModel/splitLinesCollection.ts#L221:9 %28SplitLinesCollection._ensureValidState%29)<br />[/vs/editor/common/viewModel/splitLinesCollection.ts#L430:7 (SplitLinesCollection.getOutputLineMaxColumn)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/viewModel/splitLinesCollection.ts#L430:7 %28SplitLinesCollection.getOutputLineMaxColumn%29)<br />[/vs/editor/common/viewModel/viewModel.ts#L357:20 (ViewModel.getLineMaxColumn)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/viewModel/viewModel.ts#L357:20 %28ViewModel.getLineMaxColumn%29)<br />[/vs/editor/browser/view/viewImpl.ts#L592:88 (View.getCenteredRangeInViewport)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/browser/view/viewImpl.ts#L592:88 %28View.getCenteredRangeInViewport%29)<br />[/vs/editor/browser/widget/codeEditorWidget.ts#L989:24 (CodeEditorWidget._attachModel)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/browser/widget/codeEditorWidget.ts#L989:24 %28CodeEditorWidget._attachModel%29)<br />[/vs/editor/common/viewModel/viewModel.ts#L149:38 (ViewModel.onEvents)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/viewModel/viewModel.ts#L149:38 %28ViewModel.onEvents%29)<br />[/vs/base/common/eventEmitter.ts#L296:12 (EventEmitter.deferredEmit)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L296:12 %28EventEmitter.deferredEmit%29)<br />[/vs/editor/common/viewModel/viewModel.ts#L143:7 (ViewModel.onEvents)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/viewModel/viewModel.ts#L143:7 %28ViewModel.onEvents%29)<br />[/vs/editor/common/viewModel/viewModel.ts#L72:90 (ViewModel.constructor)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/viewModel/viewModel.ts#L72:90 %28ViewModel.constructor%29)<br />[/vs/base/common/eventEmitter.ts#L363:17 (OrderGuaranteeEventEmitter._emitEvents)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L363:17 %28OrderGuaranteeEventEmitter._emitEvents%29)<br />    at t._emitEvents (out/vs/workbench/workbench.main.js:1548:11113)<br />\n'}, {'title': " request 'listbreakpoints' was cancelled because node is unresponsive", 'body': 'Id: <b>4f3e6055-db00-b505-57ef-2fbd3cb89778</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/workbench/parts/debug/node/rawDebugSession.ts#L68:28 (RawDebugSession.send)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/rawDebugSession.ts#L68:28 %28RawDebugSession.send%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1470:0 (onError)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1470:0 %28onError%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1176:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1176:0 %28_notify%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1316:0 (_run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1316:0 %28_run%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L61:5 (V8Protocol.send)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L61:5 %28V8Protocol.send%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L127:4 (V8Protocol.dispatch)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L127:4 %28V8Protocol.dispatch%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L96:11 (V8Protocol.handleData)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L96:11 %28V8Protocol.handleData%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L51:8 (V8Protocol.connect)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L51:8 %28V8Protocol.connect%29)<br />    at Socket.<anonymous> (out/vs/workbench/workbench.main.js:1593:24200)<br />    at emitOne (events.js:77:13)<br />\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxZVPw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Editor on Mac OS X should support System Find/Replace keyboard commands', 'body': 'As a Mac developer, I expect my editor to support system-wide find/replace commands. I often work from a terminal, select some text, ⌘-E to use for Find, then switch to en editor and ⌘-G to Find Next. This is broken (unimplemented but _feels_ broken) in Code.\n\n![screen shot 2015-11-25 at 12 11 16 pm](https://cloud.githubusercontent.com/assets/70188/11407075/c187f7c2-936d-11e5-9e65-01d92fb3c364.png)\n\nAt a minimum I would expect to see \n- Find...\n- Find Next\n- Find Previous\n- Replace\n- Replace Next\n- Use Selection For Find\n- Use Selection For Replace\n'}, {'title': " exception while processing request (exception: Cannot read property 'index' of undefined)", 'body': 'Issue: <b>81559c42-419d-739b-a6b7-43927bc5d585<b/><br /><br />_Versions_ <br />\\- 0.10.1-release<br />\\-  94cba4eb314f52fd18b47b72459954fda65302d0<br />\\-  a4bfcb890dc97f3e0801d8d824d0653e31ab3d44<br />_Stack_ <br />[/vs/workbench/parts/debug/node/rawDebugSession.ts#L68:28 (RawDebugSession.send)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/rawDebugSession.ts#L68:28 %28RawDebugSession.send%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1470:0 (onError)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1470:0 %28onError%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1176:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1176:0 %28_notify%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1316:0 (_run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1316:0 %28_run%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L61:5 (V8Protocol.send)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L61:5 %28V8Protocol.send%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L127:4 (V8Protocol.dispatch)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L127:4 %28V8Protocol.dispatch%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L96:11 (V8Protocol.handleData)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L96:11 %28V8Protocol.handleData%29)<br />[/vs/workbench/parts/debug/node/v8Protocol.ts#L51:8 (V8Protocol.connect)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/v8Protocol.ts#L51:8 %28V8Protocol.connect%29)<br />    at Socket.<anonymous> (out/vs/workbench/workbench.main.js:1593:24200)<br />    at emitOne (events.js:77:13)<br />\n'}, {'title': " Uncaught TypeError: Cannot read property 'value' of null", 'body': 'Issue Id: <b> 883f8e6a-e020-decc-bb72-9684467a577d<br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/base/browser/ui/inputbox/inputBox.ts#L166:20 (InputBox.value)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/browser/ui/inputbox/inputBox.ts#L166:20 %28InputBox.value%29)<br />[/vs/base/browser/ui/inputbox/inputBox.ts#L319:27 (InputBox.onValueChange)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/browser/ui/inputbox/inputBox.ts#L319:27 %28InputBox.onValueChange%29)<br />[/vs/base/browser/ui/inputbox/inputBox.ts#L116:73 (InputBox.constructor)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/browser/ui/inputbox/inputBox.ts#L116:73 %28InputBox.constructor%29)<br />[/vs/base/browser/dom.ts#L277:2 (handler)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/browser/dom.ts#L277:2 %28handler%29)<br />    at HTMLInputElement.o (out/vs/workbench/workbench.main.js:1548:12811)<br />\n'}, {'title': " Cannot read property 'getLineCount' of null", 'body': 'Issue Id: <b> d6581fdb-bcec-43aa-f607-62b83e6d86fa</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/editor/contrib/codelens/browser/codelens.ts#L536:46 (CodeLensContribution.renderCodeLensSymbols)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/codelens/browser/codelens.ts#L536:46 %28CodeLensContribution.renderCodeLensSymbols%29)<br />[/vs/editor/contrib/codelens/browser/codelens.ts#L451:10 (CodeLensContribution.onModelChange)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/codelens/browser/codelens.ts#L451:10 %28CodeLensContribution.onModelChange%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1311:0 (_run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1311:0 %28_run%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L2072:0 (complete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L2072:0 %28complete%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L2097:0 (argDone)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L2097:0 %28argDone%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1176:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1176:0 %28_notify%29)<br />    at Object.__dirname.undefined.F.enter (out/vs/workbench/workbench.main.js:1544:6040)<br />\n'}, {'title': 'Native node modules from extensions', 'body': 'I’m looking to build an extension but one of the packages I need to depend on is a native module. When I do an `npm install` it installs the package just fine, I can launch a node shell and interact with it, etc. But when I go to use the package from within my plugin I get an error as it’s trying to load the ia32 build of the native module not the x64 which was compiled by node-gyp.\n\nA quick bit of debugging indicates that the problem stems by `process.arch` returning `ia32` when running in VS Code when my machine is a x64 machine (Win10 x64).\n\nSo is there some way to either:\n- Have VS Code run an x64 process\n- Have VS Code’s ia32 process do my npm restore (and subsequent compile with node-gyp)\n\nOtherwise I fear that my extension might be dead in the water :frowning: \n'}, {'title': 'Wrong auto-complete for $this', 'body': 'When I typed $this in PHP files, I selected auto-complete $this, then it becomed $$this actually.\n'}, {'title': 'No auto-complete for single quote', 'body': 'In PHP files single quote has no auto-complete.\n'}, {'title': " Cannot read property 'editOperations' of null", 'body': 'Issue Id: <b>5a695e30-92c3-4068-f55a-e693c4cc9970</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/editor/common/model/editStack.ts#L75:31 (EditStack.pushEditOperation)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/model/editStack.ts#L75:31 %28EditStack.pushEditOperation%29)<br />[/vs/editor/common/model/editableTextModel.ts#L92:30 (EditableTextModel.pushEditOperations)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/model/editableTextModel.ts#L92:30 %28EditableTextModel.pushEditOperations%29)<br />[/vs/editor/common/controller/cursor.ts#L744:35 (Cursor._innerExecuteCommands)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/controller/cursor.ts#L744:35 %28Cursor._innerExecuteCommands%29)<br />[/vs/editor/common/controller/cursor.ts#L678:15 (Cursor._internalExecuteCommands)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/controller/cursor.ts#L678:15 %28Cursor._internalExecuteCommands%29)<br />[/vs/editor/common/controller/cursor.ts#L420:33 (Cursor._interpretHandlerContext)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/controller/cursor.ts#L420:33 %28Cursor._interpretHandlerContext%29)<br />[/vs/editor/common/controller/cursor.ts#L314:7 (Cursor._createAndInterpretHandlerCtx)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/controller/cursor.ts#L314:7 %28Cursor._createAndInterpretHandlerCtx%29)<br />[/vs/editor/common/controller/cursor.ts#L340:34 (Cursor._onHandler)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/controller/cursor.ts#L340:34 %28Cursor._onHandler%29)<br />[/vs/editor/common/controller/cursor.ts#L977:52 (Cursor._registerHandlers)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/controller/cursor.ts#L977:52 %28Cursor._registerHandlers%29)<br />[/vs/editor/common/controller/handlerDispatcher.ts#L56:13 (HandlerDispatcher.trigger)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/controller/handlerDispatcher.ts#L56:13 %28HandlerDispatcher.trigger%29)<br />[/vs/editor/browser/widget/codeEditorWidget.ts#L721:47 (CodeEditorWidget.executeCommand)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/browser/widget/codeEditorWidget.ts#L721:47 %28CodeEditorWidget.executeCommand%29)<br />    at t.executeCommand (out/vs/workbench/workbench.main.js:1583:20373)<br />\n'}, {'title': "[json] Don't propose keys that are already existing", 'body': '# Problem\n\nWhen authoring a JSON file, such as a Microsoft Azure Resource Manager (ARM) JSON Template, the Visual Studio Code editor is showing all of the available properties for an object, instead of only showing the properties that the user has _not yet specified_.\n\n<img width="592" alt="screen shot 2015-11-25 at 2 10 22 pm" src="https://cloud.githubusercontent.com/assets/466713/11409632/7d5a79ec-937e-11e5-93ae-75738d3ec7ee.png">\n# Expected Result\n\nI would naturally expect that the Visual Studio Code Intellisense returns only the JSON properties that the user hasn\'t defined yet. I shouldn\'t be prompted to insert a duplicate key.\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\nhttp://trevorsullivan.net\nhttp://twitter.com/pcgeek86\n'}, {'title': "[php] Suggest '<?php'", 'body': 'When I want to type "<?php", auto completion dosen\'t suggest \'php\', so I had to press Esc key to  keep going.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxaxPw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "[js] Cannot read property 'then' of undefined", 'body': 'Issue Id: <b>6a266d37-8db1-03b7-8dd2-617779dcdcc3</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/languages/typescript/common/typescriptMode.ts#L459:59 (TypeScriptMode.runQuickFixAction)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/typescriptMode.ts#L459:59 %28TypeScriptMode.runQuickFixAction%29)<br />[/vs/editor/contrib/quickFix/browser/quickFix.ts#L35:52 (QuickFixController.getQuickFixController)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/quickFix/browser/quickFix.ts#L35:52 %28QuickFixController.getQuickFixController%29)<br />[/vs/editor/contrib/quickFix/browser/quickFixModel.ts#L344:20 (QuickFixModel.triggerDialog)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/quickFix/browser/quickFixModel.ts#L344:20 %28QuickFixModel.triggerDialog%29)<br />[/vs/editor/contrib/quickFix/browser/quickFixSelectionWidget.ts#L238:3 (QuickFixSelectionWidget.constructor)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/quickFix/browser/quickFixSelectionWidget.ts#L238:3 %28QuickFixSelectionWidget.constructor%29)<br />[/vs/base/common/eventEmitter.ts#L241:18 (EventEmitter._emitToSpecificTypeListeners)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L241:18 %28EventEmitter._emitToSpecificTypeListeners%29)<br />[/vs/base/common/eventEmitter.ts#L267:8 (EventEmitter._emitEvents)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L267:8 %28EventEmitter._emitEvents%29)<br />[/vs/base/common/eventEmitter.ts#L187:9 (EventEmitter.addEmitter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L187:9 %28EventEmitter.addEmitter%29)<br />[/vs/base/common/eventEmitter.ts#L253:21 (EventEmitter._emitToBulkListeners)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L253:21 %28EventEmitter._emitToBulkListeners%29)<br />[/vs/base/common/eventEmitter.ts#L262:8 (EventEmitter._emitEvents)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L262:8 %28EventEmitter._emitEvents%29)<br />[/vs/base/common/eventEmitter.ts#L285:8 (EventEmitter.emit)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L285:8 %28EventEmitter.emit%29)<br />    at t.e.emit (out/vs/workbench/workbench.main.js:1548:10066)<br />\n'}, {'title': "VSC can't handle '<' key in key binding (package.json)", 'body': 'See https://github.com/VSCodeVim/Vim/issues/36 for details.\n\nIs there a way to debug which key events/chars VSC receives from the keyboard?\n'}, {'title': 'Open with Code on drive open as file not folder', 'body': 'Open with Code from windows explorer open drive as file (example open "D:\\" without folder)\n\n![0019](https://cloud.githubusercontent.com/assets/6111610/11410461/24a11456-93fa-11e5-824e-374a31cb2fed.PNG)\n'}, {'title': ' Uncaught Error - uri', 'body': 'Issue Id: <b>dd7f2b59-2ac5-8d7c-8c81-0f61c7bd5b85</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/base/common/uri.ts#L177:9 (URI.file)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/uri.ts#L177:9 %28URI.file%29)<br />[/vs/workbench/parts/debug/common/debug.ts#L102:36 (Source.fromRawSource)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/common/debug.ts#L102:36 %28Source.fromRawSource%29)<br />[/vs/workbench/parts/debug/common/debugModel.ts#L553:76 (Model.rawUpdate)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/common/debugModel.ts#L553:76 %28Model.rawUpdate%29)<br />[/vs/workbench/parts/debug/common/debugModel.ts#L547:58 (Model.rawUpdate)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/common/debugModel.ts#L547:58 %28Model.rawUpdate%29)<br />[/vs/workbench/parts/debug/browser/debugService.ts#L203:16 (DebugService.registerSessionListeners)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/browser/debugService.ts#L203:16 %28DebugService.registerSessionListeners%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1782:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1782:0 %28onComplete%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1448:0 (call)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1448:0 %28call%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />    at Object.__dirname.undefined.P.enter (out/vs/workbench/workbench.main.js:1544:5535)<br />    at __dirname.undefined.t.Class.define._run (out/vs/workbench/workbench.main.js:1544:7361)<br />\n'}, {'title': "[json] Uncaught TypeError: Cannot read property 'getResolvedSchema' of undefined", 'body': 'Issue Id: <b>8ccb8f36-e63f-364e-3780-e296638205ee</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/languages/json/common/jsonSchemaService.ts#L474:41 (JSONSchemaService.getSchemaForResource)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/json/common/jsonSchemaService.ts#L474:41 %28JSONSchemaService.getSchemaForResource%29)<br />[/vs/languages/json/common/jsonWorker.ts#L150:21 (JSONWorker.doValidate)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/json/common/jsonWorker.ts#L150:21 %28JSONWorker.doValidate%29)<br />[/vs/editor/common/modes/abstractModeWorker.ts#L112:9 (AbstractModeWorker.doValidateOnChange)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/modes/abstractModeWorker.ts#L112:9 %28AbstractModeWorker.doValidateOnChange%29)<br />[/vs/editor/common/modes/abstractModeWorker.ts#L92:7 (AbstractModeWorker._newValidate)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/modes/abstractModeWorker.ts#L92:7 %28AbstractModeWorker._newValidate%29)<br />[/vs/editor/common/modes/abstractModeWorker.ts#L56:59 (AbstractModeWorker.constructor)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/modes/abstractModeWorker.ts#L56:59 %28AbstractModeWorker.constructor%29)<br />[/vs/editor/common/worker/validationHelper.ts#L182:7 (ValidationHelper._invokeCallback)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/worker/validationHelper.ts#L182:7 %28ValidationHelper._invokeCallback%29)<br />[/vs/editor/common/worker/validationHelper.ts#L103:51 (ValidationHelper.constructor)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/worker/validationHelper.ts#L103:51 %28ValidationHelper.constructor%29)<br />[/vs/base/common/async.ts#L514:8 (RunOnceScheduler.onTimeout)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/async.ts#L514:8 %28RunOnceScheduler.onTimeout%29)<br />    at e.onTimeout (out/vs/editor/common/worker/editorWorkerServer.js:7:1525)<br />\n'}, {'title': " Cannot read property 'galleryInformation' of undefined", 'body': 'Issue Id: <b>8334f064-5537-5eb2-61f3-3a8996e99dd8</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/workbench/parts/extensions/electron-browser/extensionsQuickOpen.ts#L325:16 (DataSource.getId)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/extensions/electron-browser/extensionsQuickOpen.ts#L325:16 %28DataSource.getId%29)<br />[/vs/base/parts/quickopen/browser/quickOpenViewer.ts#L32:59 (DataSource.getId)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/quickopen/browser/quickOpenViewer.ts#L32:59 %28DataSource.getId%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L1224:56 (TreeModel.getItem)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L1224:56 %28TreeModel.getItem%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L944:19 (TreeModel.reveal)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L944:19 %28TreeModel.reveal%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1826:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1826:0 %28onComplete%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L943:5 (TreeModel.reveal)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L943:5 %28TreeModel.reveal%29)<br />[/vs/base/parts/tree/browser/treeImpl.ts#L157:20 (Tree.reveal)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/browser/treeImpl.ts#L157:20 %28Tree.reveal%29)<br />[/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L542:14 (QuickOpenWidget.autoFocus)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L542:14 %28QuickOpenWidget.autoFocus%29)<br />[/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L500:11 (QuickOpenWidget.setInputAndLayout)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L500:11 %28QuickOpenWidget.setInputAndLayout%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1782:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1782:0 %28onComplete%29)<br />    at __dirname.undefined.t.Class.define.done (out/vs/workbench/workbench.main.js:1544:8710)<br />\n'}, {'title': '[php] Provide html intellisense', 'body': 'In PHP files there is no html tags auto completion, please add.\r\n\r\n-----\r\n\r\n**EDIT 9/13/2018** @egamma: VS Code provides only basic support for PHP, but there are powerful PHP extensions available in the market place:\r\n- [PHP IntelliSense](https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-intellisense) \r\n- [PHP Intelephence](https://marketplace.visualstudio.com/items?itemName=bmewburn.vscode-intelephense-client). \r\n\r\nThis feature should be provided by these extensions (Intelephence actually already does support it). Please give these extensions a try and help to make them better by filing issues and pull requests.\r\n\r\nThis issue has lost focus and turned into a discussion whether VS Code should provide PHP support out of box. However, as with many other language like C#, C++, Go, Python, Rust we do not want to bundle PHP with VS Code but rather rely on our great extension ecosystem. I´m therefore closing this issue.'}, {'title': " Cannot read property 'textEditorModel' of null", 'body': 'Issue Id: <b>ba5449d1-a03b-7595-da67-fbdad0fb8134</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/editor/contrib/referenceSearch/browser/referenceSearchModel.ts#L145:50 (FileReferences.resolve)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/referenceSearch/browser/referenceSearchModel.ts#L145:50 %28FileReferences.resolve%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1826:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1826:0 %28onComplete%29)<br />[/vs/editor/contrib/referenceSearch/browser/referenceSearchModel.ts#L144:78 (FileReferences.resolve)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/referenceSearch/browser/referenceSearchModel.ts#L144:78 %28FileReferences.resolve%29)<br />[/vs/editor/contrib/referenceSearch/browser/referenceSearchWidget.ts#L184:43 (DataSource.getChildren)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/referenceSearch/browser/referenceSearchWidget.ts#L184:43 %28DataSource.getChildren%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L387:46 (Item.refreshChildren)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L387:46 %28Item.refreshChildren%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L102:12 (Lock.run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L102:12 %28Lock.run%29)<br />[vs/workbench/vs/base/common/winjs.base.raw.js#L1901:0 (init)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/vs/base/common/winjs.base.raw.js#L1901:0 %28init%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L94:9 (Lock.run)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L94:9 %28Lock.run%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L432:40 (Item.refreshChildren)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L432:40 %28Item.refreshChildren%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L444:14 (Item.doRefresh)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L444:14 %28Item.doRefresh%29)<br />    at t.doRefresh (out/vs/workbench/workbench.main.js:1555:11411)<br />\n'}, {'title': " TypeError: Cannot read property 'length' of null", 'body': 'Issue Id: <b>e02f2b79-0cbf-1e95-a467-80df823f2897</b><br /><br />_Versions_ <br />\\- 663967cab998be7893985b3ab0a8823c368c584e<br />\\-  df352367df2efcfa9d602d471e4e2f42140a0f05<br />\\-  2c29abc0d6fb2a4202a38824185915d15561ab32<br />_Stack_ <br />    at /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/csharp-o/out/features/omnisharpStatus.js:106:71 <no sourcemaps><br />    at /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/csharp-o/out/features/omnisharpStatus.js:106:71<br />    at process._tickCallback (node.js:368:9)<br />\n'}, {'title': " Cannot set property 'selectedIndex' of null", 'body': 'Issue Id: <b>6af7ca20-c779-2639-367c-1a3ac64248dc</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />\\-  4536038a3a72c694bc793ffeea83b2e54eae6308<br />_Stack_ <br />[/vs/editor/contrib/suggest/browser/suggestWidget.ts#L346:60 (SuggestWidget.constructor)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/suggest/browser/suggestWidget.ts#L346:60 %28SuggestWidget.constructor%29)<br />[/vs/base/common/eventEmitter.ts#L241:18 (EventEmitter._emitToSpecificTypeListeners)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L241:18 %28EventEmitter._emitToSpecificTypeListeners%29)<br />[/vs/base/common/eventEmitter.ts#L267:8 (EventEmitter._emitEvents)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L267:8 %28EventEmitter._emitEvents%29)<br />[/vs/base/common/eventEmitter.ts#L187:9 (EventEmitter.addEmitter)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L187:9 %28EventEmitter.addEmitter%29)<br />[/vs/base/common/eventEmitter.ts#L253:21 (EventEmitter._emitToBulkListeners)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L253:21 %28EventEmitter._emitToBulkListeners%29)<br />[/vs/base/common/eventEmitter.ts#L262:8 (EventEmitter._emitEvents)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L262:8 %28EventEmitter._emitEvents%29)<br />[/vs/base/common/eventEmitter.ts#L285:8 (EventEmitter.emit)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/eventEmitter.ts#L285:8 %28EventEmitter.emit%29)<br />[/vs/base/parts/tree/common/treeModel.ts#L1031:7 (TreeModel.setSelection)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/common/treeModel.ts#L1031:7 %28TreeModel.setSelection%29)<br />[/vs/base/parts/tree/browser/treeImpl.ts#L209:13 (Tree.setSelection)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/parts/tree/browser/treeImpl.ts#L209:13 %28Tree.setSelection%29)<br />[/vs/editor/contrib/suggest/browser/suggestWidget.ts#L607:14 (SuggestWidget.acceptSelectedSuggestion)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/contrib/suggest/browser/suggestWidget.ts#L607:14 %28SuggestWidget.acceptSelectedSuggestion%29)<br />    at e.acceptSelectedSuggestion (out/vs/workbench/workbench.main.js:1587:16304)<br />\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxbDoA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': ' Uncaught TypeError: Cannot set property message of [object Object] which has only a getter', 'body': 'Issue Id: <b>759e0b04-34d9-87b4-f401-64601ff6af36</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />_Stack_ <br />[/vs/platform/telemetry/common/abstractTelemetryService.ts#L89:14 (AbstractTelemetryService.onErrorEvent)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/telemetry/common/abstractTelemetryService.ts#L89:14 %28AbstractTelemetryService.onErrorEvent%29)<br />[/vs/base/common/errors.ts#L55:3 (ErrorHandler.emit)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/errors.ts#L55:3 %28ErrorHandler.emit%29)<br />[/vs/base/common/errors.ts#L54:17 (ErrorHandler.emit)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/errors.ts#L54:17 %28ErrorHandler.emit%29)<br />[/vs/base/common/errors.ts#L73:7 (ErrorHandler.onUnexpectedError)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/errors.ts#L73:7 %28ErrorHandler.onUnexpectedError%29)<br />[/vs/base/common/errors.ts#L87:15 (onUnexpectedError)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/errors.ts#L87:15 %28onUnexpectedError%29)<br />[vs/base/common/worker/vs/base/common/winjs.base.raw.js#L1634:0 (onError)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/base/common/worker/vs/base/common/winjs.base.raw.js#L1634:0 %28onError%29)<br />[/vs/editor/common/services/modeServiceImpl.ts#L418:44 (ModeServiceWorkerHelper.instantiateMode)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/services/modeServiceImpl.ts#L418:44 %28ModeServiceWorkerHelper.instantiateMode%29)<br />[/vs/platform/thread/common/abstractThreadService.ts#L136:23 (AbstractThreadService.handle)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/thread/common/abstractThreadService.ts#L136:23 %28AbstractThreadService.handle%29)<br />[/vs/base/common/worker/workerProtocol.ts#L110:45 (RemoteCom._invokeHandler)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/base/common/worker/workerProtocol.ts#L110:45 %28RemoteCom._invokeHandler%29)<br />    at t.e.handle (out/vs/editor/common/worker/editorWorkerServer.js:14:21613)<br />    at e._invokeHandler (out/vs/base/common/worker/workerServer.js:5:10291)<br />\n'}, {'title': '[C#] colorizer - syntax highlighting error when curly brace in a comment after an assignment', 'body': "With the following code:\n\n``` c#\nvar a = 0; // {\n```\n\nthe `// {` isn't green like the other comments.\n"}, {'title': 'It took about 15-20 seconds to launch code after the updates', 'body': 'Hi,\n\nAfter get the recent updates,  it took about 15-20 seconds to launch code every time which is painful.\n\nMy Os information:\nWindows Server 2012 R2 Datacenter.\n64-bit Operating system, x64-based processor.\n'}, {'title': 'De-indenting multiple lines should remove a consistent number of spaces', 'body': 'Windows 10, VSCode 0.10.0/0.10.2 (`"editor.insertSpaces": true`)\n\nIt seems like vscode is trying to be clever by only de-indenting the comment portion of this block 1 space while de-indenting the rest 2 spaces, but this is not what I expect when using `shift+tab` on multiple lines of code.\n\n![weird-deindent](https://cloud.githubusercontent.com/assets/2193314/11411910/d2c755c4-938a-11e5-9fd2-15957c1aba08.gif)\n\nIt also happens when a leading `/**"` with 2 spaces is included as the first line.\n'}, {'title': "[JavaScript] Incorrect 'new' keyword warning", 'body': "I'm seeing this warning complaining about me calling a non-void function with the `new` keyword, when it actually is a void function.\n\n![void_function](https://cloud.githubusercontent.com/assets/2193314/11412024/49d59198-938c-11e5-8c88-f0b761601310.png)\n\nReproduces with this code:\n\n``` js\nvar BinomialHeap = function (customCompare) {\n  this.head = undefined;\n  this.nodeCount = 0;\n\n  if (customCompare) {\n    this.compare = customCompare;\n  }\n};\n\nfunction removeTreeRoot(heap, root, prev) {\n  // Remove root from the heap\n  if (root === heap.head) {\n    heap.head = root.sibling;\n  } else {\n    prev.sibling = root.sibling;\n  }\n\n  // Reverse the order of root's children and make a new heap\n  var newHead;\n  var child = root.child;\n  while (child) {\n    var next = child.sibling;\n    child.sibling = newHead;\n    child.parent = undefined;\n    newHead = child;\n    child = next;\n  }\n  var newHeap = new BinomialHeap();\n  newHeap.head = newHead;\n\n  heap.union(newHeap);\n}\n```\n\nIt actually goes away when I add `undefined` as an argument but that means the warning is complaining about the wrong thing. Also I don't think it's appropriate for the linter to warn on optional arguments in JavaScript like this by default as that's very strict.\n"}, {'title': 'possible to make all the extension sync with one drive/dropbox/google drive?', 'body': 'want to request a features to sync all the extension into cloud drive, meaning that when changing a new PC or new device, all the extension from the previous PC can be easily get back, no need to be re-install all the extension again.\n'}, {'title': '[Extension API] Make it possible to remove current selections', 'body': "I would like to experiment with an extension that removes a selection (provided there are multiple selections active). I don't think that's possible with the current [api](https://code.visualstudio.com/docs/extensionAPI/vscode-api).\n\nI want to do something like this:\n\n``` js\nvar textEditor = vscode.window.activeTextEditor;\nvar selections = textEditor.selections;\nif (selections.length > 1) {\n  textEditor.removeSelection(selections[selections.length - 1]);\n}\n```\n"}, {'title': 'Go to definition, but how to go back quickly? any short key?', 'body': 'Go to definion, but how to go back quickly? any short key?\nPress F12 or CTRL +click will go to the definition. but we want go back quickly.\nsuch as CTRL+ALT+backspace?\n'}, {'title': 'Support octicon in ThemableDecorationRenderOptions for gutter', 'body': "Today, I can only use images (files) to create decorations, defining `gutterIconPath`. It would be interesting also support **octicons**, maybe the same way that `StatusBarItem` does:\n\n```\n    var myDecorationType = vscode.window.createTextEditorDecorationType({\n        gutterIconPath: '$(icon-name)'\n    });\n```\n"}, {'title': 'cmd+c will jump to definition', 'body': "It's hard to explain but sometimes when selecting part of name of something if selection is under mouse cursor (which means every time I select something with mouse) pressing cmd+c or cmd-x will jump to definition of that.\n[I captured video screen you can watch it here. ](https://youtu.be/sCAQPMAIlcU?t=1m15s)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxdExw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'No response issue when open large compressed js', 'body': ''}, {'title': 'Execute function before save on disk', 'body': "exemple: \n\n``` javascript\nvscode.workspace.onDidSaveTextDocument(updateHeader, this, []);\n```\n\nupdateHeader is call after save but this function update document and set the document on unsaved :/\n\nit's possible to call function before save on disk ?\n"}, {'title': 'tasks for single file', 'body': "I want to make a task to build a single file, like a lua script file. But seems like, the `tasks.json` must under a folder's `.vscode`. \n\nI don't want to open a folder and create many same `tasks.json` each time when I just new a temp single file.\n\nMay `tasks.json` become a extension option like sublime's `build system`?\n"}, {'title': 'Can you let vscode read .vscode/extensions from both global and in project folder?', 'body': "Sometimes we may want to create extension only for project to share with our team and don't need to have them install extension. It should be easy to just send whole project folder contains .vscode/extensions folder to them\n"}, {'title': 'Heating and high fan speeds when debugging node.js apps in Mac', 'body': 'When stepping through code while debugging node application, in addition to unresponsiveness every now and then, my Macbook gets really hot with the CPU fan going supersonic. Seems to occur only when trying to step through the code. Running the program when it is just attached does not seem to have problems.\n'}, {'title': 'Incorrect type warning on object parameters of type { [key: string]: any; }', 'body': 'This issue occurs when coding with a definition file that declares a function which takes a parameter object with properties like:\n\n``` ts\n// in d.ts file:\npropertyName?: { [key: string]: any; };\n```\n\nWhen passing this parameter as a plain object, VScode is happy:\n\n``` js\n// from javascript - no warning\nfunctionCall({\n    propertyName: { foo: "bar" }\n})\n```\n\nBut I get a warning when doing the same thing thusly:\n\n``` js\n// from javascript - VScode shows warning\nvar obj = { foo: "bar" };\nfunctionCall({\n    propertyName: obj\n})\n```\n\nThe warning is: \n\n> Types of property \'propertyName\' are incompatible. Type \'{ foo: string; }\' is not assignable to type \'{ [key: string]: any; }\'.\n\nTo reproduce, try putting [ractive.d.ts](https://github.com/codler/Ractive-TypeScript-Definition/blob/master/RactiveTypeScriptDefinition/ractive.d.ts) into a project, and then enter code like this:\n\n``` js\n// ok:\nvar a = new Ractive({\n    partials: {foo: \'bar\'}\n});\n\n// ng:\nvar obj = {foo: \'bar\'};\nvar b = new Ractive({\n    partials: obj\n});\n```\n'}, {'title': "vscode.workspace.rootPath isn't undefined when no folders are open", 'body': 'When no folder is open, vscode.workspace.rootPath is null as shown in the picture below. However, according to the typings file, it should be undefined.\n\nAlso, another thing to note is that the debugger on hover shows that vscode.workspace.rootPath is undefined. Whereas, both the watch window and debug console show the value is null.\n\n![image](https://cloud.githubusercontent.com/assets/9221137/11417225/bf0d9548-93da-11e5-9cd2-9fe413c28851.png)\n\nHere is the comment for rootPath in the vscode.d.ts file.\n![image](https://cloud.githubusercontent.com/assets/9221137/11417262/288e97d8-93db-11e5-8a14-f856da0977fc.png)\n'}, {'title': 'Support to install and uninstall extensions from cli', 'body': "_From @Tyriar on November 26, 2015 2:1_\n\nSimilar to [`apm`](https://github.com/atom/apm)'s `install` and `uninstall` commands, it would be great to have an official way of installing and uninstalling extensions via the command line in a platform independent way.\n\nThis would enable a nicer way of maintaining a consistent development environment across multiple PCs/platforms without resorting to symlinking the extensions to cloud storage (see https://github.com/Microsoft/vscode/issues/679).\n\n_Copied from original issue: Microsoft/vscode-vsce#48_\n"}, {'title': 'updateChannel reset to stable on restart', 'body': 'I tried to change `updateChannel` in the `storage.json` file from `stable` to `none` as described [here](https://code.visualstudio.com/Docs/supporting/FAQ). As soon as I restart Visual Studio Code the value in the file is changed back to `stable`.\n'}, {'title': 'window.showQuickPick is not closed when promise is rejected', 'body': 'When `showQuickPick` is used with a promise, it shows a nice progress bar which is cool. But when the promise is rejected, it should close the quick pick in my opinion, which is not the case at the moment, the progress bar just keeps spinning.\n\n``` js\nreturn window.showQuickPick(new Promise((resolve, reject) => {\n    setTimeout(() => {\n        reject();\n    }, 2000);\n}));\n```\n\n// @bpasero \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxeqfw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Thenable does not have a catch method', 'body': 'Why?\n\nFor instance, the `showQuickPick` method returns a `Thenable`, right? Why isn\'t it possible to use the normal promise flow? \n\n``` js\nvscode.window.showQuickPick(new Promise((c, e) => {\n    setTimeout(() => {\n        e(new Error("does not work"));\n    }, 2000);\n})).catch(e => {\n    vscode.window.showErrorMessage(e.toString());\n});\n```\n\nWe always have to use the `then` method with 2 arguments which is, if I\'m not mistaken, defined as a promise `anti-pattern`.\n'}, {'title': 'Bad error telemetry stack link', 'body': 'In #669, the 5th link from the top of the call stack is broken.\n'}, {'title': "Quick open widget doesn't acknowledge tree.reveal(...) as a promise", 'body': 'There are many calls to tree.reveal(), which all return promises, that are never `then`-ed:\n- https://github.com/microsoft/vscode/blob/master/src/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L346\n- https://github.com/microsoft/vscode/blob/master/src/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L546\n- https://github.com/microsoft/vscode/blob/master/src/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L555\n- https://github.com/microsoft/vscode/blob/master/src/vs/base/parts/quickopen/browser/quickOpenWidget.ts#L562\n'}, {'title': "Extension API: vscode.workspace.findFiles() doesn't respect the maxResults parameter.", 'body': "I tried using `vscode.workspace.findFiles('**\\*.*', '**\\node_modules\\**', 10)` and i got 100 results. Tried with values 0, 100, 1000, always got 100.\n"}, {'title': 'Error telemetry issues should link back to error telemetry service', 'body': 'I would like to see the hit count over time, basically.\n'}, {'title': 'ES6 template strings issue with comments', 'body': "When using globs in ES6 template strings, VSCode's syntax highlighting thinks there is a unclosed comment. Example: `${settings.tests}**/*.js`\n\n![capture](https://cloud.githubusercontent.com/assets/356204/11419620/f0e23332-9428-11e5-8f69-7c5d1bd67c1d.PNG)\n\nNotice that after the /\\* all coloring is green, until the next start / end of a comment.\n\nIssue found on https://github.com/elgervb/skeletonSPA\ngulpfile.babel.js line 297, task scripts-tests\n"}, {'title': "suggestWidget: change the suggest word's order", 'body': '![suggestWidget.pgn](http://sfault-image.b0.upaiyun.com/376/762/3767627847-5656d325b0391_articlex)\n\nthe snippet item should be placed in front of the language keyword.\n\nwhen pressing the TAB key after typing words `if`, it should insert the code snippet\n'}, {'title': '"ZoomTo" action?', 'body': 'The zooming in/out on the UI works great, but for me the "perfect" zoom level would be somewhere between the 1st and 2nd zoom. I wondered if a `ZoomTo` action (or some other public api) with input parameter could be added, so that extensions such as [vscode-zoom](https://github.com/Microsoft/vscode-zoom) could set a more precise zoom level.\n'}, {'title': '[xml] XML colorizing broken', 'body': '![image](https://cloud.githubusercontent.com/assets/5324719/11420609/7ed0a9ac-942f-11e5-8cff-255704a1138d.png)\n\n(The string is all blue, just the quotes are brown.)\n'}, {'title': 'jsconfig.json sometimes not taken into account', 'body': 'Hi.\n\nThanks for your product, I really enjoy using it. However I have one problem:\nWhen using ES6 features, like the arrow functions, I get the message "This can only be used with ES6. Make sure to have a jsconfig.json-file which sets the target to ES6".\n\nHowever I have a `jsconfig.json`-file in my root (the folder opened in Visual Studio Code), which contains:\n\n``` json\n{\n    "compilerOptions": {\n        "target": "ES6",\n        "module": "commonjs"\n    }\n}\n```\n\nThe weird part is that I get it for some files, and not for others. Even if the files are in the same directory. Right now I have three files in the subdirectory `/app/bpm` names `bpm.js`, `bpmController.js` and `enterClick.js`. All three are written with ES6-functionality, but I only get the warning and red underlined text for `bpm.js`. \n\nUPDATE:\nI just restarted VS Code, and the red underline disappeared from `bpm.js` too. It was a new file I had created after the two others, however the red underline only went away after a restart.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxgKWQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'TypeScript wrong highlighting when using `if` within `for`', 'body': 'TypeScript highlighter interprets `if` calls within a `for` loop as function definitions if the `if` has middle parameter and brackets. The interpretation starts failing in the `for` loop for the last parameter. \n\nNot the consequence of installed extensions.\nHighlighting fails for other color themes as well, not only Monokai. \n\n``` typescript\n// OK\nfor (var i=0;; i++) {\n    if (i===0) {}\n}\n// Partially wrong, see for loop 3rd parameter\nfor (let i=0; i<5; i++)\n    if (i===0) {}\n// Wrong\nfor (var i=0; i<5; i++) {\n    if (i===0) {}\n}\n// Wrong\nfor (let i=0; i<5; i++) {\n    if (i===0) {}\n}\n// Wrong\nfor (; i<5;) {\n    if (i===0) {}\n}\n```\n\n![vs-highlight-error](https://cloud.githubusercontent.com/assets/3373181/11421925/2235eca8-9438-11e5-8231-57733459fb4e.png)\n'}, {'title': 'add merge to local branchs', 'body': 'code is just awesome and simple for "git fresh users" and we just miss the ability to merge our local branch just like github for windows does (but does not work well with non github repos)\n- visually show branchs and can alternate between them without command\n- allow drang a branch on top of other to perform a merge\n'}, {'title': 'Support PHP debug', 'body': ''}, {'title': 'Telemetry: We should log startup times', 'body': 'We had a severe performance regression in startup time (#335). For the future it would be cool to log the startup time via telemetry and then to see trends between versions to see if we are getting slower or better over time.\n\n@SofianHn this would need to be done from the main side I guess because you dont want to log it for each window open. We already have the starting time stored here: https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/electron-main/bootstrap.js#L9\n\n@egamma @alexandrudima fyi we talked about it\n'}, {'title': 'Provide a flag to disable extension loading', 'body': 'It would be useful to have a startup argument that completely disables extension loading.\n'}, {'title': 'intelisense problem', 'body': 'there is no code suggestions for OVERRIDE ... last night it tooks till 6 AM for me to figure out that in DbContext i should  override OnConfiguring with DbContextOptionsBuilder parameter not DbContextOptions ... \n'}, {'title': 'Allow extensions to add additional views', 'body': 'One great feature that could be added to VsCode is the possibility to add more "tabs" in the letf area like the Git and the Debug one. \n\nThis way one developer can add other things like Sql server browser, github issues and more\n![vscode](https://cloud.githubusercontent.com/assets/1300681/11424016/cb99b700-9449-11e5-9997-a2929316e825.PNG)\n\nIf somebody already has an idea to where to add these extension pointe I will be glad to help.\n'}, {'title': 'Error: Path must be a string. Received null', 'body': '_From @Ristaaf on November 20, 2015 13:8_\n\nI get this error every time when opening a comparison of a ts file in the GIT panel of VS Code. Happen in all projects I have tried, including a test one with just one simple ts file.\n\n_Copied from original issue: Microsoft/vscode-tslint#5_\n'}, {'title': 'Provide a way for an extension to open a README file after it gets installed', 'body': 'I\'d like to be able to show the user a README.md file with some helpful documentation when they install the PowerShell extension.  Could we add a field to package.json like "postInstallDocumentation" (or a better name) which will be loaded after the extension is installed and the window is reloaded?  This would be helpful for guiding users to settings they may be interested in or a feature walkthrough to help them get started.\n'}, {'title': 'It is difficult to deal with keybindings when using non-US standard keyboard layout', 'body': "Reference: https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85)\n\nIn the UI and in the `keybindings.json` file, VSCode represents OEM key codes using the US standard keyboard:\n- `VK_OEM_1` (0xBA) as `;`\n- `VK_OEM_PLUS` (0xBB) as `=`\n- `VK_OEM_COMMA` (0xBC) as `,`\n- `VK_OEM_MINUS` (0xBD) as `-`\n- `VK_OEM_PERIOD` (0xBE) as `.`\n- `VK_OEM_2` (0xBF) as `/`\n- `VK_OEM_3` (0xC0) as `\n- `VK_OEM_4` (0xDB) as `[`\n- `VK_OEM_5` (0xDC) as `\\`\n- `VK_OEM_6` (0xDD) as `]`\n- `VK_OEM_7` (0xDE) as `'`\n\n---\n\n**This means when VSCode renders in the UI a keybinding as `Ctrl+/`, it actually means `Ctrl+VK_OEM_2`.** \n- When using a US standard layout, `VK_OEM_2` is physically labeled as `/?` and sits next to the right hand side `Shift`, but \n- when using a Swiss German keyboard layout, for example, `VK_OEM_2` is physically labeled as `§°` and sits next to `1`.\n\n---\n\nThis makes life **quite difficult** for us who use non-US standard keyboard layouts (I'm using a Swiss German keyboard on my laptop).\n\n---\n\nThe only way to make this experience great for non-US standard keyboards is to be able to read the current set keyboard layout from the OS and then:\n- render these OEM key codes in the UI according to the configured keyboard layout.\n- register multiple default keybindings per action and per keyboard layout.\n-  **AFAIK, at this time, this is not possible in electron**.\n\n---\n\nIn the short term, **I would like to ask passionate non US standard keyboard layout developers to create and publish extensions** that overwrite the default VSCode keybindings with keyboard layout optimized variants. Such an extension is super easy to author, it would only consist of a `package.json` that [contributes keybindings](https://code.visualstudio.com/docs/extensionAPI/extension-points#_contributeskeybindings)\n\n---\n\n**Update 30.11.2015**: Electron renders the keybindings correctly in the native menu, now it is a question if it will provide API for the JavaScript side to do so too:\n\nUnder German (Switzerland), `Split Editor` gets correctly rendered in the menu as `Ctrl+ä`:\n![image](https://cloud.githubusercontent.com/assets/5047891/11470752/9ac20014-9760-11e5-9be5-0d55bedf9483.png)\n\nWhile the JS side renders it incorrectly as `Ctrl+\\`:\n\n![image](https://cloud.githubusercontent.com/assets/5047891/11470782/cfba5e92-9760-11e5-9343-6cb02c5f35d3.png)\n\natom/electron#3631 tracks the API request to Electron\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxjxug==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'PowerShell module path missing', 'body': "Hi,\n# Problem\n\nSome PowerShell modules aren't automatically loaded by 'Microsoft.PowerShell.EditorServices.Host.exe'.\nThe following path isn't included : '**C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\**'\nalthough it actually reads the x64 counterpart ('C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\Modules').\n\nThanks !\n"}, {'title': 'Different tsconfig lookup behaviour between tsc and tsserver', 'body': 'Context: you can add all your .d.ts files inside tsconfig.json instead of writing `/// <reference path="my.d.ts" />` in each .ts file (way better).\nIt works fine with `tsc`.\n\nUnfortunately it does not always work with vscode.\n\nExample: https://github.com/tkrotoff/vscode-tsconfig.conf-issue\n[test/tsconfig.json](https://github.com/tkrotoff/vscode-tsconfig.conf-issue/blob/master/test/tsconfig.json) references files outside its directory and vscode fails while `tsc` is fine with it.\n\n![screen shot 2015-11-26 at 19 16 56](https://cloud.githubusercontent.com/assets/643434/11429150/4f3fc188-9474-11e5-81fa-11fe3e735b0b.png)\n'}, {'title': 'Right click on line numbers selectes all line numbers', 'body': '- right click on a line number\n- notice that all line numbers are now selected\n\n![screen shot 2015-11-26 at 19 52 11](https://cloud.githubusercontent.com/assets/1926584/11429371/59cdceda-9477-11e5-9e0c-2a1b01b3d52f.png)\n'}, {'title': 'Possible to suprress completion provider on specific token kinds?', 'body': "I'm trying to fix https://github.com/Microsoft/vscode-go/issues/103, but as far as I can tell this isn't possible currently without tokenizing the whole file again in my extension and manually checking whether I'm in a comment to suprress providing results.\n\nIt would be nice if the `CompletionItemProvider` provided a setting to suppress it's results when in certain tokens/scopes.  \n\nThe implementation of the [TypeScript completion provider](https://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/extensions/typescript/src/features/completionItemProvider.ts#L62) has an `excludeTokens` which seems to play this role but I can't get that to work in my own extension.\n"}, {'title': 'Avoid serializing large environment data over the renderer URL', 'body': 'Should find an alternate solution where the configuration data is stored in a global (possibly with a random number key to be unique for one window and cloned to not suffer from later mutations).\n'}, {'title': "dead keys can't be handled via key bindings", 'body': 'Context: Vim extension for VSC.\n\nWe try to handle all keys via key bindings so that we can process them. It seems that this suppresses dead keys.\n\nFor example, we handle `a` in a key binding. As a consequence, `´a` does not produce `á` as expected, but simply `a`.\n'}, {'title': 'Extract reusable method', 'body': "I was developing an extension and had to replace the text in my editor with text that was changed. For this, I was thinking about a reusable function as you can see here: https://github.com/SamVerschueren/vscode-set-text/blob/master/index.ts\n\nIt works when I test it locally, so that's good. But I am struggling with publishing it to npm.\n\nFirst of all, the type definition is written by hand, is there an easy way to generate it automatically? If I do it with the `--definition` flag, the exported type definition seems incorrect.\n\nSecondly, when installing the module, the type definition shows errors which means I can't import the method correctly with `import setText from 'vscode-set-text'`.\n\nIs there anyone out there that can help me with it or link me to documentation that helps me get this out the door?\n"}, {'title': 'document.isDirty appears to report false for dirty untitled document', 'body': 'Context: Vim extension.\n\n``` typescript\nprivate doQuit(textEditor : vscode.TextEditor) {  \n        if ((textEditor.document.isDirty || textEditor.document.isUntitled)  // if I don\'t check for this, isDirty reports false for untitled document\n            && !this.args.bang) {  \n                throw new Error("unsaved changes");  \n        }  \n...\n}\n```\n'}, {'title': 'Long files crash vscode', 'body': "I have a file that I am writing code to parse. It is ~3.8 million lines long. Most of the times I try to open it, vscode crashes. I don't need vscode to parse it in any way, I just want to open it in code for the line numbers so I can debug my code.\n"}, {'title': "Cosmetic: Backspace doesn't update footer column counter", 'body': "Backspace key doesn't update footer column counter. Indeed cosmetic, but still a bug :)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxlZxA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'ctrl+shift+t hotkey to run tests conflicts with very common open last closed hotkey', 'body': 'Would it be possible to change the default run tests hotkey so that `open last closed` (NYI?) can take its place? This is a commonly used shortcut on text editors (atom+subl) and browsers.\n'}, {'title': 'Please do not auto close the ext install window.', 'body': 'Please do not auto close the ext install window.\nthe first run ext install was very slow. but if miss focus, the window will be closed .\nTerrible experience.\nwould you please do not auto close the window?\n\nYou can provide a close button, let us control when to close the window or not.\nwe want to install the extension.but not want reopen the window again and again\n'}, {'title': 'Add SVG language mode', 'body': ''}, {'title': 'Please add support for Command Prompt/ WIndows powershell ', 'body': 'Visual Studio Code is great tool for developers, it need some more features. If there is command prompt ( like in PHPStorm/WebStorm/RubyMine) it will be very useful. Frontend developers can easily use bower/grunt/gulp/npm to install,run gulp/grunt commands. It will be a very useful feature.\n'}, {'title': '[TypeScript] Add support emmet for typescript react (tsx) files', 'body': 'Please add emmet features for typescript react\n'}, {'title': 'Please to provide  the open preview function to HTML file, just like the ‘.md’ file', 'body': 'Please to provide  the open preview function to HTML file, just like the ‘.md’ file\n'}, {'title': "vscode doesn't show images on markdown previewer over proxy", 'body': '```\n![](http://example.com/image.png\n```\n\nThis always\n\n![](http://go-gyazo.appspot.com/14b35d7b295b1231.png)\n\nMaybe proxy issue.\n'}, {'title': 'disable bracket auto closing in string?', 'body': "Bracket auto closing in string will make string concat in JS difficult.\n\nFor example, `|` is the cursor position:\n\n`'translate'` -> `'translate(|)'` -> `'translate(' + '|')'`\n\nWhat I want is `'traslate(' + ')'`, I have to remove a quote to wrap the last `)` in string.\n"}, {'title': 'Copy VSCode labels to other repositories', 'body': 'This issue helps to copy the labels to other repositories.\nIt has all the labels attached. \nWhen moving an issue then the labels are preserved, so when moving this issue using the https://github-issue-mover.appspot.com/ tool then you can have the labels in your repo.\n\nOnce you moved this issue please move it back :smile: \n'}, {'title': 'contextMenuService.showContextMenu with no actions crashes VSCode', 'body': 'Invoke the context menu with no actions -> VS Code crashes\n\n`this.contextMenuService.showContextMenu(\n{\n    getAnchor: () => anchor,\n    getActions: () => Promise.as([])\n}\n);`\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxoZ9w==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Odd quotes auto-adding when editing in multi-cursor mode', 'body': 'There\'s an odd behavior currently when using multi-cursor support do change `"` to `\'` (for instance).\n\nI basically select the first " and hit `Ctrl+D` to select the next one, then I use `backspace` to delete them and add single quotes `\'` instead.\n\nIn VSCode this results in the following odd behavior:\n![vscode-replace](https://cloud.githubusercontent.com/assets/542458/11437098/1d4daa6a-94eb-11e5-947c-3f105b7da36f.gif)\n\nSublime Text instead seems to handle this:\n![sublime-replace](https://cloud.githubusercontent.com/assets/542458/11437128/64f5da9a-94eb-11e5-865c-4fc20b64e25a.gif)\n'}, {'title': 'Intellisense items lose highlights when focused', 'body': 'What sorcery is this.\n\n![image](https://cloud.githubusercontent.com/assets/22350/11439283/b64aab50-94fa-11e5-9b2d-3a6835a0782d.png)\n'}, {'title': 'Debug console no longer shows Console.log?', 'body': "Sorry if this isn't quite the right place for it, but i just updated vs code and noticed that there is a new debug console window that opens up in code, whereas previously it would open an external command prompt window that displayed everything that was written to Console.log.\n\nNow it just shows the start up path for my Electron application and doesn't show anything else.\n\nIs there a way to enable it with a setting in the launch.json configurations? Or is there something else i need to do.\n\nI mean, its not the end of the world if its no longer there, i just liked it\n\nThanks\n"}, {'title': 'Add -w / --wait Command line argument', 'body': "I wants to use vscode as my git-cli editor. So I need an option that the calling process get stoped until the file I want to edit is closed.\n\nI modified the bin\\code.js in this form:\n\n``` javascript\ndelete process.env['ATOM_SHELL_INTERNAL_RUN_AS_NODE'];\nrequire('child_process')\n    .spawn(require('path').resolve(__dirname, '..', 'Code.exe'), process.argv.slice(2), {\n        detached: true,\n        stdio: 'ignore'\n    })\n    .on('close', process.exit);\nif (process.argv.indexOf('-w')===-1&&process.argv.indexOf('--wait')===-1) {process.exit(0);}\n```\n\nBut it only works if there are no other arguments and vscode is not already open.\n"}, {'title': '"Format Code" missing in new version', 'body': 'I have old versio 0.7.20 and I open XML file\nI can use RMB (Right Mouse button) to "Format Code" for easy reading.\n\nBut after I update to 0.10.2 that is not possible anymore. \n'}, {'title': 'Attach an object to a QuickPickItem', 'body': 'The QuickPick widget is a great extensibility point but I was wondering if there are any plans to allow attaching an arbitrary object to a QuickPickItem which would then be passed along when the item is selected? Thanks!\n'}, {'title': 'wrong typing cursor position', 'body': "![animation](https://cloud.githubusercontent.com/assets/6581089/11443063/8c5c24de-954c-11e5-85af-85ce9837f9af.gif)\n\nWhen typing in Thai language, the cursor position doesn't move as normal. It cannot navigate forward and backward.\n\nI think this bug might also occur in some other languages.\n"}, {'title': 'Deleting a modified file asks if you would like to save the file', 'body': 'To reproduce:\n- open a file\n- make a change\n- delete the file from the \'explore\' panel\n\nThis results in 2 dialog boxes.\n\nFirst I confirm I want to delete it:\n\n<img width="436" alt="screen shot 2015-11-27 at 15 01 39" src="https://cloud.githubusercontent.com/assets/642279/11443788/dd72c16e-9517-11e5-83f5-512c510b0f44.png">\n\nThen I\'m asked if I would like to save my changes to the deleted file\n\n<img width="473" alt="screen shot 2015-11-27 at 15 01 45" src="https://cloud.githubusercontent.com/assets/642279/11443787/dd619146-9517-11e5-81d1-d2ef1bf88efe.png">\n'}, {'title': 'Feature request: command to focus "other" editor', 'body': 'Howdy!\n\nI see workbench actions for focusing left, right, or by a specific index, but not one to just hop to the "other" editor. \nThe behavior I\'m looking for is to hop between any open editors, but not automatically make another (as when I tried to just keep focusing to the right to see if it would just wrap around).\n\nI\'d be willing to work on this myself and generate a PR if someone has a hint on where to start looking into this.\n'}, {'title': "Question: Where in the code is 'Install Extension'?", 'body': "I'm working with implementing functionality around QuickPickItem and would like to add indicators and links in a similar way, readme, download and last updated\n\n![image](https://cloud.githubusercontent.com/assets/67258/11443986/de2746d4-94ef-11e5-9fd0-4eb300222f3d.png)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxsEKQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Allow to save with UTF-8 + BOM encoding', 'body': 'In version 0.10.2 I am having issues with making sure a file is saved with UTF-8 and BOM character encoding.\n\nPlease add such an option.\n'}, {'title': 'expose trigger character to signature help and completion provider', 'body': 'Add a `CompletionContext` and `SignatureHelpContext` which contains the character that has triggered that request: `{ ch: string }`\n'}, {'title': 'Filter errors / warnings for current file only', 'body': 'When I am viewing the _Errors and Warnings_ (`COMMAND + SHIFT + M`), I should be able to filter the list for only the current file that I am viewing. Right now, it is showing the errors for all files in the currently opened folder / workspace.\n\nIn the screenshot below, I am currently viewing a file called `azuredeploy-webapps.json`, but the _Errors and Warnings_ pop-up is showing me warnings for a different file called `azuredeploy.json`.\n\n![screen shot 2015-11-27 at 9 50 44 am](https://cloud.githubusercontent.com/assets/466713/11445783/6e7d8224-94ec-11e5-8b87-887c24f7f520.png)\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\nhttp://trevorsullivan.net\nhttp://twitter.com/pcgeek86\n'}, {'title': 'Dark cursor is hard to see on dark background & text color', 'body': "I'm using Visual Studio Code 0.10.2 on Mac OS X 10.11.1 El Capitan. On my external monitor, the viewing angle sometimes makes it impossible to see the dark cursor on top of the dark Visual Studio Code background color.\n\nCould we figure out some way to make the cursor more visible in VS Code?\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\nhttp://trevorsullivan.net\nhttp://twitter.com/pcgeek86\n"}, {'title': 'Cursor position not maintained after returning TextEdit[] from provideDocumentFormattingEdits', 'body': 'I would have expected the cursor position to be maintained (as best it can in case it falls within a delete range) after applying a set of TextEdits returned by APIs such as `provideDocumentFormattingEdits`.  \n\nInstead, I am seeing the cursor remain at the same absolute offset relative to the beginning of the source in the final result, which results in moving the logical location in source text where the user was editing.\n\nCan Code automatically handle this when it applies `TextEdit[]` objects?  Or should extensions be adding their own logic to try and compensate for this?\n'}, {'title': '[c++] Syntax highlighting gets confusing when defining a reference to an array.', 'body': "If a function's parameter is a reference to an array of constants, the data type will be recognized as a function declaration:\n![1](https://cloud.githubusercontent.com/assets/16049823/11446150/20fcb222-956e-11e5-98ed-31846c9e14ec.png)\n\nIf a reference to an array of constants is defined in a block, the data type will not be highlighted:\n![1](https://cloud.githubusercontent.com/assets/16049823/11449777/e2181876-95bd-11e5-86d2-36e44139cdea.PNG)\n\nIf a reference to an array (not constant) is defined in a block, the data type will be recognized as a function call:\n![1](https://cloud.githubusercontent.com/assets/16049823/11449690/3100d36e-95ba-11e5-8974-11be8480d981.PNG)\n\nVersion of VS Code: 0.10.2\n\nColor theme: Dark(Default color theme)\n"}, {'title': 'do not get intellisense for constructors (or overloads) in referenced dll ', 'body': "using Version 0.10.2 (0.10.2) on mac os x 10.11- I'm using one of the unity3d integration plugins (on the unity side) and getting autocomplete/intellisense, but not on the unity engine .dll or other referenced dlls in my projects, when using constructors. I expect to see parameter info for the constructor.\n\nIf I hold control over the type I get the first overload with no way to switch to others.\n\nif I press control+ space I get autocomplete window but nothing to do with the constructor\n"}, {'title': 'Paramter hints do not reappear on ,', 'body': '- Typescript - invoke a method - paramter hints show up\n- If I trigger inteli-sense to fill in the first argument parameter hints will never show up again\n- I would expect parameter hints to show up again once I do a **,** (comma)\n\nThis behavior makes parameter hints not very usable for me. Before it was behaving better.\n'}, {'title': 'Option to disable current line highlight', 'body': 'Whenever I place my cursor on a new line, VScode puts a border around it. Is there any way to shut the line bordering down?\n'}, {'title': "Touching TextEdit's are not being applied", 'body': 'After moving `vscode-go` from applying full-document-replacement edits to [applying multiple targeted edits for formatting](https://github.com/Microsoft/vscode-go/pull/111), I\'m seeing one odd case.\n\nWhen the formatter asks to replace 4 spaces with a tab, we compute the two edits below:\n\n``` json\n[\n {\n  "_range": {\n   "_start": {\n    "_line": 3,\n    "_character": 0\n   },\n   "_end": {\n    "_line": 3,\n    "_character": 4\n   }\n  },\n  "_newText": ""\n },\n {\n  "_range": {\n   "_start": {\n    "_line": 3,\n    "_character": 4\n   },\n   "_end": {\n    "_line": 3,\n    "_character": 4\n   }\n  },\n  "_newText": "\\t"\n }\n]\n```\n\nBut when we return these edits, they do not get applied.  Worse, if these edits are part of a set of 20 edits, none of the edits get applied.  And worse, we get no error returned to us or reported to the user about these edits being invalid.\n\nIs this an illegal edit, and if so why?\n\nIs it expected that we don\'t get any feedback about the edits being incorrect?\n\n/cc @newhook\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxtb8g==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'The program freezes', 'body': 'The problem that causes the software crash continues even after the last update. But I noticed that after finishing some cases the own code, he comes back to work and I come across some error messages.\n\n"Error from the plugin host: write EPIPE"\n"Plugin host terminated unexpectedly. Please restart VSCode to recover"\n"Error from the plugin host: channel closed"\n\nIf I restart the program VSCode happen again, but if I continue to use after finishing processes, can work normally, but can not open the folder from another project.\n\n![error](https://cloud.githubusercontent.com/assets/9867694/11447088/879368ec-9527-11e5-9b29-4b4c11d94a2b.png)\n'}, {'title': 'Hide empty folders after apply file exclusions (user settings)', 'body': "I'm a Unity 3D developer. Although I use file exclusions, it would be nice to hide folder that get empty after file exclusions are applied.\r\n"}, {'title': 'vscode Version 0.10.2 (0.10.2) - no Intellisense in Razor files?', 'body': "I can't get intellisense support in Razor files. On purpose?\n\nTo be more specific: JS intellisense is there. Missing support for @ tags\n"}, {'title': 'TextFileEditorModel tests seldom fail in Appveyor', 'body': "A few PR's hit this every now and then. [Here's the log](https://github.com/Microsoft/vscode/files/46134/log.txt).\n\n```\n[00:04:35]   1) Files - TextFileEditorModel Change after auto save triggered will cause another autosave and twice the events:\n[00:04:35]      Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.\n[00:04:35]       at null.<anonymous> (C:\\Users\\appveyor\\AppData\\Roaming\\npm\\node_modules\\mocha\\lib\\runnable.js:189:19)\n```\n"}, {'title': "Can't use 'F12' goto definition for C Lanuage file.", 'body': "I want to use Visual Studio Code for C programming, after load the top folder of my project, all files has been added, but seems I can't use 'F12' or 'Ctrl + left click' to go to definition across my project files\n"}, {'title': 'Does VS code support automatically importing components for Typescript?', 'body': "Are there any plans to supports automatic imports for typescript?   I don't think this currently works even if typings files are included.\n\nThanks.\n"}, {'title': 'Unexpected return type of `vscode.executeFormatDocumentProvider` and `vscode.executeDocumentSymbolProvider`', 'body': 'It\'s nice that the implementations of `FormatDocumentProvider` and `DocumentSymbolProvider` can be used via `executeCommand`.  However, the return types are undocumented and subtely different from what the implementation side produces.\n1. Is this intentional?\n2. Is it considered a supported scenario for extensions to use `executeCommand` on these commands?  Or should they factor out their implementation and use the implementation code directly?\n\nFor `FormatDocumentProvider` for example, I provide a `TextEdit[]` which is:\n\n``` json\n[\n {\n  "_range": {\n   "_start": {\n    "_line": 2,\n    "_character": 7\n   },\n   "_end": {\n    "_line": 4,\n    "_character": 4\n   }\n  },\n  "_newText": ""\n },\n {\n  "_range": {\n   "_start": {\n    "_line": 4,\n    "_character": 14\n   },\n   "_end": {\n    "_line": 5,\n    "_character": 1\n   }\n  },\n  "_newText": ""\n }\n]\n```\n\nbut `executeCommand("vscode.executeFormatDocumentProvider", ...)` receives this as:\n\n``` json\n[\n {\n  "text": "",\n  "range": {\n   "startLineNumber": 3,\n   "startColumn": 8,\n   "endLineNumber": 5,\n   "endColumn": 5\n  }\n },\n {\n  "text": "",\n  "range": {\n   "startLineNumber": 5,\n   "startColumn": 15,\n   "endLineNumber": 6,\n   "endColumn": 2\n  }\n }\n]\n```\n\nThe combination of completely different shape plus the 1-based numbering makes this data difficult to work with.\n\nSimilarly different results are returned from others similar commands.\n'}, {'title': 'PNG Images not shown', 'body': 'I have some files that are named with a capitol PNG extension they do not show up in the editor, I get the message "The file cannot be displayed in the editor because it is either binary, very large or uses an unsupported text encoding".  If the file extension is lowercase png then the file shows up in the editor.  Changing the file from uppercase to lowercase also fixes the issue.  \n\nThis used to work before the editor was opensourced.  \n'}, {'title': '[html] Improve auto completion of html closing tags', 'body': "For html closing tags, auto completions will show after typing `</`, can they show after typing `<` and needn't type `/`, and then the cursor is positioned between `>` and `<` after auto-completing?\n"}, {'title': 'VSCode cannot replace in multiple files', 'body': "There's SEARCH, but where is REPLACE?\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxwgDA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'BUG: High Energy Impact.', 'body': 'Not sure how I can help debug this, whilst `code` is running in the background, it has a detrimental effect on the performance of the battery.\n\n<img width="584" alt="screen shot 2015-11-28 at 12 59 23" src="https://cloud.githubusercontent.com/assets/1777444/11451979/ef2b5afc-95cf-11e5-8160-f74d7ec8be6b.png">\n\n<img width="284" alt="screen shot 2015-11-28 at 13 02 02" src="https://cloud.githubusercontent.com/assets/1777444/11451992/40cf4cf6-95d0-11e5-9db2-240706850a06.png">\n'}, {'title': 'please auto-indent HTML / JavaScript code', 'body': 'Open a .html or .js file, select all, press shitft+tab.\n\nExpected: auto-indent everything, like a HTML beautifier\n\nResult: all blocks, even if properly indented, are removed 1 tab. Press enough times and all lines of HTML code will start at column 0.\n\nMaybe related: issue #677 \n'}, {'title': 'php 7 support', 'body': 'Wanna see php 7 support in next version.\n'}, {'title': 'provideSignatureHelp block extension ejecution', 'body': 'I\'m writing and extension where I use **registerCompletionItemProvider** \n\n``` javascript\ncontext.subscriptions.push(languages.registerCompletionItemProvider(\'php\', new Completion(),\'>\'));\n```\n\nand I\'m using **onDidSaveTextDocument**\n\n``` javascript\ncontext.subscriptions.push(vscode.workspace.onDidSaveTextDocument((textDocument: vscode.TextDocument) => {\n//...Some lines of code\n}));\n```\n\nHere everything works fine. When I  seved a file, it throws me some text  and it shown using console.log(). At the same time, the Completiton works fines, showing me the some text of test. \nWhat I normaly do in a PHP file is a class with some methods.\n\n``` php\nclass Test{\n public funciton sayHello(){\n   //...some code.\n }\n}\n$class = new Test();\n$class->//Here shows me some text, thanks to registerCompletionItemProvider.\n```\n\nBut when I do _$class->sayHello();_ the Console debugger shows me provideSignatureHelp (ofcourse) but after this I can\'t keep using my code. when I write again $class->, nothing happends. So why is that?, If I\'m using ">" to shows some info for completition and works fine till write a method and a provideSignatureHelp actions is triggered.\n'}, {'title': 'Using semver used by vscode from vscode extensions ?', 'body': "I all, I'm currently playing with VSC extensions and create a very simple one in typescript as learning experience about managing nuget packages for project.json - nuget4code, https://github.com/fforjan/nuget4code.\n\nAt one stage, i had to reference semver package for node, but it seems it's already in use with vscode (i would have been surprised if it wasn't too).\n\nAny idea how I can configure my extension to rely on the installed semver from Visual Studio Code and not provide my own ?\n"}, {'title': 'Using vscode unit tests environment on travis build system.', 'body': 'I all, I\'m currently playing with VSC extensions and create a very simple one in typescript as learning experience about managing nuget packages for project.json - nuget4code, https://github.com/fforjan/nuget4code.\n\nWhen learning, I\'m always trying to do a full slice, including unit testing and build environment.\nAs I\'m using GitHub, I\'ve also link it to the Travis build system.\nMy npm test action  is currently configure compile only, so I can catch build error which could have been missed on my computer (more likely none ;))\n\nI got some unit tests working on my computer, they are really unit tests, I don\'t trigger any UI actions or other things, but they are doing _import \\* as vscode from "vscode"_, use some vscode.Uri and thus require a vscode environment setup to run.\n\nDo you have any idea how to configure Travis to be able to run unit tests ?\n'}, {'title': 'Update issue: Setup files are corrupted', 'body': "hey guys. i am running on windows 10 pro v-1511 and code v-10.1 it's not updating automatically but it shows a pop-up, i click update now it closes the editor, i have tried to wait for 10 min it didn't work when i launched the code it was the same, what should i do ?  maybe it is because my windows is not activated ? i clean installed and lost my key.\n"}, {'title': 'Undo Functionality', 'body': "What is VSCode using for Undo commands? I've searched the source code, but never found anything triggering it specifically. I found a text model interface with undo/redo methods, but nothing more then that.\n\nIs VSCode just relying on the native browsers support for undo? I ask, because I'm building a plugin, that requires calling undo, but can't find a way to call it through vscode. I could build my own stack for something like that, but seems redundant, when it should rely on the same system vscode does.\n\nCheers.\n"}, {'title': 'highlight files in the file explorer that have errors', 'body': 'Visual studio does it really well. I find it very helpful when working with TypeScript. I bet it would be as helpful with any strongly typed language.\n'}, {'title': 'XML syntax highlighting does not highlight attributes (like HTML does)', 'body': "XML doesn't color attributes and attribute values differently to tags.\n\nSVG file using (default) XML highlighting:\n\n![svg_as_xml](https://cloud.githubusercontent.com/assets/2193314/11454709/fd101bd2-95eb-11e5-9e79-759db7c8edc5.png)\n\nSVG file using HTML highlighting:\n\n![svg_as_html](https://cloud.githubusercontent.com/assets/2193314/11454710/ffbee73c-95eb-11e5-9799-e39c5b7fc8e2.png)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBxzF-Q==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[html] entities are not highlighted in HTML mode', 'body': 'HTML entities/named character references are not highlighted correctly in HTML mode.\n\n![html_entity](https://cloud.githubusercontent.com/assets/2193314/11454769/e87a3074-95ee-11e5-9c83-afc0b38eb77c.png)\n- [List of XML and HTML character entity references](https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references)\n- [HTML5 named character references](http://www.w3.org/TR/html5/syntax.html#named-character-references)\n'}, {'title': 'Validate all editors in stacks after relaunch', 'body': '**Repro**\n1. Open vscode on a folder\n2. Open and edit some files (to add to working files)\n3. Close vscode\n4. Delete the working files\n5. Relaunch vscode\n\n**Expected**\n\nThe deleted files are not in working files\n\n**Actual**\n\nThe deleted files are in working files, clicking them will give an unable to read error:\n\n![s](https://cloud.githubusercontent.com/assets/2193314/11454798/d380d892-95f0-11e5-858b-e5100f2e68d8.png)\n'}, {'title': 'Double click to highlight word should behave the same across all languages', 'body': 'Might be considered a feature, but I find it disorienting how double click behaves differently in different languages. Could this be a setting to highlight a symbol/word on double click?\n\nAn example, double clicking `some-class` in the HTML below will highlight `some-class`\n\n``` html\n<div class="some-class">\n```\n\nHowever double clicking `some-class` in the JavaScript below will highlight `some`, `-` or `class` depending on where you clicked.\n\n``` js\nvar x = document.querySelector(\'.some-class\');\n```\n'}, {'title': 'some keys dose not work in vsc', 'body': "Some keys  like 'h,v,/' dose't work  when i  coded in vsc and try press them,but it's look good outside vsc, so i have to restart vsc to resume it.who can help me to resolve this issues?\nOn the other hand,i can't switch my system input method  when i  built a new file and typed the file name.The first issues will only happen once in a while.\n"}, {'title': '[json] JSON Schema wrong path encoding', 'body': 'In a JSON file, when specifying the schema file, the path of the schema file shows something like this\n![image](https://cloud.githubusercontent.com/assets/6741017/11456509/8b779c7a-9640-11e5-9cd6-6922014944b7.png)\n\nSee the colon after the drive letter is not correctly encoded.\n'}, {'title': 'Word selection is not highlighted', 'body': '- OS\xa0X 10.11.1\n- Visual Studio Code 0.10.2\n\nSelecting words does not always highlight them. The sample is from a Makefile.\n\n![selection-bug mov](https://cloud.githubusercontent.com/assets/6348321/11456866/66564786-9698-11e5-8d9d-7b17a0cff78d.gif)\n'}, {'title': "can't use '\\' in key bindings (no keyboard layout issue)", 'body': 'This is different to keyboard layout issues. It appears that this key isn\'t bindable by design. But we need it to solve some keyboard layout issues in the Vim extension. :)\n\nMore details:\n\nhttps://code.visualstudio.com/docs/customization/keybindings (See "the following keys are accepted")\nhttps://github.com/VSCodeVim/Vim/issues/49\n'}, {'title': 'Extensions API: enhance DecorationOptions with a custom element', 'body': "vscode.DecorationOptions allows for a hoverString, but I would like decorated ranges to display a text popover text that doesn't require hovering.\n\nThis would allow me to develop an extensions equivalent to atom's [jumpy](https://atom.io/packages/jumpy)\n\n![](https://raw.githubusercontent.com/DavidLGoldberg/jumpy/master/_images/jumpy.gif)\n"}, {'title': 'Enable css id and class auto-completion inside HTML file', 'body': ''}, {'title': 'The duplication of HTML TAG with ctrl + d comes very important sometimes.', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBx1J5g==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'New line character not detected in regular expression search', 'body': 'New line character (\\n) not detected in regular expression search. It is treated as string even when regular expression option is selected.\n'}, {'title': '[ts] TypeScript function names are no longer colourised', 'body': 'Since the new textmate based colourisation, function names are no longer colourised for TypeScript. This is clearly not intended as the same code that will be colourised in JavaScript will not be colourised in TypeScript. \n'}, {'title': 'Mac: Undo, Redo, Select All not working in native dialogs (use roles for those?)', 'body': 'Please check the screenshot below, it should select all the text include the file extension, however it was not working.\n\n![select-all-not-working](https://cloud.githubusercontent.com/assets/344283/11458218/f4f5f3c0-96f6-11e5-84ea-00b3efabfc90.png)\n'}, {'title': 'Extension debugger cannot connect when WiFi is Disabled', 'body': 'Debugging an extension does not work if the WiFi adapter is disabled on my laptop. (i.e in airplane mode). I get the message "Cannot connect to runtime process (reason: [object Object])", while the debug window said it could not connect to the debugger.\n\nAdditionally it would be nice for the debugging window to give  a better message than [object Object], and for it to log the message in the debug console.\n\n![vscode_wifi_debug_issue](https://cloud.githubusercontent.com/assets/817264/11458555/31e39e50-96ba-11e5-8e26-6c3fe695b0b9.PNG)\n'}, {'title': 'Git Commit Does Not Work Without Comments', 'body': 'Hello,\n\nIt appears that git commit will not work if no comments specified.\nOS: Windows 7 SP1\nVSO: 0.10.2\n\nThank you,\nYuriy\n'}, {'title': 'Git Commit Ctrl+Enter Does Not Work', 'body': 'Hello,\n\nGit Commit will not work with Ctrl+Enter hotkey.\nOS: Windows 7 SP1\nVSO: 0.010.2\n\nRegards,\nYuriy\n'}, {'title': 'Visualize Linebreaks With "CRLR" or "LR"', 'body': 'Hello,\n\nPlease add option to visualize line breaks with CRLR or LR as it is done in Notepad++\n\nThank you,\nYuriy\n'}, {'title': 'Open in command prompt ', 'body': 'Can we have this actually open the default command prompt ?\nRight now even if I have powershell like the default, it still opens legacy cmd.exe\n'}, {'title': 'Markdown preview does not show images with relative file path', 'body': "In version 0.10.2 (and earlier versions) images in markdown files referenced using a relative path are not shown in the preview. Tested on Windows 7 and Windows 10.\n\nThe developer tools show that the `src` attribute value of the `img` tag is wrong (`/d%3A/Temp/folder/example.jpg` doesn't work in a browser, should be `file:///D:/Temp/folder/example.jpg` instead)\n![screenshot](https://cloud.githubusercontent.com/assets/1882836/11460907/20a05cfe-96f7-11e5-8da6-dd97ac8c4379.png)\n"}, {'title': 'Auto Formatting SCSS or JSX files does not work', 'body': 'Shift + Option + F does not auto-format .scss or .jsx files. It should format similar to CSS and JS.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBx3kCQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Question: What version of HTML does vscode intend to support?', 'body': "I've opened a few PRs related to HTML support/completion. Just wondering what the official stance is on what version of HTML is supported, currently I've been working against [W3C HTML5.1 WD](http://www.w3.org/TR/html51/) and excluding deprecated tags as their use is discouraged.\n"}, {'title': 'unit tests pass on Ubuntu but fail pass but exit with 1', 'body': 'Ubuntu 15.10, vscode@master\n\nRunning `./test/run.sh` passes all the unit tests and then fail integration tests with the following output:\n\n```\n~/workspaces/forks/vscode @master\n$ ./test/run.sh \n\n\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․\n\n  1732 passing (3s)\n\n[17:33:37] Using gulpfile ~/workspaces/forks/vscode/gulpfile.js\n[17:33:37] Starting \'electron\'...\n[17:33:37] Finished \'electron\' after 230 μs\n[19463:1129/173337:ERROR:browser_main_loop.cc(189)] Running without the SUID sandbox! See https://code.google.com/p/chromium/wiki/LinuxSUIDSandboxDevelopment for more information on developing with the sandbox on.\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\n[19541:1129/173337:ERROR:renderer_main.cc(200)] Running without renderer sandbox\n[19463:1129/173339:INFO:CONSOLE(186)] "%c[Plugin Host] %cdebugger listening on port 5870", source: file:////home/daniel/workspaces/forks/vscode/out/vs/workbench/services/thread/electron-browser/threadService.js (186)\n[19463:1129/173339:INFO:CONSOLE(129)] "Loading development extension at /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests", source: file:////home/daniel/workspaces/forks/vscode/out/vs/platform/plugins/common/nativePluginService.js (129)\nError: Cannot find module \'vscode/lib/testrunner\'\nLoading development extension at /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests\nOverwriting extension /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests with /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests\nWARNING: Promise with no error callback:2\n{ exception: [Error: channel closed],\n  error: null,\n  promise: \n   { _creator: null,\n     _nextState: null,\n     _state: \n      { name: \'error\',\n        enter: [Function],\n        cancel: [Function: _],\n        done: null,\n        then: null,\n        _completed: [Function: _],\n        _error: [Function: _],\n        _notify: [Function: notifyError],\n        _progress: [Function: _],\n        _setCompleteValue: [Function: _],\n        _setErrorValue: [Function: _] },\n     _value: [Error: channel closed],\n     _isException: true,\n     _errorId: 2,\n     done: [Function: ErrorPromise_done],\n     then: [Function: ErrorPromise_then] },\n  handler: undefined,\n  id: 2,\n  parent: undefined }\nError: channel closed\n    at process.target.send (internal/child_process.js:509:16)\n    at Object.Server._super.call.send (/home/daniel/workspaces/forks/vscode/out/vs/base/node/service.cp.js:16:53)\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:94:36)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\nWARNING: Promise with no error callback:3\n{ exception: [TypeError: Cannot read property \'split\' of undefined],\n  error: null,\n  promise: \n   { _creator: null,\n     _nextState: null,\n     _state: \n      { name: \'error\',\n        enter: [Function],\n        cancel: [Function: _],\n        done: null,\n        then: null,\n        _completed: [Function: _],\n        _error: [Function: _],\n        _notify: [Function: notifyError],\n        _progress: [Function: _],\n        _setCompleteValue: [Function: _],\n        _setErrorValue: [Function: _] },\n     _value: [TypeError: Cannot read property \'split\' of undefined],\n     _isException: true,\n     _errorId: 3,\n     done: [Function: ErrorPromise_done],\n     then: [Function: ErrorPromise_then] },\n  handler: undefined,\n  id: 3,\n  parent: undefined }\nTypeError: Cannot read property \'split\' of undefined\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:97:46)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\nWARNING: Promise with no error callback:undefined\n[Error: Promise did not implement oncancel]\nUncaught Exception:  Error: channel closed\n\nError: channel closed\n    at process.target.send (internal/child_process.js:509:16)\n    at Object.Server._super.call.send (/home/daniel/workspaces/forks/vscode/out/vs/base/node/service.cp.js:16:53)\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:94:36)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\nError: channel closed\n\nError: channel closed\n    at process.target.send (internal/child_process.js:509:16)\n    at Object.Server._super.call.send (/home/daniel/workspaces/forks/vscode/out/vs/base/node/service.cp.js:16:53)\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:94:36)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at null._onTimeout (/home/daniel/workspaces/forks/vscode/out/vs/base/common/errors.js:14:31)\n    at Timer.listOnTimeout (timers.js:89:15)\nUncaught Exception:  Error: Cannot read property \'split\' of undefined\n\nTypeError: Cannot read property \'split\' of undefined\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:97:46)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\nError: Cannot read property \'split\' of undefined\n\nTypeError: Cannot read property \'split\' of undefined\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:97:46)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at null._onTimeout (/home/daniel/workspaces/forks/vscode/out/vs/base/common/errors.js:14:31)\n    at Timer.listOnTimeout (timers.js:89:15)\n    at listOnTimeoutNT (timers.js:115:19)\n    at doNTCallback1 (node.js:430:9)\n    at Immediate._tickCallback [as _onImmediate] (node.js:352:17)\n    at processImmediate [as _immediateCallback] (timers.js:374:17)\n\n~/workspaces/forks/vscode @master\n$ [19486:1129/173340:ERROR:gl_context_glx.cc(107)] Couldn\'t make context current with X drawable.\n[19486:1129/173340:ERROR:gles2_cmd_decoder.cc(3502)]   GLES2DecoderImpl: Context lost during MakeCurrent.\n[19486:1129/173340:WARNING:x11_util.cc(1472)] X error received: serial 174, error_code 171 (GLXBadDrawable), request_code 154, minor_code 26 (X_GLXMakeContextCurrent)\n~/workspaces/forks/vscode @master\n$ echo $?\n1\n```\n'}, {'title': './test/run.sh passing output is noisy', 'body': 'Ubuntu 15.10, vscode@master\n\nSuccessful passing runs of `./test/run.sh` contain a lot of noisy output that look like failures, the output of vscode also continues after the script terminates and control is returned to the terminal:\n\n```\n~/workspaces/forks/vscode @master\n$ ./test/run.sh \n\n\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․․\n  ․․․․․․․\n\n  1732 passing (3s)\n\n[17:52:49] Using gulpfile ~/workspaces/forks/vscode/gulpfile.js\n[17:52:49] Starting \'electron\'...\n[17:52:49] Finished \'electron\' after 225 μs\n[22381:1129/175249:ERROR:browser_main_loop.cc(189)] Running without the SUID sandbox! See https://code.google.com/p/chromium/wiki/LinuxSUIDSandboxDevelopment for more information on developing with the sandbox on.\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\n[22461:1129/175250:ERROR:renderer_main.cc(200)] Running without renderer sandbox\n[22381:1129/175251:INFO:CONSOLE(186)] "%c[Plugin Host] %cdebugger listening on port 5870", source: file:////home/daniel/workspaces/forks/vscode/out/vs/workbench/services/thread/electron-browser/threadService.js (186)\n[22381:1129/175251:INFO:CONSOLE(129)] "Loading development extension at /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests", source: file:////home/daniel/workspaces/forks/vscode/out/vs/platform/plugins/common/nativePluginService.js (129)\nLoading development extension at /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests\nOverwriting extension /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests with /home/daniel/workspaces/forks/vscode/extensions/vscode-api-tests\n\n\n  editor tests\n    ✓ make edit (241ms)\n\n  window namespace tests\n    ✓ active text editor (193ms)\n\n  workspace-namespace\n    ✓ textDocuments\n    ✓ rootPath\n    ✓ openTextDocument\n    ✓ openTextDocument, illegal path\n    ✓ events: onDidOpenTextDocument, onDidChangeTextDocument, onDidSaveTextDocument (57ms)\n    ✓ findFiles (155ms)\n\n\n  8 passing (723ms)\n\nWARNING: Promise with no error callback:2\n{ exception: [Error: channel closed],\n  error: null,\n  promise: \n   { _creator: null,\n     _nextState: null,\n     _state: \n      { name: \'error\',\n        enter: [Function],\n        cancel: [Function: _],\n        done: null,\n        then: null,\n        _completed: [Function: _],\n        _error: [Function: _],\n        _notify: [Function: notifyError],\n        _progress: [Function: _],\n        _setCompleteValue: [Function: _],\n        _setErrorValue: [Function: _] },\n     _value: [Error: channel closed],\n     _isException: true,\n     _errorId: 2,\n     done: [Function: ErrorPromise_done],\n     then: [Function: ErrorPromise_then] },\n  handler: undefined,\n  id: 2,\n  parent: undefined }\nError: channel closed\n    at process.target.send (internal/child_process.js:509:16)\n    at Object.Server._super.call.send (/home/daniel/workspaces/forks/vscode/out/vs/base/node/service.cp.js:16:53)\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:94:36)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\nUncaught Exception:  Error: channel closed\n\nError: channel closed\n    at process.target.send (internal/child_process.js:509:16)\n    at Object.Server._super.call.send (/home/daniel/workspaces/forks/vscode/out/vs/base/node/service.cp.js:16:53)\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:94:36)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\nError: channel closed\n\nError: channel closed\n    at process.target.send (internal/child_process.js:509:16)\n    at Object.Server._super.call.send (/home/daniel/workspaces/forks/vscode/out/vs/base/node/service.cp.js:16:53)\n    at promise.then._this.protocol.send.id (/home/daniel/workspaces/forks/vscode/out/vs/base/common/service.js:94:36)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at WinJS.Class.define._run (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at WinJS.Class.define._error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1316:18)\n    at error (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1019:29)\n    at Object.notifyError [as _notify] (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1470:50)\n    at Object.state_error_notify.enter (/home/daniel/workspaces/forks/vscode/out/vs/base/common/winjs.base.raw.js:1176:30)\n    at null._onTimeout (/home/daniel/workspaces/forks/vscode/out/vs/base/common/errors.js:14:31)\n    at Timer.listOnTimeout (timers.js:89:15)\n\n~/workspaces/forks/vscode @master\n$ [22405:1129/175253:ERROR:gl_context_glx.cc(107)] Couldn\'t make context current with X drawable.\n[22405:1129/175253:ERROR:gles2_cmd_decoder.cc(3502)]   GLES2DecoderImpl: Context lost during MakeCurrent.\n[22405:1129/175253:WARNING:x11_util.cc(1472)] X error received: serial 170, error_code 171 (GLXBadDrawable), request_code 154, minor_code 26 (X_GLXMakeContextCurrent)\n```\n'}, {'title': 'Once released new version, please tag it. like 0.10.2', 'body': 'Once released new version, please tag it. like 0.10.2\n\nhttps://github.com/Microsoft/vscode/releases\n\nCan not see 0.10.2 tag here\n'}, {'title': 'Extension commands are displayed to user before extension is activated', 'body': 'Any commands an extension defines appear to be shown in the command palette even before the extension is activated to contribute a handler for the command.\n\nThis leads to issues like https://github.com/Microsoft/vscode-go/issues/124.\n\nIdeally, executing one of these commands would force activation of the extension.\n'}, {'title': 'Linting and file format issue with #!/usr/bin/env node', 'body': 'When declaring a bin file with `#!/usr/bin/env node` it forces the document type to `javascript` where I have a `typescript` one. It breaks `tslint` and asks for enabling ES6 in `jsconfig.json` file.\n'}, {'title': 'No Intellisense with typescript', 'body': "It went smoothly at the start. Everything stopped working after a certain point (I use default settings, so nothing about `settings.json`). No autocomplete or type hinting anymore, it's just like a regular text editor to me right now. But it has hints when i was editing`settings.json` though.\n"}, {'title': 'when wrappingColumn not 0, this function is invalid', 'body': 'in settings.json\nset editor.wrappingColumn -> 120,\nword wrap cannot by window size.\nbut when the value is 0, it worked.\n\nTest on OSX lastest version.\nVSCODE version is 0.10.2.\n\n![111111](https://cloud.githubusercontent.com/assets/6395714/11468843/6b285772-978d-11e5-8f7e-57dbc40b27be.jpg)\n![22222](https://cloud.githubusercontent.com/assets/6395714/11468845/720d705e-978d-11e5-89ca-ced63a67f9ac.jpg)\n'}, {'title': 'Navigating from and to a file stacks the errors instead of overwriting the same error.', 'body': "_From @janpieterz on November 25, 2015 15:10_\n\nWhen navigating from and to a file (without opening it in working files) the errors stack, as shown in the screenshot below.\n\nThis behavior isn't present when the file is in working files, only when browsing in and out (taking a peek).\n\n![image](https://cloud.githubusercontent.com/assets/383634/11400691/1550929e-938f-11e5-8838-3916e7870e0a.png)\n\n_Copied from original issue: Microsoft/vscode-jshint#5_\n"}, {'title': 'How to embed the Monaco editor with TS service in your own HTML page?', 'body': 'Hi,\nsorry if this is the wrong place to ask for this.\n\nIt is really awesome that VS Code is now open-source. Some time ago I created a issue in the TypeScript repo (https://github.com/Microsoft/TypeScript/issues/5324) asking if it\'d be possible to embed the Monaco Editor (as used in the [TypeScript Playground](http://www.typescriptlang.org/Playground)) into your own HTML pages.\n\nI\'d like to:\n- Show the Monaco editor in the HTML page using the Typescript Language Service.\n- Specify the initial TypeScript editor contents and my own .d.ts definition files to be used by the TS Language Service.\n- Get the displayed TypeScript and the transpiled Javascript when e.g. a button is clicked.\n- Be able to dispose of the editor when e.g. another button is clicked.\n\nSo I\'d like to use the editor similar to the Typescript Playground, with the difference that I would specify my own .d.ts files and to not have a JavaScript editor at the right-hand side.\nHowever I don\'t know how to do this correctly.\n\nI checked out the vscode repository and invoked tsc in the [src folder](https://github.com/Microsoft/vscode/tree/master/src). Then I created a HTML page in that folder using the TS playground as a template:\n\n``` html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset="UTF-8" />\n<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.4.min.js"></script>\n</head>\n<body>\n<h1>Test Monaco</h1>\n\n<div id="typescriptEditor"></div>\n\n<script type="text/javascript">\n        var require = {\n            baseUrl: "/"\n        };\n</script>\n<script type="text/javascript" src="vs/loader.js"></script>\n<script type="text/javascript" src="vs/editor/editor.main.js"></script>\n<script type="text/javascript">\n\nif (!window.console.info) {\n    window.console.info = function(){}\n}\n\n(function () {\n    \'use strict\';\n\n    var domnode = document.getElementById(\'typescriptEditor\')\n    var typescriptMode = null;\n\n    require([\'vs/editor/editor.main\'], function () {\n\n        Monaco.Editor.getOrCreateMode(\'text/typescript\').then(function (mode) {\n            typescriptMode = mode;\n\n            var editor = Monaco.Editor.create(domnode, {\n                value: \'\',\n                mode: \'text/plain\',\n                fontIsMonospace: true,\n                suggestOnTriggerCharacters: true,\n                showTypeScriptWarnings: false\n            });\n        });\n\n\n    });\n\n})();\n</script>\n</body>\n</html>\n```\n\nHowever, when hosting the directory in IIS Express and opening the HTML file in a browser, I\'m getting errors such as\n\n```\nGET \nhttp://localhost:8080/vs/editor/contrib/comment/common/color.css [HTTP/1.1 404 Not Found 16ms]\nGET \nhttp://localhost:8080/vs/editor/contrib/inPlaceReplace/common/gotoError.css [HTTP/1.1 404 Not Found 13ms]\nGET \nhttp://localhost:8080/vs/editor/contrib/referenceSearch/browser/rename.css [HTTP/1.1 404 Not Found 125ms]\nTypeError: Browser.isInWebWorker is not a function browserService.js:25:17\nTypeError: nls.localize is not a function pluginsRegistry.js:330:30\nTypeError: EditorCommon.LineTokensBinaryEncoding is undefined tokenIterator.js:7:9\n```\n\nCan anybody give me some pointers how to embed the editor correctly using the TS service?\n\nThank you!\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBx7U1w==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[html] Autocomplete html tags', 'body': 'It would be nice if it can autocomplete html closing tags. \nfor e.g.\n`<template>`\n`</template>`\n'}, {'title': 'International keyboard layouts not being correctly recognised for shortcuts?', 'body': 'By default, <kbd>⌘</kbd><kbd>/</kbd> is `Toggle Line Comment`. Now lets look at the Portuguese keyboard layout:\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/KB_Portuguese.svg/900px-KB_Portuguese.svg.png)\n\nAs you can see, to do <kbd>/</kbd> we need to <kbd>⇧</kbd><kbd>7</kbd>, so <kbd>⌘</kbd><kbd>/</kbd> is actually <kbd>⌘</kbd><kbd>⇧</kbd><kbd>7</kbd>. This works fine in most apps, but not VSCode, where it was showing the `Help` menu<sup>1</sup>.\n\nAtom has no problem with this (even with the conflicting `Help` menu shortcut) in the same situation, so there might be an insight in the way they do it.\n\nUsing VSCode `0.10.2` on OS X `10.11.1 (15B42)`.\n\n---\n\n<sup>1</sup> Default system-wide shortcut is <kbd>⌘</kbd><kbd>⇧</kbd><kbd>/</kbd>, which is interpreted even with <kbd>⌘</kbd><kbd>⇧</kbd><kbd>7</kbd>\n'}, {'title': 'Typescript import statements', 'body': 'For import statement in typescript it would be nice if we can reference an object in a class (for e,g.) and the IDE can write (when you click on the object reference Foo in example below) an import statement for you.\nFor e.g.\n\n`import {Foo} from "../../../bar/somelongpath/foo"`\n\n`export class Test {`\n`private f: Foo;`\n`}`\n\nWebstorm already provides this and it makes a lot of difference (productivitywise) as you dont have to manually type and figure out the path to the import statement.\n'}, {'title': 'XML color highlight appears to be broken', 'body': 'Just no highlight at all, if XML is selected. Everything is just maroon.\n![2015-11-30 17-04-46 ames lps - visual studio code](https://cloud.githubusercontent.com/assets/10468217/11473673/bde1c344-9784-11e5-83e1-656d2f9cf2b1.png)\n'}, {'title': '[xml] entities are not highlighted ', 'body': 'XML highlighting is also not ideal, I would expect the leading `&` and trailing `;` to also be highlighted.\n\n![xml_entity](https://cloud.githubusercontent.com/assets/2193314/11454772/f80321b8-95ee-11e5-9d93-101e5ff97c7f.png)\n- [List of XML and HTML character entity references](https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references)\n- [HTML5 named character references](http://www.w3.org/TR/html5/syntax.html#named-character-references)\n'}, {'title': 'Context menu is positioned wrongly when zoomed in', 'body': '> When I zoom in (using Ctrl+Shift++) the context menu that is shown when I right click somewhere is displayed in the wrong place. I attached two images one without any zoom where the menu is displayed correctly in the second one how is displayed after pressing Ctrl+Shift++ twice. In both cases the click is where the text cursor is. \n> \n> Some information about my environment: This is under Windows 10. I\'m using two monitors both with scaling of 125% (by that I mean the option named "change size of text apps and other items" in the diplay settings ) and the resolutions of the displays are 2560x1440 and 1080x2024.\n'}, {'title': 'Need to support app mutexes', 'body': 'This will let the Setup installer not go ahead and perform an update/install if Code is running.\n'}, {'title': "Gallery should only install compatible extensions based on VSCode's version", 'body': ''}, {'title': 'Provide encoding-related APIs for editor extensions', 'body': "Currently there are only two fields in the TextEditorOptions API, a few other TextEditor-related APIs, and none of them is able to deal with the text buffer's encoding.\nComparing to [Atom's TextEdit API](https://atom.io/docs/api/v1.2.4/TextEditor), that is far from enough.\n\nMost importantly, the API limitation makes it (seems) impossible for vscode-editorconfig to implement features like `charset` support, which is a crucial need for many people.\n"}, {'title': 'No Intellisense with Javascript React', 'body': 'might    be structure  of some setting files? \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBx-12g==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Adopt latest Electron build', 'body': ''}, {'title': '[js] TypeError: e.split is not a function', 'body': 'Issue Id: <b>837ddb7d-c443-d535-b2a5-9c6d8325db60</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />\\-  7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066<br />_Stack_ <br />TypeError: e.split is not a function<br />[/vs/languages/typescript/common/features/quickFix.ts#L208:102 (computeAddTypeDefinitionProposals)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/features/quickFix.ts#L208:102 %28computeAddTypeDefinitionProposals%29)<br />    at Array.forEach (native)<br />[/vs/languages/typescript/common/features/quickFix.ts#L206:10 (computeAddTypeDefinitionProposals)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/features/quickFix.ts#L206:10 %28computeAddTypeDefinitionProposals%29)<br />[/vs/languages/typescript/common/features/quickFix.ts#L76:3 (compute)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/features/quickFix.ts#L76:3 %28compute%29)<br />[/vs/languages/javascript/common/javascriptWorker.ts#L220:24 (JavaScriptWorker.getQuickFixes)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/javascript/common/javascriptWorker.ts#L220:24 %28JavaScriptWorker.getQuickFixes%29)<br />[/vs/languages/typescript/common/typescriptMode.ts#L474:31 (TypeScriptMode.getQuickFixes)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/typescriptMode.ts#L474:31 %28TypeScriptMode.getQuickFixes%29)<br />[vs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 (onComplete)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 %28onComplete%29)<br />[/vs/editor/common/modes/abstractMode.ts#L122:35 (AbstractMode._worker)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/editor/common/modes/abstractMode.ts#L122:35 %28AbstractMode._worker%29)<br />[/vs/languages/typescript/common/typescriptMode.ts#L474:14 (TypeScriptMode.getQuickFixes)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/languages/typescript/common/typescriptMode.ts#L474:14 %28TypeScriptMode.getQuickFixes%29)<br />[/vs/platform/thread/common/workerThreadService.ts#L89:16 (WorkerThreadService.OneWorker)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/platform/thread/common/workerThreadService.ts#L89:16 %28WorkerThreadService.OneWorker%29)<br />\n'}, {'title': " Cannot read property 'getLineCount' of null", 'body': "Issue Id: <b>b676d149-e6c7-9cfa-a105-dfa445c537eb</b><br /><br />_Versions_ <br />\\- 0.10.2<br />_Stack_ <br />TypeError: Cannot read property 'getLineCount' of null<br />[/vs/editor/contrib/codelens/browser/codelens.ts#L536:46 (CodeLensContribution.renderCodeLensSymbols)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/editor/contrib/codelens/browser/codelens.ts#L536:46 %28CodeLensContribution.renderCodeLensSymbols%29)<br />[/vs/editor/contrib/codelens/browser/codelens.ts#L451:10 (CodeLensContribution.onModelChange)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/editor/contrib/codelens/browser/codelens.ts#L451:10 %28CodeLensContribution.onModelChange%29)<br />[/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)<br />[/vs/base/common/winjs.base.raw.js#L1127:0 (_notify)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L1127:0 %28_notify%29)<br />[/vs/base/common/winjs.base.raw.js#L1343:0 (enter)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L1343:0 %28enter%29)<br />[/vs/base/common/winjs.base.raw.js#L1311:0 (_run)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L1311:0 %28_run%29)<br />[/vs/base/common/winjs.base.raw.js#L2072:0 (complete)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L2072:0 %28complete%29)<br />[/vs/base/common/winjs.base.raw.js#L2097:0 (argDone)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L2097:0 %28argDone%29)<br />[/vs/base/common/winjs.base.raw.js#L1440:0 (onComplete)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L1440:0 %28onComplete%29)<br />[/vs/base/common/winjs.base.raw.js#L1176:0 (_notify)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/base/common/winjs.base.raw.js#L1176:0 %28_notify%29)<br />\n"}, {'title': " TypeError: Cannot read property 'getRangeFromSpan' of undefined", 'body': "Issue Id: <b>38ef9451-7d4b-2f2f-e705-51738c6590ba</b><br /><br />_Versions_ <br />\\- 0.10.2<br />\\-  df352367df2efcfa9d602d471e4e2f42140a0f05<br />_Stack_ <br />TypeError: Cannot read property 'getRangeFromSpan' of undefined<br />[/vs/languages/typescript/common/features/definitions.ts#L34:54 (findDeclaration)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/languages/typescript/common/features/definitions.ts#L34:54 %28findDeclaration%29)<br />[/vs/languages/javascript/common/javascriptWorker.ts#L156:27 (JavaScriptWorker._findTypeScriptDeclaration)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/languages/javascript/common/javascriptWorker.ts#L156:27 %28JavaScriptWorker._findTypeScriptDeclaration%29)<br />[/vs/languages/typescript/common/typescriptWorker2.ts#L237:14 (TypeScriptWorker2.findDeclaration)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/languages/typescript/common/typescriptWorker2.ts#L237:14 %28TypeScriptWorker2.findDeclaration%29)<br />[/vs/languages/typescript/common/typescriptMode.ts#L484:31 (TypeScriptMode.findDeclaration)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/languages/typescript/common/typescriptMode.ts#L484:31 %28TypeScriptMode.findDeclaration%29)<br />[vs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 (onComplete)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/srcvs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 %28onComplete%29)<br />[/vs/editor/common/modes/abstractMode.ts#L122:35 (AbstractMode._worker)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/editor/common/modes/abstractMode.ts#L122:35 %28AbstractMode._worker%29)<br />[/vs/languages/typescript/common/typescriptMode.ts#L484:14 (TypeScriptMode.findDeclaration)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/languages/typescript/common/typescriptMode.ts#L484:14 %28TypeScriptMode.findDeclaration%29)<br />[/vs/platform/thread/common/workerThreadService.ts#L89:16 (WorkerThreadService.OneWorker)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/platform/thread/common/workerThreadService.ts#L89:16 %28WorkerThreadService.OneWorker%29)<br />[/vs/platform/thread/common/threadService.ts#L69:35 (OneWorker)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/src/vs/platform/thread/common/threadService.ts#L69:35 %28OneWorker%29)<br />[vs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 (onComplete)](https://github.com/microsoft/vscode/blob/7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066/srcvs/base/common/worker/vs/base/common/winjs.base.raw.js#L1826:0 %28onComplete%29)<br />\n"}, {'title': 'Ctrl+Del behaviour is different from other editors', 'body': "See my gif; I did test this on a Windows machine with a TypeScript file\nI didn't expect it to remove the `//` or the `.` when pressing ctrl+del\nIf this is the right behaviour, feel free to close :) \n![ctrl del](https://cloud.githubusercontent.com/assets/765657/11482759/f0538eaa-97a4-11e5-9275-34bd81ab11c2.gif)\n"}, {'title': "No 'File Open' dialog is displayed when attempting to open a folder", 'body': "I'm running Ubutu in a VM.  \nI've shared a folder in ubuntu using samba.  \nI open the folder in Visual Studio code.  \nI make my changes, close VS Code and shut down the VM.  \nHours later....\nI start VS code.  \nI select 'File' -> 'Open Folder'\nNo dialog is displayed so I choose 'File' -> 'Open Folder' again.  Nothing happens.  Eventually many file open dialogs appear.  \n\nI expected it to be fast and allow me to open a folder on my local computer.  \n"}, {'title': 'No intellisense for some typings until tsconfig.json created', 'body': "For some typings, intellisense does not start working until a tsconfig.json config file is included. Is this intended behavior?\n\nCase 1:\nGulp typings without a tsconfig.json included. **Typings work**\n![image](https://cloud.githubusercontent.com/assets/9221137/11484146/19c63ba8-9772-11e5-8617-2963199c5e87.png)\n\nCase 2: \nExtjs typings without a tsconfig.json. **Typings don't work**\n![image](https://cloud.githubusercontent.com/assets/9221137/11484179/405cc14c-9772-11e5-846b-f83c934935aa.png)\n\nCase 3:\nExtjs typings with a tsconfig.json.**Typings work**\n![image](https://cloud.githubusercontent.com/assets/9221137/11484229/8734c920-9772-11e5-94f8-fad5592d0e8e.png)\n"}, {'title': 'Adopt TypeScript 1.7', 'body': ''}, {'title': 'Adopt latest version of OmniSharp', 'body': ''}, {'title': 'warn about duplicate debug type ids', 'body': 'I made a bug fix for mono-debug available to an external user. For this I had changed the publisher id to myself. The user was not able to use that extension.\n\nProblem: publishing an extension with the same name but a different publisher ID creates a new extension that has nothing to do with the original extension.\nThe debug UI code that collects the extension does not seem to detect the problem that a debug type is redefined. Subsequently it is not clear what debug adapter extension is actually used.\n\nI suggest, that we support that debug adapter extensions for an existing debug type but with a different publisher are allowed but result in a warning. \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByDMyg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Wordwrap (Wrapcolumn) at specific character [plugin]', 'body': 'First like to state that I know about the property "editor.wrappingColumn" but that\'s not what I\'m looking for.\n\nI was looking for some "smart" way of wrapping lines to be used mainly in JSON files (like in snippets for example) and I\'m interested in build a plugin to wrap lines at a specific set of characters, like "\\n" for example.\n\nI did some search for some way to do that, but as I couldn\'t find any means seems to me that it\'s not possible with the API available today.\n\nAny hints about this matter? Seems to me that is not the hardest thing to do, as it don\'t wrap lines in middle of words, but it will be really helpful.\n'}, {'title': 'Core dump: Windows 10 machine running Xming as an X server', 'body': "When I try to start code in Ubuntu 14.04, using my local Windows 10 machine running Xming as an X server, code crashes before I even see a window.\n\n~$ code &\n[2] 7847\n~$ bash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\n[xcb] Unknown sequence number while processing queue\n[xcb] Most likely this is a multi-threaded client and XInitThreads has not been called\n[xcb] Aborting, sorry about that.\n/bin/VSCode-linux-x64/Code: ../../src/xcb_io.c:274: poll_for_event: Assertion `!xcb_xlib_threads_sequence_lost' failed.\ncd vscode/\n[2]+  Aborted                 (core dumped) code  (wd: ~)\n(wd now: ~/vscode)\n~/vscode$ code . &\n[2] 7949\n~/vscode$ bash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\n[xcb] Unknown sequence number while processing queue\n[xcb] Most likely this is a multi-threaded client and XInitThreads has not been called\n[xcb] Aborting, sorry about that.\n/bin/VSCode-linux-x64/Code .: ../../src/xcb_io.c:274: poll_for_event: Assertion`!xcb_xlib_threads_sequence_lost' failed.\nls\n[2]+  Aborted                 (core dumped) code .\n"}, {'title': 'Annoying bar', 'body': 'Although this is somewhat small, this really gets me; whenever I create a new file (that is the key here, this doesn\'t happen with ones previously created and opened using the "open with code" context menu) after passing line 25 there is a bar that is a different color overlayed on the line numbers, which as far as I can tell extends infinitely.\n'}, {'title': 'Long line of hover text gets cut off instead of line wrapping', 'body': "https://github.com/Microsoft/vscode-go/issues/131 appears to be unfixable with the current API, since lines aren't being automatically wrapped, there is no way to request them to be wrapped, and there is no apriori known length at which to proactively wrap that will look good in general.\n"}, {'title': 'Error message text cannot be multiline', 'body': "https://github.com/Microsoft/vscode-go/issues/132 appears to be unfixable with the current Code API, which doesn't render newline characters in the message as newlines in the UI, and doesn't allow any formatting construct to provide multiple lines of content (as the Hover type does).\n\nFor some compilers, multiline error messages which take advantage of both newlines and tabs to provide helpful formatted error reports are fairly common, and cannot be rendered well in Code.\n"}, {'title': 'default encoding', 'body': "i love vs code \n\ni want fix default encoding.\n1. open txt\n2. default encoding is utf-8\n3. i will reopen with encoding. why? open txt is different encoding (save euc-kr, but open utf-8)\n\nbut notepad show well.\n\ni know utf-8 have signature at front from file\n\nhave no signature -> open system default encoding.\n\nplease fix this issue.\n\ni wan't more good program.\n"}, {'title': 'Command prompt width & autowrap setting suggestion', 'body': '(On OSX) my errors often get cut off from the "Errors and warnings" menu that appears when I press ⌘ + ALT + SHIFT.\n\nIt would be nice to have settings to:\n- increase prompt width\n- make prompt items wrap\n\nhttp://stackoverflow.com/questions/33757338/increase-vscodes-error-and-warnings-menu-width-or-make-it-wrap\n'}, {'title': 'Cannot validate the php file. The php program was not found.', 'body': 'Cannot validate the php file. The php program was not found. Use the \'php.validate.executablePath\' setting to configure the location of \'php\'\n\nI put php in a folder and set the path like so:\nset "php.validate.executablePath" : "E:\\Program Files (x86)\\VSRes\\php\\php.exe"\n\nand yet it keeps throwing this error!\n'}, {'title': 'Need VIM Mode', 'body': 'Need VIM Mode,Thanks\n'}, {'title': '[c#] No syntax colors in C# for usings out of namespace', 'body': "![2015-12-01 09_59_56-searchkey cs - rfq-hub - visual studio code](https://cloud.githubusercontent.com/assets/131878/11496467/5428b2b2-9812-11e5-8f87-30d22807d50e.png)\n\nIn the following code :\n\n``` csharp\nusing System.Linq;\n\nnamespace MyNamespaceIsFoo\n{\n    using System;\n\n    public class SearchKey\n    {\n    }\n}\n```\n\n`using System` get colored correctly but `using System.Linq` isn't.\n\n_Version 0.12.2_\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByILoQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[c#] Unexpected syntax color for nested namespace declarations', 'body': '![2015-12-01 10_08_59-searchkey cs - rfq-hub - visual studio code](https://cloud.githubusercontent.com/assets/131878/11496639/951fcd0e-9813-11e5-8ade-7a6ba1f353e8.png)\n\nNamespaces contained in namespace declarations don\'t get any syntax coloration.\n\nAdditionally while the "Light" theme show a color for the `namespace` keyword different from the namespace name, the "Dark" one doesn\'t.\n\n_Version 0.12.2_\n'}, {'title': "'install extension' should be more clear which extensions are already installed", 'body': "- I already have the HTMLHint extension already installed\n- press F1 and type 'ext install html'\n- I would expect to only see extensions that I can install. But also HtmlHint shows up. Pressing enter on it has no effect. There's a x button that shows it can be uninstalled, but I think this is not clear enough which of the entries can be installed and which not.\n\nEither make this it visually more prominent, or why not hiding already installed extensions? For looking at the installed extensions I can use 'show installed extensions'.\n"}, {'title': 'Provide ability to define workspace specific settings from outside the workspace', 'body': "Hi\n\nWhen I open a git-controlled folder, and possibly change some settings, then Code creates a .vscode directory directly inside that folder, and stores files such as settings.json or launch.json in it.\n\nThat folder either has to be checked in or .ignored, which is OK on repos I control, but not OK on forked repos I want to contribute to for instance, which needs to stay clean.\n\nCan't this data be stored in some Code own data folder?\n\nCheers\n"}, {'title': 'activate-power-mode', 'body': 'shall someone port this to code?\n![shake](https://cloud.githubusercontent.com/assets/688415/11440971/aadfae8e-9507-11e5-8aa0-0ecc87ca84b6.gif)\n'}, {'title': 'File-Version and Product-Version differ', 'body': 'I want to publish VSCode with **WSUS Package Publisher** and there it is possible check for the `file version` whether the update can be updated or not, but the file version remains every release at `0.34.1.0` only the `product version` is updated. With WSUS Package Publisher I can only check for file-version.\n\nSeen in [package.json](https://github.com/Microsoft/vscode/blob/3d93cc4fd5f1b61ee41066d689c57d7d78294a5d/package.json#L4)\n\nIs there a reason why the product version stays at the same level and is not the same as the product-version?\n'}, {'title': 'do not try to reconnect on real quit', 'body': 'I think we should start to look into a solution to this because we are now adding workarounds for this issue when running unit tests: The issue is that when the unit test is done, I quit the PH with process.exit(). This nicely closes the window but the debugger wants to reconnect right after and fails (not with an error message, but its weird to see the debug viewlet progress spinning for 2 seconds). \n\nWe also see this when you Cmd+Q the extension host to terminate the session.\n\nI am open to ideas what to do here, somehow the PH needs to signal back how it was terminated.\n'}, {'title': 'Run tasks in a particular working directory', 'body': "Suppose I have a complex project with several directories, each sporting its own `makefile`. I'd like to set up several tasks (e. g. build dir1, build dir2). However there's no working directory option to be set in VS Code, so I'm unable to complete the task. \n\nMaybe that's actually possible, then it's a documentation issue since I was unable to find a way by reading it. What do you suggest?\n"}, {'title': 'Go code completion of functions/methods should include parameters', 'body': 'Hi & thanks for an awesome editor effort! There is one thing still bugging me when coming from Sublime that I think could be added, at least as an option. Currently Go code completion for methods and functions stops after the name is expanded:\n\n```\nstrconv.AppendF<tab>  ->  strconv.AppendFloat\n```\n\nIn sublime, the behaviour would have been:\n\n```\nstrconv.AppendF<tab>  ->  strconv.AppendFloat(dst, f, fmt, prec, bitSize)\n```\n\n<img width="710" alt="screen shot 2015-12-01 at 12 44 56" src="https://cloud.githubusercontent.com/assets/125426/11499846/617e59be-9829-11e5-97dd-b8e0ddee6789.png">\n\nwith "dst" being selected for overwrite if I continued typing, and tab moving to the "f" parameter and so on. This is enormously helpful when you don\'t immediately remember the parameters or their order, as in this example that takes a lot of them... It\'s also great when you\'ve just refactored out the method and are going to call it from the original site, as the parameters are probably already named correctly.\n\nCurrently the workarounds are to type the parens manually, then go back and hit Ctrl-Space for the completion result again. However, it cuts off long parameter lists:\n\n<img width="1051" alt="screen shot 2015-12-01 at 12 40 05" src="https://cloud.githubusercontent.com/assets/125426/11499757/b27a5a08-9828-11e5-9882-ac17ef0d65e4.png">\n\nThe other option is Alt-F12 to preview the actual declaration, which works but is more work to parse than just getting the params immediately up front:\n\n<img width="1053" alt="screen shot 2015-12-01 at 12 38 39" src="https://cloud.githubusercontent.com/assets/125426/11499720/7a120332-9828-11e5-9fc4-345e95ab38e8.png">\n\nI could see that some prefer the current setup though, so this could be hidden behind a `go.completeWithParameters` option or something.\n'}, {'title': 'consider to make breakpoints know their debug engine', 'body': 'Today breakpoints are debug engine agnostic, that means, that Ticino always tries to install all of them in all debug engines.\nWe should consider to make them "know" their engine by storing the adapter ID in the breakpoint.\nThis would make it possible to show different breakpoints in the breakpoints view based on the current debug engine.\nOne way to get the information whether a breakpoint is understood by a engine is to use the response from the setBreakpoints call. \n'}, {'title': 'Flag to skip starting VSCode after installation', 'body': "Currently VSCode is automatically started after installing it with `/silent`. For scripted installations this is not an ideal situation. Also this prevents the possibility to set default settings after installation, since they'll be overwritten after VSCode is closed.\n\nThere should be an installer flag to avoid automatic startup of VSCode after installation.\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByKsAw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'isWatching confusion', 'body': 'Started to use vscode for a new project but confused about `isWatching` and what it does.\n\nHere\'s the `tasks.json` config I\'m currently using:\n![capture](https://cloud.githubusercontent.com/assets/199519/11501300/0eb1bda2-9801-11e5-811b-a4e4a34c6f11.PNG)\n\nInitially started with:\n\n```\n        {\n            "taskName": "watch",\n            "isWatching": true,\n            "args": ["--watch", "compiler/types.ts", "compiler/scanner.ts\'],\n            "problemMatcher": "$tsc"\n        },\n```\n\nBut then I try to run `watch` then `build-test`, the IDE complains that a task is running. \n\nCan someone explain the magic with `"problemMatcher": "$tsc-watch"` ?\nhttps://github.com/Microsoft/vscode/blob/f0dfc2374892759438a856dfb0bb748fa5f1ae0b/src/vs/workbench/parts/tasks/node/processRunnerSystem.ts#L267\n\nAnd how file watching works? \nhttps://github.com/Microsoft/vscode-filewatcher-windows/tree/master/FileWatcher\n\nIntuitively, would seem simpler if there were two modes of file watching `"external" | "managed"`\n\n``` :\n        {\n            "taskName": "watch-external",\n            "isWatching": "external",\n            "args": ["--watch", "compiler/types.ts", "compiler/scanner.ts\'],\n            "problemMatcher": "$tsc"\n        },\n        {\n            "taskName": "watch-managed",\n            "isWatching": "managed", // uses IDE file watching\n            "problemMatcher": "$tsc"\n        },\n```\n'}, {'title': 'Unable to start Code on Ubuntu', 'body': "I am running Ubuntu 15.04, without a GUI. My home directory is an NFS share mounted via automount, my account is via NIS.\nAfter installing Gnome I have been able to get the Code executable to run by double clicking on the program from a file explorer. But not from a shell, either on the console or a remote ssh.\nIf I run the Code program from my normal ssh login it runs waits a while and then exits, with no error message or anything.\nIf I run it with the sudo Code command it runs up and works fine, apart from the whole running as root issue :(.\nI suspect it's a file permission thing but am unable to track down what it could be.\n\nRegards\n\nJohn\n"}, {'title': "Request: Git features should be available when working on a project that's below the git repo root", 'body': "Howdy!\n\nDue to some unfortunate circumstances I'm currently stuck working on a project that's a subdirectory in part of a larger git repo. To open the entire repo directory would be a bit of a pain as well. I can work on the project just fine otherwise but none of the git features are currently available which is a disappointment.\n\nWhat's preventing Code from being able to use Git regardless of the opened project folder location (relative to the git root)?\n\nThe contrived example layout:\n\n```\n/projects/engine/ <--- root of the repo\n/projects/engine/tools/my_application/ <--- here sits a package.json, gulpfile.js, etc etc\n```\n"}, {'title': 'Report unverified breakpoints back to user', 'body': 'If a user sets a breakpoint in a typescript file and no source map exists, the breakpoint jumps to a strange place but still looks good.\n\nWhat should happen:\nThe breakpoint should not move because the backend cannot map the breakpoint to javascript. But instead the breakpoint should indicate that it could not be verified (and will never fire).\n\nThis is the associated issue in node-debug: Microsoft/vscode-node-debug#13\n'}, {'title': 'Cluster debugging is annoying because you have to create multiple instances of VSCode in order for it to work', 'body': 'whereas in node-inspector, you’d only have to create a new tab at attach it to the right port.\n'}, {'title': 'Debugger variables UI should highlight changed variable values', 'body': 'In Visual Studio, variables shown in the Locals window are marked with a red foreground color when they change between two debugger stop events:  \n\n![image](https://cloud.githubusercontent.com/assets/79405/11505040/28b83234-97fd-11e5-8617-62fc22bc7c15.png)\n\nIt would be great to also have this functionality in VS Code.  Even better if the debug adapter could send some kind of `isChanged` field back on individual variables when they are requested.\n\ncc @rkeithhill\n'}, {'title': '[shaderlab] Support Shaderlab Highlighting for .cginc (Include files)', 'body': 'Unity Cg Include files are essentially Shaderlab files that are pasted in when the shader is compiled. Right now highlighting for them is not supported in VS Code, the fix is to simply add ".cginc" to the package.json file in the shaderlab folder.\n'}, {'title': 'Exclude all files except for...', 'body': 'The files exclude allows you to set `true/false` values, but it doesn\'t seem to take them completely into account.\n\nFor example, I would like to hide **everything** except for the scripts folder. You might then assume that this would do this:\n\n```\n{\n    "files.exclude":\n    {\n        "**/*": true,\n        "**/Scripts": false\n    }\n}\n```\n\nIt does not do that, it just hides everything. In order to achieve this, you must list every file and directory except for the **Scripts** directory, and who knows how many directories there are and if a new directory/file gets added you then must edit the list to exclude those.\n\nIn the end, their should be a way to hide everything except for xxx.\n'}, {'title': 'Macro like keybindings', 'body': 'When creating keyboard shortcuts, it would be nice if you could pass an array of commands (to execute like a macro) that would run the commands in that order.\n\nSo take this for example:\n\n```\n{\n    "key": "ctrl+s",\n    "command": [\n        "editor.action.format",\n        "editor.action.trimTrailingWhitespace",\n        "workbench.action.files.save"\n    ],\n    "when": "editorTextFocus"\n}\n```\n\nIt would format the file, remove trailing white space then save the file.\n'}, {'title': 'Improve error message when no command is bound to a command contribution', 'body': 'When a command is defined in the package.json but no Command is registered for it then the error message should provide more guidance for how to fix the problem.\n\nsee #810 \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByM7rw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'cant update. Setup files corrupted', 'body': 'Code says there is an update.  when I click  update I get an error dialog saying "The setup files are corrupted.  Please obtain a new copy of the program"  What does that mean in practice? \n\nThe net result is that I am unable to update VS Code.  \n\nI\'ll uninstall and reinstall to see if that helps.\n'}, {'title': 'Replace quotes instead of wrapping them', 'body': 'When I have some code wrapped in double quotes like this:\n\n```\n"I am a string"\n```\n\nI then select the whole string (including the quotes) and press <kbd>\'</kbd> it then gives this:\n\n```\n\'"I am a string"\'\n```\n\nIt would be nice if it replaced the old quotes instead so it looks like this:\n\n```\n\'I am a string\'\n```\n\nThe same goes for when converting single quotes to double quotes.\n'}, {'title': 'User configurable maximum *.d.ts file-size', 'body': "I stumbled over an issue where really large TypeScript .d.ts-files were not parsed correctly in JavaScript mode.\n\nAfter some debugging I found out that the reason is a hard-coded file-size limit, where all characters in file-strings that are longer than 1,500,000 characters are getting replaced by space-characters and therefore getting ignored. This happens in **languages/typescript/common/project/snapshots.ts**:\n\n```\nexport function fromValue(value: string): ts.IScriptSnapshot {\n\n    var len = value.length;\n    if (len > 1500000) {\n        // everything except newline characters will be replaced\n        // with whitespace. this ensures a small syntax tree and\n        // no symbol information overkill. keeping the newline\n        // characters makes further processing (based on line and\n        // column) easy for us\n        value = value.replace(/[^\\r\\n]/g, ' ');\n    }\n\n    return {\n        getLength: () => len,\n        getText: value.substring.bind(value),\n        getChangeRange: () => null\n    };\n}\n```\n\nMy idea was to make this maximum file size user-configurable using the `workbench/node/UserSettings` class. However, this is not possible as `typeScriptWorker2` runs in the `common` environment and has therefore no access to the `fs` and `path` module.\n\nSo another suggestion is to just increase the maximum file size (or omit the check completely). I removed the length check and tested the editor with a *.d.ts-file with ~8,000,000 characters. I could not perceive any lags or unresponsiveness. The code completion still worked smoothly. Neither did the memory usage significantly increase.\n\nIn addition, the languages/typescript/common/lib/lib.es6.d.ts-file, which defines the standard language, itself is 1,470,724 characters long. So there are only ~30,000 characters left for future changes, which could lead to a bug that will probably be hard to track down.\n\nIs there a quick and easy method to make the maximum file-size user configurable?\nIf not, my suggestion is to increase the hard-coded maximum file-size to at least 10,000,000 characters.\nIn the future, when the JavaScript mode will also be moved to an extension, it would be sensible to make the maximum file size user configurable.\n"}, {'title': 'Add ability to specify whether new tab should get focus', 'body': "Currently if I open output channel, then focus moves to output channel. I don't want to it.\n"}, {'title': '[html] tag auto close on intellisense', 'body': 'HTML tags are not closing automatically and when i edit one tag the ending part is not being modified too.\n'}, {'title': 'DocumentFilter does not work for dockerfiles', 'body': 'We want our docker extension to support yml and docker files when they are named like ‘docker-compose-dev.yml’ or ‘dockerfile-dev’ etc. Using the DocumentFilter pattern `**/docker-compose*.yml` I was able to get this to work, however DocumentFilter `**/dockerfile*` does not work – I don’t even get syntax coloring.\n'}, {'title': 'ESLint: unexpected reserved word (ES6)', 'body': 'Hey there,\n\nI\'m having an issue targeting ES6 with VSCode. The ESLint integration does not recognize ES6 keywords such as `class`, `let`, `const`, etc. This renders ESLint useless since it won\'t report any other linting errors in the file. \n\nI have this `jsconfig.json` file in my workspace root: \n\n```\n{\n  "compilerOptions": {\n    "target": "ES6",\n    "module": "commonjs"\n  }\n}\n```\n\nI\'m using VS Code on OS X, and installed [Dirk Baeumer\'s ESLint extension](https://marketplace.visualstudio.com/items/dbaeumer.vscode-eslint) \n'}, {'title': "[json] VS Code suggests another property when a property's casing is not correct.", 'body': 'The error in following JSON against schema is: "resources\\properties\\osProfile\\computername" should be "computerName".\n\nBut VS Code shows two errors here:\n1. on "Microsoft.Compute/virtualMachines", error message is: Value is not an accepted Value. Valid values: ["Microsoft.Network/publicIPAddresses"]\n2. on “properties", error message is: Missing property "publicIpAllocationMethod"\n\nIt would be good if the error can be on the "computename" or at lease on "osProfile" about missing required property "computerName", ("computerName" is a required property according to schema)\n\nJSON example:\n\n{\n  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",\n  "contentVersion": "1.0.0.0",\n  "resources": [  \n    {\n      "apiVersion": "2015-06-15",\n      "type": "Microsoft.Compute/virtualMachines",\n      "name": "a",\n      "location": "West US",\n      "properties": {\n        "hardwareProfile": {\n          "vmSize": "Small"\n        },\n        "osProfile": {\n          "computername": "a",\n          "adminUsername": "a",\n          "adminPassword": "a"\n        },\n        "storageProfile": {\n          "imageReference": {\n            "publisher": "a",\n            "offer": "a",\n            "sku": "a",\n            "version": "latest"\n          },\n          "osDisk": {\n            "name": "osdisk",\n            "vhd": {\n              "uri": "[concat(\'http://\', \'b\',\'.blob.core.windows.net/\',variables(\'vmStorageAccountContainerName\'),\'/\',variables(\'OSDiskName\'),\'.vhd\')]"\n            },\n            "caching": "ReadWrite",\n            "createOption": "FromImage"\n          }\n        },\n        "networkProfile": {\n          "networkInterfaces": [\n            {\n              "id": "[resourceId(\'Microsoft.Network/networkInterfaces\',variables(\'nicName\'))]"\n            }\n          ]\n        },\n        "diagnosticsProfile": {\n          "bootDiagnostics": {\n             "enabled": "true",\n             "storageUri": "[concat(\'http://\',parameters(\'newStorageAccountName\'),\'.blob.core.windows.net\')]"\n          }\n        }\n      }\n    }\n  ]\n}\n'}, {'title': 'Update icon to match Visual Studio 2015 Update 1', 'body': '![screenshot 24](https://cloud.githubusercontent.com/assets/10532611/11511474/95c60e3e-9869-11e5-9724-6285851fd712.png)\n'}, {'title': 'How to open the lightbulb via shortcut?', 'body': 'I can\'t find a shortcut for opening the lightbulb / codeActions at the current cursor position. \nHow can I create such a shortcut?\n\nI tried to create a shortcut for `vscode.executeCodeActionProvider` by creating a custom keybinding like this:\n\n```\n[{ "key": "alt+enter", "command": "vscode.executeCodeActionProvider"}]\n```\n\nBut everytime I hit the shortcut I receive the warning\n\n> Running the contributed command:\'vscode.executeCodeActionProvider\' failed.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByPh5w==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Confusing error prevents mocha tests from running yet it still passes', 'body': "`mocha` was breaking, saying it can't find a module but still passing the test suite. If this happened on CI, it would not pick this up.\n\nRun tests in vscode:\n\n```\n[13:35:19] Using gulpfile ~/workspaces/forks/vscode/gulpfile.js\n[13:35:19] Starting 'test'...\nNo define call received from module vs/workbench/test/browser/parts/editor/resourceEditorInput.test. This might be a problem.\nNo define call received from module vs/workbench/test/browser/parts/editor/resourceEditorModel.test. This might be a problem.\n```\n\nOutput of `mocha`:\n\n```\n~/workspaces/forks/vscode @master\n$ mocha\nNo define call received from module vs/workbench/test/browser/parts/editor/resourceEditorInput.test. This might be a problem.\nNo define call received from module vs/workbench/test/browser/parts/editor/resourceEditorModel.test. This might be a problem.\n\n~/workspaces/forks/vscode @master\n$ echo $?\n0\n```\n\nThis started happening in a workspace with several changes but after switching branches back to master, it continued to happen. I fixed the issue by doing a `gulp clean`.\n"}, {'title': 'Azure Resource Manager (ARM) JSON Template is not validating :: Invalid Resource Type specified', 'body': "I've filed a new feedback item on the Azure Resource Manager (ARM) JSON Schema project page, although I believe this might have to do with how Visual Studio Code handles JSON schema validation.\n\nhttps://github.com/Azure/azure-resource-manager-schemas/issues/68\n\nI'm being told that `Microsoft.Storage/storageAccounts` isn't a valid top-level ARM Resource Type.\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n"}, {'title': 'Add extension point for auto-detecting tasks. ', 'body': 'According to [documentation](https://code.visualstudio.com/docs/editor/tasks#_autodetecting-gulp-grunt-and-jake-tasks) VS Code can autodetect tasks from within Gulp, Grunt and Jake files.\n\nIt would be nice if there was extension point to add support also for other type of build files - while I have created FAKE (F# Make) plugin I think it would be better to have more general solution allowing us just to extend existing functionality instead of duplicating it. \n'}, {'title': 'Intellisense help text is truncated', 'body': '<img width="555" alt="screen shot 2015-12-01 at 3 08 08 pm" src="https://cloud.githubusercontent.com/assets/466713/11517308/65011810-983d-11e5-9218-64ddc2d406a8.png">\n\nThe help text for the JSON property is truncated, so it ends with "Can be omitted if ......."\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n'}, {'title': 'vscode.Uri constructor takes no arguments', 'body': "I'm trying to create a new file programmatically using [openTextDocument](https://code.visualstudio.com/docs/extensionAPI/vscode-api#openTextDocument), but I'm having trouble providing it the proper URI. The documentation states that 2 schemes are supported (file and untitled). I'm trying to create a URI with `untitled` as its `scheme`, but the `Uri` constructor doesn't take any parameters and creating an empty URI and then assigning values to its properties individually doesn't do anything. \n\nDo you have any examples of this? It may be a personal problem, but I think it's a bug with `Uri`.\n"}, {'title': 'Not possible to implement WorkspaceSymbolProvider with only offset information?', 'body': "It appears that it's not really possible to implement WorkspaceSymbolProvider if all you have available from the underlying language analysis engine is offset information (vs. line/col).  \n\nThe vscode API requires that you provide line/col for every reference up front, which would require opening every file and mapping position information.  \n\nQuestions:\n1. Could the vscode API allow passing offset information instead of line/col in this case?\n2. Could the vscode API allow a callback that computes line/col (after providing a TextDocument) instead of providing it up-front, since the UX doesn't need this info until after the user chooses to navigate to a reference?\n3. Is there any way to work around this?\n"}, {'title': 'Extension API: vscode.workspace.findFiles() documentation needs to be updated', 'body': "The findFiles documentation has backslashes () instead of forward-slashes (/) in its example. I've found that using backslashes doesn't work as expected, but forward-slashes does. Forward-slashes would make sense (since only Windows uses backslashes in filepaths), but not sure if the documentation is wrong or the API is wrong.\n"}, {'title': 'blackbox/ignore modules for debugging in node', 'body': 'Hello:\n\nOften when I debug a node.js app, I want to toggle break on "All Exceptions".  In node, that means on **every require statement** it breaks during a `stat` check.\n\nIn most of my apps, that\'s quite a few require statements, and thus quite a few breaks!  The below should look familiar to other nodejs debugging devs!  Even if a _first pass_ as the feature was "Blackbox node internals", that would be a huge help!\n<img width="437" alt="screen shot 2015-12-01 at 5 34 10 pm" src="https://cloud.githubusercontent.com/assets/1003261/11518809/cf0e266c-9851-11e5-9db9-d43f2d643063.png">\n\nIf you\'d like to pass some pointers my way, I\'d consider working a PR for the basic ignore?\n'}, {'title': 'cannot connect to runtime process (timeout after 3000ms)', 'body': 'When creating Helloworld extension , got the following error message after F5 \ncannot connect to runtime process (timeout after 3000ms)\n'}, {'title': 'Support to search for non file editors in quick open', 'body': '**Here are the suggestions given when you press ctrl+p**\n![image](https://cloud.githubusercontent.com/assets/9221137/11519488/4ab3d15a-9860-11e5-9d05-96583934c4f3.png)\n\n**Here are the suggestions once you start typing Debug**\n![image](https://cloud.githubusercontent.com/assets/9221137/11519502/756d6258-9860-11e5-9d30-5e15f1785403.png)\n\nAs you can the suggestion for the Debug Console goes away once you start typing for it.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByS0Ng==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Failed to update from 0.10.2 to 0.10.3 on Windows 10', 'body': 'Attempting to update _code_ today gave me the following error during the installer run.\n\n```\n---------------------------\nError\n---------------------------\nC:\\Program Files (x86)\\Microsoft VS Code\\code.exe\n\n\n\nAn error occurred while trying to replace the existing file:\n\nDeleteFile failed; code 5.\n\nAccess is denied.\n\n\n\nClick Retry to try again, Ignore to skip this file (not recommended), or Abort to cancel installation.\n---------------------------\nAbort   Retry   Ignore   \n---------------------------\n```\n\nMy version of _code_ before upgrade.\n\n> Version 0.10.2\n> Commit 7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066\n> Date 2015-11-25T08:42:02.138Z\n> Shell 0.34.1\n> Renderer 45.0.2454.85\n> Node 4.1.1\n'}, {'title': "Input sources panel's position is wrong when begin to type", 'body': 'I use **Pinyin - Simplified** to input Chinese character .\n\n<img width="718" alt="Pinyin - Simplified Input Source" src="https://cloud.githubusercontent.com/assets/344283/11520152/a4c67190-98db-11e5-99ec-d1ed8b85226f.png">\n\nWhen I begin typing,  the input sources panel positioned unexpectedly.\n\n![input-panel-error](https://cloud.githubusercontent.com/assets/344283/11520226/64285f44-98dc-11e5-8854-4ef9b94d85cd.gif)\n\nIt should perform like  Sublime Text.\n\n![input-panel-correct](https://cloud.githubusercontent.com/assets/344283/11520263/cb3e7fec-98dc-11e5-8e36-c9098ec3930c.gif)\n'}, {'title': 'Merge conflict text decorations not getting properly cleared', 'body': 'Steps to reproduce:\n1. Find a merge conflict\n   ![image](https://cloud.githubusercontent.com/assets/9221137/11520395/a68862c2-9868-11e5-9296-026e4070ee08.png)\n2. Press backspace twice on the line containing `======`\n3. Undo the changes\n4. Repeat 2-3 a couple times\n\nThe text decorations will stack as shown below.\n![image](https://cloud.githubusercontent.com/assets/9221137/11520447/26f7fd14-9869-11e5-9eae-705852c134af.png)\n\nAlso once the text decorations are stacked you can spread the text decoration to multiple lines like so.\n![image](https://cloud.githubusercontent.com/assets/9221137/11520481/760ec14e-9869-11e5-9c42-971803fae09d.png)\n'}, {'title': "Format code doesn't work for C# code", 'body': "Format code doesn't work for C# code file on my mac, but it works for json file\n"}, {'title': 'Using shebangs in TypeScript are generating errors.', 'body': "I'm working on a Node script using TypeScript and the editor is generating this annoying erros.\nTS compiler is working fine, it compiles my script without problems :)\n\nHere's a screenshot of the error.\n\nShebang is present at the top of the file:\n# ! /usr/bin/env node\n\n![untitled](https://cloud.githubusercontent.com/assets/5412470/11522626/c20e1756-987e-11e5-84a7-4d70084d77df.png)\n"}, {'title': '[C#] syntax coloring breaks down with interpolated strings', 'body': 'Using VSCode 0.10.3\n\nThe C# syntax coloring breaks down when interpolated strings are involved.\n\nExample code\n\n```\nnamespace Test\n{\n    public class Foo\n    {\n        static string AddTableName(string suffix) => $"Bar{suffix}_ADD";\n\n        static string ModTableName(string suffix) => $"Bar{suffix}_MOD";\n\n        static string DelTableName(string suffix) => $"Bar{suffix}_DEL";\n    } \n}\n```\n\nVSCode screenshot\n\n![capture](https://cloud.githubusercontent.com/assets/563860/11524059/965e200e-991b-11e5-869b-2ec886350ee0.png)\n'}, {'title': 'Bug: Code + Git = deleted files', 'body': "Several times now I've had mysteriously deleted files when doing a git pull in a console while Visual Studio Code is running. I've seen this roughly since version 0.10. \n\nIt seems that when auto-merging, Git is able to delete a file but not able to write the merged file back if it's open in Code. However that is just a hypothesis. \n\nSeen the issue last with git version 1.9.5.msysgit.1 and Code 0.10.2.\n"}, {'title': '"source is not available" when i use http module in vscode plugin', 'body': " It throw “source is not available” error when I imported “http” module and use one API in my code ,anyone know what’s the problem?\n\nCode :\n                      http.request('http://www.google.com', function(response) {\n                            console.log(response.statusMessage)    });\nplugin sample code(http://mediasvc1nxn1n47jdwb5.blob.core.windows.net/guided-tours/testIntellisenseJavascript.zip) \n\nSteps for repro this problem:\n1.  Download the source and open it in VSCode\n2.  Run it and you will see an vscode instance \n3.  Change the language mode in “untitled-1” from “Plain Text” to “Javascript”\n![aa](https://cloud.githubusercontent.com/assets/15098626/11526687/37e5d638-9917-11e5-8e1c-4a983b8ef6ab.png)\n4.Type an character and it will trigger the method “”,then you will see the error.\n![bb](https://cloud.githubusercontent.com/assets/15098626/11526691/3cee574a-9917-11e5-9b7b-93b3a23d4cb0.png)\n"}, {'title': 'anyone can give me an sample to call web api in vscode plugin?', 'body': 'I want to call web api in my vscode plugin ,anyone can provide an sample for me?\n'}, {'title': 'Massive issue on Mac OSX with emoji', 'body': "I don't know what's going on, but when you insert an emoji, there is some odd repetition of markup happening. \n![emoji](https://cloud.githubusercontent.com/assets/13508/11526767/b3ec737e-98d4-11e5-984d-668210fdcdde.gif)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByV-gg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Wordwrap to end of line, not specific column', 'body': "If I'm not mistaken, the only option ATM for wordwraping is to set editor.wrappingColumn to a number of columns. This will apply to all files.\n\nI would suggest that instead, or as another option, wrapping can simply happen at the end of the current line, as defined by the current edition window width.\n\nThis is much more convenient one needs not adjust editor.wrappingColumn when switching from one screen to another or when resizing windows, etc\n\nRgds\n"}, {'title': 'Auto-save unsaved files', 'body': 'A very handy feature in Notepad++: one can just open a new editing tab, or multiple ones, cut and paste stuff, or scribble a few notes. \nUpon closing the application or shutting down the computer, instead of the usual "Do you want to save/not save/cancel" (as vsCode does), all those unsaved and unnamed files are simply saved to a temp location by the app, and restored in the same state upon next start.\n\nRgds\n'}, {'title': 'Add a pull with rebase action to the git viewlet', 'body': 'See also #150\n'}, {'title': 'Make it easy to submit a pull request/create and publish a local branch', 'body': ''}, {'title': 'Errors remain even when fixed when running in watch mode', 'body': 'I run webpack from Visual Studio Code (0.10.3). When an error is found by webpack it is found by Visual Studio Code (I can see it when I press Ctrl+Shift+M). \nBut when I correct the error I can still see it when I press Ctrl+Shift+M. I would like to dissapear from that list so I know which real errors that real.\nEven when I terminate the task and run it again the error remain when I press Ctrl+Shift+M.\nWhen I trigger the task normally (Ctrl+Shift+B) without watch then the errors dissapear after I fix them.\n\nThis is the task from tasks.json\n\n```\n        "args": [\n            "-d",\n            "--watch" \n        ],\n        "suppressTaskName": true,\n        "taskName": "webpack watch",\n        "showOutput": "silent",\n        "isWatching": true,\n            "problemMatcher": [{\n            "owner": "webpack",\n            "fileLocation": ["relative", "${workspaceRoot}"],\n            "severity": "warning", \n            "pattern": [\n                {\n                "regexp": "WARNING in (.*)",    \n                "file" : 1 \n                },\n                {\n                "regexp": "\\\\[(\\\\d+),\\\\s(\\\\d+)\\\\]:\\\\s(.*)",\n                "line":1,\n                "column": 2,\n                "message": 3\n                }           \n                ]\n            },\n            {\n            "owner": "webpack",\n            "fileLocation": ["relative", "${workspaceRoot}"],\n            "severity": "error", \n            "pattern": [\n                {\n                "regexp": "ERROR in (.*)",  \n                "file" : 1 \n                },\n                {\n                "regexp": "\\\\((\\\\d+),(\\\\d+)\\\\):(.*)",\n                "line":1,\n                "column": 2,\n                "message": 3\n                }           \n                ]\n            }]\n```\n'}, {'title': 'anyone know the code in "vscode source code" that implement javascript  intellisense in vscode?', 'body': 'I want to know how vscode implement JavaScript completions Intellisense, anyone can tell me which place I can to see in "vscode source code"? \n'}, {'title': 'Task progress does not stop turning', 'body': "- git clone https://github.com/Microsoft/vscode-extension-samples.git \n- cd to the new folder\n- `npm run install-all`\n- `code .`\n- in the debug viewlet, run 'Launch decorator sample'\n- note that the task progress is rotating\n- terminate the debug connection\n- task progress is still turning\n"}, {'title': 'Support to Run VSCode unit tests in a CI setup', 'body': ''}, {'title': 'Expose more Commands as API', 'body': ''}, {'title': 'Improve experience when user wants to read the README.md before installing an extension', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByXTVQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "configurationAttributes: allow for attributes to be shared between 'launch' and 'attach' requests", 'body': 'Today some debug adapters have to duplicate attribute schemas for their "launch" and "attach" requests.\nIt would be nice if attribute schemas could be easily shared between them (e.g. by contributing them \'one level up\') \n'}, {'title': 'Build should restart when typescript crashes and not die', 'body': "```\n*** Starting...\n/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:35645\n                throw e;\n                      ^\nTypeError: Cannot read property 'kind' of undefined\n    at Object.nodeIsDecorated (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:5708:21)\n    at emitExpressionForPropertyName (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:29648:28)\n    at emitComputedPropertyName (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:30183:17)\n    at emitJavaScriptWorker (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:34585:32)\n    at emitNodeWithoutSourceMap (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:34480:21)\n    at emitNodeWithSourceMap (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:29022:36)\n    at emitNodeConsideringCommentsOption (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:34472:21)\n    at emitNodeWithCommentsAndWithSourcemap (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:29036:21)\n    at emitIndexedAccess (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:30349:17)\n    at emitJavaScriptWorker (/Users/bpasero/Development/monaco/node_modules/gulp-tsb/lib/typescript/typescriptServices.js:34589:32)\n```\n"}, {'title': 'December Iteration Plan', 'body': "After a major effort like the November Beta release the team does need some well deserved _decompression_. During this decompression period we still want to be responsive to issues raised by the community, but we also want to work on debt reduction, tune our own development process, and do some explorations. This also means that we will not start working on new big rock features, so work on code folding will not start yet, but do not worry, it will come.\n\nFor more information about our development process please refer to the development process [page](https://github.com/Microsoft/vscode/wiki/Development-Process).\n\nTest Plan for this iteration: #1096\n## Dates\n\nThe goal is to make the December update available before the holidays\n- `stable` channel updated on Dec 18th\n- `insider` channel updated on Dec 14th. This enables community members to test a candidate build at the same time as we do. For more information on the insider channel refer to [Test Prereleases](https://code.visualstudio.com/Docs/supporting/FAQ#_how-can-i-test-prerelease-versions-of-vs-code)\n\nEnd game dates (we end an iteration with an [endgame](https://github.com/Microsoft/vscode/wiki/Development-Process))\n- Friday Dec 11th evening: freeze\n- Monday: test day, **update insider channel**\n- Tuesday: fix day\n- Wedneday: fix day\n- Thursday: Done, documentation, release notes update, bugs verified\n- Friday; **update the stable channel**\n## Plan Items\n\n**Performance**\nWe care a lot about performance...\n- [x] Add telemetry to measure startup time #707 @SofianHn\n  - We had a startup performance regression (#335) that required a [recovery build](https://github.com/Microsoft/vscode/releases/tag/0.10.3). We would like to avoid this in the future.\n- [x] Investigate into a fix for the slow loading of files with multi byte characters #94 \n  - [x] Investigate into a contribution for atom/node-oniguruma#45 @alexandrudima \n  - PR submitted atom/node-oniguruma#46\n\n**Feedback**\nIssues to address feedback from the community:\n- Editor: It is difficult to deal with keybindings when using non-US standard keyboard layout #713 \n  - [x] linux, windows @alexandrudima\n  - [x] mac @alexandrudima @jrieken (offered to look into the Mac implementation)\n- [x] API: Expose more editor commands as API #913 @jrieken\n  - [x] fix language feature commands\n  - [x]  documentation support and validation for parameter/return types\n- [x] API: Investigate deactivate() on shutdown call for an extension @alexandrudima \n  - Issues: #537, #567, #941, #948, Microsoft/vscode-go#26\n- [x] API: Support to contribute a JSON schema for a file pattern from an extension #489 @aeschli\n  - This enables that extensions like jshint or eslint can contribute a schema for JSON validation for their configuration files.\n  - It also enables to move more hard coded JSON schemas into the corresponding extensions\n  - Issue: Microsoft/vscode-jshint#4 \n- Deferred - API: Investigate into how we can provide more support for the VIM extensions @alexandrudima\n  - Issues: #300, #575, #561, #1066\n- [x] Gallery: Improve experience when user wants to read the README.md before installing an extension #914 @joaomoreno \n  - Issue: #727\n- [x] Gallery: Improve performance of fetching the available extensions @joaomoreno\n  - Issue: #1008\n- [x] Git: Support git integration when git folder is in a parent folder #863 @joaomoreno\n  - Issue: #863\n- [x] Git: Add a pull with rebase action to the git viewlet #907 @joaomoreno\n  - Issue: #150\n- [x] JS: Simplify using ES6 @jrieken\n  - Issue: #337\n- [x] JS Enable ES6 coloring by using the TypeScript textmate grammar @aeschli\n- [x] Debug: Improve presenting long text values inside the debug console @isidorn\n  - Issues: #503\n\n**Debt Items**\nThis section lists items to reduce our engineering debt:\n- [x] Improve the internals of the suggestion contribution #1006 #1079 @jrieken @joaomoreno \n- Deferred - Proposal for separating the vscode tools from the vscode API of the existing vscode module #970 @bpasero\n  - Currently the vscode node module combines the tools and the vscode API into one unit, we want to decouple the API from the used modules.\n- Blocked - Automated Mac signing @joaomoreno \n  - The builds we publish need to be signed and this process isn't as automated yet, as we would like.\n- [x] Increase test coverage @Microsoft/vscode \n- in progress - Debug: Provide a test suite for debugger adapters @weinand\n- in progress - Language services - Document the language services protocol @dbaeumer\n\n**Adoptions**\nWe continously have to adopt components which we require:\n- [x] Adopt electron version 0.34.5 #826 @bpasero \n  - We usually update to new version of electron. This version addresses atom/electron#3349\n- [x] Adopt [TypeScript 1.7](http://blogs.msdn.com/b/typescript/archive/2015/11/30/announcing-typescript-1-7.aspx) #836  @dbaeumer\n  - Investigate into using async/await in extensions\n- [x] Adopt the a newer version of OmniSharp @jrieken\n\n**Engineering Items**\nThis section lists several engineering/development items that the team identified:\n- [x] Run VSCode unit tests headless in a CI setup  @bpasero\n  - Issues #912 #779  \n- [x] Support a command line switch to launch Code without any extensions #708 @bpasero\n  - Simplify diagnosing issues caused by extensions.\n- [x] Move C# into a separate extension @jrieken\n  - Enable the ASP/Roslyn team to eventually take over this extension\n- [x] Extensions: warn the user when contributions conflict @isidorn \n- [x] Extension host debugging: change to a model where VS Code triggers reattach (instead of polling) #855 @weinand @bpasero @isidorn \n- [x] Support to define and preserve the zoom state of VS Code #291 @bpasero \n  - This was a real pain during the recent demos.\n- [x] Git: Make it easy to submit a pull request/create and publish a local branch @joaomoreno\n  - We do a lot of PRs and we want to simplify the flow.\n- [x] Debug: Provide npm modules for the debugger protocol (client, server) @weinand\n- [x] Complete the language service protocol and add more Code language features to the language service protocol @dbaeumer \n- Deferred - Debug: Provide function break point support in the UI and backend @isidorn @weinand\n  - Conditional break points is a stretch goal for December.\n- [x] What is the future of Send a smile @SofianHn \n\n**Explorations**\nWe also do some explorations:\n- [x] Investigate into Salsa (Microsoft/TypeScript#4789) adoption with the TypeScript team\n- In progress - Explore integrated TypeScript building/transpilation #973 @dbaeumer\n- Under discussion - Explore: Improved Intellisense support to show documentation for a  completion item #369  @joaomoreno \n- [x] Explore support for fuzzy searching in the UI #968\n## Bugs\n\nThis section includes bug queries for the vscode related repositories:\n- [vscode](https://github.com/Microsoft/vscode/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n- [vscode-vsce](https://github.com/Microsoft/vscode-vsce/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n- [vscode-node-debug](https://github.com/Microsoft/vscode-node-debug/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n- [vscode-mono-debug ](https://github.com/Microsoft/vscode-mono-debug/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n- [vscode-loader](https://github.com/Microsoft/vscode-loader/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n- [vscode-textmate](https://github.com/Microsoft/vscode-textmate/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n- [vscode-generator-code](https://github.com/Microsoft/vscode-generator-code/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n- [vscode-languageserver-node](https://github.com/Microsoft/vscode-generator-code/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+label%3Abug+milestone%3A%22Dec+2015%22+-label%3Aupstream+)\n"}, {'title': 'Support TS 1.7.3 watch patterns', 'body': ''}, {'title': "Don't activate dirty file indicator if the file state matches the previous written state", 'body': "Vscode show me I have unsaved changes:\n![image](https://cloud.githubusercontent.com/assets/91045/11530276/235e4580-9915-11e5-8e63-f6f2e39159b4.png)\n\nOk, before I saved it, I check md5 for this file.\n![image](https://cloud.githubusercontent.com/assets/91045/11530264/09f00110-9915-11e5-87eb-2566c3bb26b4.png)\n\nAfter save nothing changes.\n![image](https://cloud.githubusercontent.com/assets/91045/11530290/3775d4a2-9915-11e5-8efc-283ae880cce0.png)\n\nIt happens time to time and it's very annoying.\n"}, {'title': 'New release chews CPU and puts weird squiggles in JavaScript code', 'body': '![screen shot 2015-12-02 at 10 33 10 pm](https://cloud.githubusercontent.com/assets/406975/11530990/11334704-9945-11e5-8bc4-b3fa3323d91e.png)\n'}, {'title': "Cannot read property 'kind' of undefined", 'body': "I am not sure if this is a vscode issue or something with the integration with the language services in TypeScript.\n\nWhen I have a project running off of TypeScript 1.6.2, the editor behaves as normal.  When I upgrade the project to TypeScript 1.7.3, in the editor I constantly am getting `ERROR: Cannot read property 'kind' of undefined`.  I am not sure how to get a stack trace of these errors.  Reverting the project back to 1.6.2, doing an `npm install` fixes the issue.\n\n![vcode issue](https://cloud.githubusercontent.com/assets/1282577/11531090/2e0150ae-98f2-11e5-86b2-27ee3f53ddc6.gif)\n"}, {'title': '`editor.formatOnType` corrupt the code in typescript', 'body': '![gif](https://cloud.githubusercontent.com/assets/54468/11531393/929e77c2-9937-11e5-8161-d1cdbd1e29a5.gif)\n'}, {'title': '"Install Extensions" does not cache list', 'body': "Each time I do `Cmd-Shift-P` and `Install Extensions` it takes ages for the list of extensions to come up. Like literally a minute or more. \n\nAnd it doesn't seem to cache the result. It's like it has to download them each time, even if it's only a second or two after I last pulled it up.\n\nFrustrating - like using yum in Fedora used to be. \n\napt-get in Ubuntu would cache results and was always more perfomant and responsive, with a slight cost in synchronisation with the latest available packages. \n\nIt would work for me if it downloaded the latest package list when requested - and continued to download it even when it loses focus and closes. And then uses that cached list until the program is restarted, or does the same background load if it is opened again after ten minutes. \n\nThat way I have a delay the first time I open it, but I can keep working. At the moment I have to literally stop working _on_anything_ and wait for the list to load.\n"}, {'title': 'Not compatible with Breevy (auto-expander)', 'body': "Hi\n\nI am using the Breevy (from http://www.16software.com) text expander for many things, including documentation, and it doesn't go well with vsCode.\n\nThe expander has 2 operating modes, one where it simulates key presses, and one where it uses the clipboard, simulating a cut/paste operation to insert text in the current application.\n\nWorks fine for while on anything I've been using, however the shortcuts are not expanded inside vsCode\n\nI have tested with the Markdown editor and on a generic file, simply doing Ctrl+N to have a new edit window opened.\n\nWhat happens is that the abbreviation seems to be recognized, as it's removed from the screen, but the expanded text is not inserted instead. Tried to change the shortcuts to avoid special chars, such as $ or =, same results.\n\nThis on win 7, 64 bits. VsCode 0.10.2.\n\nCheers\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByYruQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'debugging coreclr applications on mac and linux [Question]', 'body': 'I am sorry if this has been asked before or if this is not the appropriate place to ask. Why vscode does not support coreclr based application debugging on mac and linux ? i know that pdb is not cross platform but roslyn can also generate ppdb which is xplat. Is their any blocker ?\n'}, {'title': "Can't save .htaccess file. EPERM error.", 'body': '![image](https://cloud.githubusercontent.com/assets/3386797/11532938/cc4fb744-98e5-11e5-9042-ba5bda9982a8.png)\n\nEven running vscode as administrator gives me the same error.\n'}, {'title': 'File/Text search cancellation fails', 'body': 'We should introduce real cancellation tokens for the search API instead of relying on the promise cancel which can easily get lost with all the chaining.\n- [x] fix throttled-delayer use to cancel a search when typing and revisit 100ms delay\n- [x] consider adopting a maxResults for quick open too\n'}, {'title': '[html] punctuation for tags can not be colored by syntax themes', 'body': 'I have tried several themes from the marketplace and created a few of my own. Punctuation on HTML files, such as `< > </> =`  cannot be colored by the theme.  When using a dark theme, for example, I always get the original default medium/light blue.\n\n![screen shot 2015-12-02 at 9 43 50 am](https://cloud.githubusercontent.com/assets/835148/11533734/36673204-98d9-11e5-9815-0aa954644c59.png)\n'}, {'title': 'Windows 10: focus is not put to window but taskbar blinks', 'body': 'This can happen when code is already running and you start it again from the command line: The process that is started is killed very early after sending a IPC message to the running instance and that running instance is then trying to restore/focus the last active window which often fails. \n\nRelated: https://github.com/atom/electron/issues/2867\n\nAs a **workaround** if you have access to the windows registry:\n- regedit.exe\n- find `ForegroundLockTimeout`\n- change its value to `10` (decimal)\n- restart windows\n'}, {'title': 'Search: include should have priority over exclude', 'body': 'To investigate: If an include pattern overlaps with an exclude pattern, the include one should win.\n'}, {'title': 'Windows: Cannot save hidden files', 'body': 'node.js returns a EPERM error when trying to save files with hidden attribute.\n'}, {'title': 'Footer bar: add number of selected lines', 'body': 'Footer shows:\n\n```\nLn 10, Col 11 (123 selected)\n```\n\nIt would be cool if it shows something like:\n\n```\nLn 10-21, Col 11 (123 chars, 12 lines selected)\n```\n\nRight?\n'}, {'title': 'Comparing a number variable to a string shows a warning even though assigning a string is perfectly fine', 'body': "Consider the following example:\n\n```\nfunction myFunc(myString) {\n    let myVar = Infinity;\n    myVar = myString.substring(1);\n    if(myVar == 'ello') {\n\n    }\n}\n```\n\nThis will show a warning at the `if` statement saying the `==`  operator can't be used to compare a string and a number. Aside from the discussion whether this should be done in the first place, I think we can agree that it's handled inconsistently here: if we can assign a string to a number just fine then comparing a string to a number should be okay as well (and certainly if we use `==` instead of `===`).\n"}, {'title': 'Custom debug adapter, console ignores output containing ANSI color codes', 'body': "I'm working on a custom debug adapter extension (a compiled executable, though not in Typescript, from Haxe source). I'm compiling my project and sending all STDOUT from the compile process to the debug console via [OutputEvents](https://github.com/Microsoft/vscode-mock-debug/blob/master/src/common/debugProtocol.d.ts#L103-L110). However, only some of the lines actually show up on the console. Many are ignored with no errors or other information.\n\nAre there any restrictions on what can be displayed? Character lengths? Special characters? Multi-line strings? I did once note that splitting a long multi-line string into single lines and sending multiple messages may have helped.\n\nHas anyone else experienced this problem? I'll try to put together a testcase extension and post it here later.\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBya3GQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "Source maps don't work when attaching to running code", 'body': 'Using this config:\n\n```\n"sourceMaps": true,\n"outDir": null\n```\n\nAn application structure that looks like this:\n\n```\ntest/\n    src/\n        some-test.js\n    dist/\n        some-test.js   \n```\n\n`dist/some-test.js` contains inlined source generated by Babel with "inline" option (as the documentation indicates vscode does not support separate map files, and indeed trying to use source maps with a seprate file just says "can\'t find source map"):\n\n```\n//#sourceMappingURL=data:application/json;base64,\neyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlvYy5qcy    JdLCJuYW1lcyI6W10sIm1hcHBpbmdzI\n```\n\n... etc\n\nStarting from command line:\n\n```\nmocha --debug-brk dist/some-test.js\n```\n\nAttaching with vscode and `sourceMaps: true`, it displays the actual file `dist/some-test.js` which contains inlined source, and breaks on the wrong line too.\n\nAttaching from vscode and `sourceMaps: false`, it displays the same file (as expected) and breaks on the correct line.\n\nIs there any way to make source maps work when attaching to a running process? \n'}, {'title': 'File watcher fails on Centos with GNOME', 'body': '1) Install centos 7\n2) Install gnome\n3) start x\n4) open vscode\n5) open a folder\n6) Try to use debug configuration icon to create launch.json\nEXPECTED: works\nACTUAL: fails to populate list of available debug adapters. \n'}, {'title': 'Cannot save file to root of drive', 'body': 'When I use Save As to save a file to the root of my drive, I get "Error: EPERM: operation not permitted, mkdir \'f:\\\'".\n'}, {'title': 'ITextFileService.save() should trigger more UI updating', 'body': 'Currently lots of UI update logic is hidden inside the save action\n'}, {'title': 'Use default Format options in Extensions', 'body': 'Hi, i writing an extension to VS Code, but i dont find any way to be able use VS Code Formating on my Strings (Like HTML and JS Format separatly). Any plans to add it?\n'}, {'title': 'Event when vscode quit.', 'body': 'is it there a way to get an event, like onDidCloseTextDocument, when vscode is about to quit?\n'}, {'title': '[lua] "goto" missing in Lua syntax highlighting', 'body': 'When using the goto keyword, it is not highlighted, nor is the label selected.\n\nExample:\n\n```\nfunction func()\n     if this == that then\n          do = this\n          goto continueHere\n     elseif this2 == that2 then\n          ::continueHere::\n     end\nend\n```\n\nIgnoring the terrible example itself, the problem occurs on line 4 where no highlighting will occur. Line 6, where the label is, highlights correctly, however.\n'}, {'title': 'Unusual Ctrl+Left_Arrow and Ctrl+Right_Arrow', 'body': "Pressing Ctrl+Left_Arrow and Ctrl+Right_Arrow moves the cursor to the next word.\n\nIf the cursor is farther right than the word and you press Ctrl+Left_Arrow, you move to the beginning of the word rather than to the end of the word like in VS, Notepad++, Sublime etc...\n\nEx: $=cursor\n\n`b('hello');$` and Ctrl+Left_Arrow becomes `b('$hello');` rather than `b('hello$');`\n\nIf this is intended to be like this, it would be nice to have a preference to change it.\n"}, {'title': 'Wildcards on activationEvents.workspaceContains?', 'body': 'Is there a way to use wildcards in `activationEvents.workspaceContains`? i mean, could i do something like:\n\n```\n"activationEvents": [    \n    "workspaceContains:*.config"\n  ],\n```\n'}, {'title': 'Windows: There should be an option to hide the menu bar.', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBygFQw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Creating new file with no file extension', 'body': 'Try to create a new file, name it "README", and set the type as "_._ all files". It will say the filename is invalid. Surrounding README in quotation marks is a workaround.\n'}, {'title': "Can't make text smaller", 'body': 'The text in Visual Studio Code is too large, and I want to make it smaller. However, the editor won\'t let me reduce the text beyond a certain size. I should be able to make the text smaller.\n\n<img width="298" alt="screen shot 2015-12-02 at 4 27 22 pm" src="https://cloud.githubusercontent.com/assets/466713/11548467/96f58110-9911-11e5-95e9-2d797b613728.png">\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n'}, {'title': 'vscode not killing child processes', 'body': 'when you do child_process.spawn, the new process is a child of Code, but when Code quit the children process do not, is this intended?\n'}, {'title': 'Remove name "Visual Studio" from vscode.d.ts', 'body': 'There is a comment on line 13 in [`src/vs/vscode.d.ts`](https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts) that refers to "Visual Studio Code". We should not use "Visual Studio" in the sources as the name is a customization done during the build (from [`product.json`](https://github.com/Microsoft/vscode/blob/master/product.json)). Suggest just using the term `Code`.\n'}, {'title': 'Select current line', 'body': "Basically I'd just like feature parity with Atom on this.\n\nfirst ctrl+l: should select the current focussed line\nrepeated ctrl+l should extend the selection to the end of the next line\n\nCurrently what happens:\nctrl+l: nothing\n\nI looked through the shortcut config and couldn't find anything to do this. I also was unable to find any action for this in the source code of vscode.\n"}, {'title': 'where i can found how to create javascript completionitems list ui in "VSCode source code"?', 'body': 'I want to develop an vscode plugin to change completionitem list UI ,anyone know where I can found the code that create the completionitem list UI in VSCode source?\n![mmm](https://cloud.githubusercontent.com/assets/15098626/11551192/f72d0486-99b1-11e5-9994-e841694cf2be.png)\n'}, {'title': "TypeError: Cannot read property '_acceptIsDirty' of undefined", 'body': 'Seeing this in latest, making the PH go crazy:\n\n![image](https://cloud.githubusercontent.com/assets/900690/11553945/bfbc16a4-9993-11e5-88c2-3e065e351963.png)\n'}, {'title': 'can not step in constructor, will will terminate node.exe', 'body': '![1](https://cloud.githubusercontent.com/assets/12825770/11554233/1d0aa7c0-99d1-11e5-99a0-218f55b1344a.GIF)\n![2](https://cloud.githubusercontent.com/assets/12825770/11554234/1d0e64c8-99d1-11e5-949b-1d3fa8ed1816.GIF)\n![3](https://cloud.githubusercontent.com/assets/12825770/11554235/1d177d42-99d1-11e5-958d-a91d2ee957fb.GIF)\n\nclass CA {\n    constructor(){  \n    }  \n}\n\nclass CB extends CA {\n    constructor(p){\n        super(p);\n    }\n}\n\nvar cb = null; // debugger pointer\n//cb = new CB(123); // can not step in, will terminate node.exe\ncb = new CB(); // step in, then follow line can step in, else can not\ncb = new CB(123); // can step in if above is step in\nconsole.log(cb); \n'}, {'title': 'Install extensions under proxy problem', 'body': 'I have set up my corporate proxy as explained on the documentation.\n\nBut every time that I try to download an extension with `ext install extensionname`, it fails with this error:\n\n![connection error](http://i.imgur.com/WI0oQWA.png)\n'}, {'title': 'Splitting lines in string', 'body': 'The feature splitting lines in IntelliJ and the other text editors from JetBrains would be nice to have.\n\nThe feature is to split a string into two lines by pressing the return key.\n\nhttps://www.jetbrains.com/idea/help/splitting-lines-with-string-literals.html\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByjzbw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'whether i can get all completionitem list include vscode itself provided in plugin api  "registerCompletionItemProvider"?', 'body': 'whether vscode can change the mechanism that make me can get all all completionitem list include vscode itself provided in the following method provideCompletionItems in my vscode plugin? where I can know how vscode deal with this in vscode source?\n\n```\nvscode.languages.registerCompletionItemProvider("javascript",\n{\n    resolveCompletionItem(item:vscode.CompletionItem, token: vscode.CancellationToken): vscode.CompletionItem \n    {\n    var completionItem1:vscode.CompletionItem = new vscode.CompletionItem("id");\n    completionItem1.detail = "aaa";\n    completionItem1.filterText = "aa";\n    completionItem1.insertText = "aa";\n    return completionItem1;\n    }\n    ,\n    provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): Promise<vscode.CompletionItem[]> \n    {\n        return new Promise((resolve, reject) => { \n        var completionItems:vscode.CompletionItem[] = [];\n\n        return resolve(completionItems) ;\n                    });\n    }\n})\n```\n'}, {'title': 'Intellisense for nodejs required packages.', 'body': "```\nvar express = require('express');\n\nvar app = express();\n\nvar port = process.env.PORT || 3000;\n\napp.listen(port);\n```\n\nIn the following code I required express but when I enter app and press crtl + space  it shows no suggestions. \n\nIt would be nice to have code assist for installed packages because nodejs developers always play with packages. \n"}, {'title': 'Emmet not working', 'body': 'I just updated visual studio code and as a result I see that emmet is not working now. in previous releases, emmet did work fine but since last 2 updates, emmet seems to be disabled or excluded altogehter from visual studio code. I searched for emmet extension on VS CODE repository but found nothing. my current version in 0.10.3. emmet also did not work in last release but before that all was good. I want emmet badly back!\n'}, {'title': 'Fonts become fuzzy after zooming and scrolling', 'body': '- Zoom once using Ctrl-+.\n- Click on a file to open it. Text in editor looks crisp.\n- Scroll down in editor and the font of the text goes fuzzy.\n'}, {'title': 'extensionHost debugging: reattach does not connect to debugServer', 'body': "If I have configured 'debugServer' in my launch config, the initial launch connects correctly to the debugServer, but reloading the extensionHost (which results in a 'reattach' in VSCode) does not connect to the debugServer but starts a normal debugServer instead.\n"}, {'title': "Can't build in Windows 10", 'body': 'I followed instructions from https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source , but the build is unsuccessful. \nI\'m using node v5.1.0, Visual Studio 2015 Community (I installed C++ build tools), MSBuild v14.0.24720.0\nnpm-debug.log file gives following error: \n\n```\n21173 verbose stack Error: oniguruma@5.1.1 install: `node-gyp rebuild`\n21173 verbose stack Exit status 1\n21173 verbose stack     at EventEmitter.<anonymous> (C:\\Program Files\\nodejs\\node_modules\\npm\\lib\\utils\\lifecycle.js:232:16)\n21173 verbose stack     at emitTwo (events.js:87:13)\n21173 verbose stack     at EventEmitter.emit (events.js:172:7)\n21173 verbose stack     at ChildProcess.<anonymous> (C:\\Program Files\\nodejs\\node_modules\\npm\\lib\\utils\\spawn.js:24:14)\n21173 verbose stack     at emitTwo (events.js:87:13)\n21173 verbose stack     at ChildProcess.emit (events.js:172:7)\n21173 verbose stack     at maybeClose (internal/child_process.js:818:16)\n21173 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)\n21174 verbose pkgid oniguruma@5.1.1\n21175 verbose cwd E:\\Github\\vscode\n21176 error Windows_NT 10.0.10586\n21177 error argv "C:\\\\Program Files\\\\nodejs\\\\node.exe" "C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js" "install"\n21178 error node v5.1.0\n21179 error npm  v3.3.12\n21180 error code ELIFECYCLE\n21181 error oniguruma@5.1.1 install: `node-gyp rebuild`\n21181 error Exit status 1\n21182 error Failed at the oniguruma@5.1.1 install script \'node-gyp rebuild\'.\n21182 error Make sure you have the latest version of node.js and npm installed.\n21182 error If you do, this is most likely a problem with the oniguruma package,\n21182 error not with npm itself.\n21182 error Tell the author that this fails on your system:\n21182 error     node-gyp rebuild\n21182 error You can get their info via:\n21182 error     npm owner ls oniguruma\n21182 error There is likely additional logging output above.\n21183 verbose exit [ 1, true ]\n```\n\nGit shell is giving following error:\n\n```\nC:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V120\\Microsoft.Cpp.Platform.targets(64,5): \nerror MSB8020: The build tools for v140 (Platform Toolset = \'v140\') cannot be found. \nTo build using the v140 build tools, please install v140 build tools.  Alternatively, you may upgrade to\n the current Visual Studio tools by selecting the Project menu or right-click the solution, and then \nselecting "Upgrade Solution...". \n[E:\\Github\\vscode\\node_modules\\vscode-textmate\\node_modules\\oniguruma\\build\\oniguruma.vcxproj]\n```\n\nHowever, as I mentioned earlier, my MSBuild version is 14.0.24720.0\nI tried following workarounds from \\* User/Repository#Num: nodejs/node-gyp#679 :\n- set environment variable GYP_MSVS_VERSION = 2015\n- tried to run ```scripts\\npm install --msvs_version=2015\n- update Visual Studio\n  But still without success.\n\nSteps to reproduce the bug:\n- install Visual Studio Community 2015\n- install node.js v5.1.0\n- clone repository using command ```git clone https://github.com/microsoft/vscode\n- go to repository `cd vscode`\n- install mocha gulp ```npm install -g mocha gulp\n- run install script `scripts\\npm install`\n'}, {'title': 'False positives in unhandled promise rejection', 'body': 'We have code that warns about unhandled rejected promises. Due to a bug in nodejs/electron we might produce false positives\n'}, {'title': 'Cmd+P broken', 'body': 'It only search recent, not on disk\n'}, {'title': '"Visual Studio Code has crashed" when editing an ES6 file', 'body': "VSCode crashes every time I open an ES6 file, after a few seconds. This started happening after the 0.10.3 update.\n\nHere's the output:\n\n```\n$ ./code --verbose\n\n### VSCode main.js ###\nc:\\Program Files (x86)\\Microsoft VS Code\\resources\\app { pathArguments: [],\n  programStart: 0,\n  workers: -1,\n  enablePerformance: false,\n  verboseLogging: true,\n  debugPluginHostPort: undefined,\n  debugBrkPluginHost: undefined,\n  logPluginHostCommunication: false,\n  firstrun: false,\n  openNewWindow: false,\n  openInSameWindow: false,\n  gotoLineMode: false,\n  pluginHomePath: undefined,\n  pluginDevelopmentPath: undefined,\n  pluginTestsPath: undefined }\nLifecycle#unload() 1\nIPC#vscode-workbenchLoaded\n\n<--- Last few GCs --->\n\n   11777 ms: Scavenge 715.1 (742.6) -> 715.1 (742.6) MB, 0.2 / 0 ms (+ 5.0 ms in 1 steps since last GC) [allocation failure] [incremental marking delaying mark-sweep].\n   11865 ms: Mark-sweep 715.1 (742.6) -> 714.3 (738.6) MB, 88.2 / 1 ms (+ 6.0 ms in 2 steps since start of marking, biggest step 5.0 ms) [last resort gc].\n   11919 ms: Mark-sweep 714.3 (738.6) -> 714.4 (737.6) MB, 54.1 / 1 ms [last resort gc].\n\n\n<--- JS stacktrace --->\n\n==== JS stack trace =========================================\n\nSecurity context: 12320E39 <String[7]: file://>\n    1: slowToString [buffer.js:344] [pc=0F1B78F8] (this=0F9F3DA5 <an Uint8Array with map 34609681>,encoding=123236C9 <String[4]: utf8>,start=0,end=3694146)\n    2: toString [buffer.js:~371] [pc=24AAD709] (this=0F9F3DA5 <an Uint8Array with map 34609681>)\n    3: arguments adaptor frame: 3->0\n    4: write [string_decoder.js:129] [pc=24A3D6FD] (this=0F9FD0C5 <an InternalDecoder with map 2C6981DD>...\n\n[VS Code]: render process crashed!\nLifecycle#window-all-closed\nLifecycle#before-quit\nApp#dispose: deleting running instance handle\n```\n"}, {'title': 'Extension should be able to contribute a task template and a user can pick a template', 'body': 'Currently the Configure Task Runner action generates a large task.json file with many different task configurations, that the user has to clean-up eventually, that is,  delete the configs that do not apply.\n\nInstead of generating one large file we should allow the user to select what kind of task that should be configured and then to only generate this one. This is similar to how we generate the launch configurations.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBym-SA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': "Does commands.executeCommands('editor.action.format') work properly?", 'body': 'In an extension, I tried to register an event listener for onDidSaveTextDocument() which would activate the format function, and save the file afterwards.\nUsing the code:\n\n``` typescript\ncommands.executeCommands(\'editor.action.format\').then(() => {\n commands.executeCommands(\'workbench.action.files.save\');\n});\n```\n\nThe problem is that the file gets saved, then formatted, but not saved afterwards. Using a timer for a 500ms delay after the format, before the next save, gives the wanted result. \n\nThe function inside of ".then((){   }" should not be called before the file is actually formatted, unless there is something else I don\'t understand.\n'}, {'title': 'Alternative fuzzy searching', 'body': "My single biggest favorite feature with Atom, that really keeps me from using vscode all that much, is atom's amazing fuzzy searching.\n\nThey have a package [fuzzaldrin](https://github.com/atom/fuzzaldrin) that does an amazing job at handling missed characters, and just getting to the result you need with ease.\n\nIs the vscode team open to extending how fuzzy searching works, perhaps adding an option to define an alternative scoring function, as part of a users profile?\n"}, {'title': "A string field that doesn't fit in the hover box messes up syntax highlighting", 'body': 'If during debugging you hover over an object whose representation does not fit in the hover box, it will cut it off and apply highlighting based on that. This causes an issue when you have a string: it will cut off the trailing quotes and mess up highlighting for subsequent fields.\n\n![image](https://cloud.githubusercontent.com/assets/2777107/11564100/91e57d58-99d7-11e5-83b8-23b07528b0fa.png)\n'}, {'title': 'Proposal for separating the vscode tools from the vscode API', 'body': 'Currently the vscode node module combines the tools and the vscode API into one unit, we want to decouple the API from the used modules.\n\nSupport that the vscode tools and its API can evolve separately.\n'}, {'title': 'Cannot validate the php file. The php program was not found.', 'body': 'I\'m geting the message when i open Visual Studio Code:\n\n" Cannot validate the php file. The php program was not found. Use the \'php.validate.executablePath\' setting to configure the location of \'php\' "\n'}, {'title': 'Make the Windows Mutex product.json specific', 'body': ''}, {'title': 'Explore: Integrated TypeScript building/transpilation', 'body': 'Make it simpler to setup TypeScript compilation.\nCan we make this incrementally?\n'}, {'title': 'ProblemMatcher encoding issue', 'body': 'I\'m working on a Windows 7 machine with german localization. My problem matcher works fine but german umlauts are not displayed properly.  (The first word of the shown warning should be "Rückgabewert") \nSee the picture.\n\n![vscodeproblemmatcherencodingissue](https://cloud.githubusercontent.com/assets/3448684/11566498/f889d152-99e2-11e5-9ec4-d880d43590aa.png)\n'}, {'title': 'Sass: auto-complete being shown with HTML tags right after semicolon', 'body': 'When editing a *.scss file (Sass/Compass), after typing a semicolon, the auto-complete list is automatically shown with HTML tags and attributes.\n\n<img width="596" alt="screen shot 2015-12-03 at 3 15 13 pm" src="https://cloud.githubusercontent.com/assets/3427344/11567918/af2bd206-99d0-11e5-9401-4879c1f5b4df.png">\n\nTyping semicolon + Enter (line break) actually results in an unexpected behavior...\n\n<img width="201" alt="screen shot 2015-12-03 at 3 11 52 pm" src="https://cloud.githubusercontent.com/assets/3427344/11567868/5a3b869c-99d0-11e5-8cdb-f99b7ade7103.png">\n'}, {'title': 'Eternally "Checking For Updates..." ', 'body': 'If you leave VS Code open long enough, the "Checking For Updates" menu eventually hangs in this state:\n\n![screen shot 2015-12-03 at 12 16 16 pm](https://cloud.githubusercontent.com/assets/1039369/11568017/efb9bb8a-99b7-11e5-8813-2a9c934e7daf.png)\n\nOnce in this state, you need to restart VS Code to get it to really check for updates.\n\nI\'m not sure what triggers this, but I\'ve seen this behavior since many versions ago. It may relate to locking and unlocking my Mac, or it may just be a matter of keeping VS Code open for a long time. I\'m not sure.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByqMjg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'VS Code should restore windows to their original spaces when possible', 'body': 'I have `"window.reopenFolders": "all"` set, and when I restart VS Code it correctly restores all the folders I had open. However, it restores them to the same OS X [space](https://support.apple.com/kb/PH18757?locale=en_US), as opposed to the spaces they were originally in.\r\n\r\nWhen VS Code is restarted it should try to restore the windows that were open to the spaces they were originally in.\r\n'}, {'title': 'Does Visual Studio Code support searching by Class in typescript?', 'body': 'I know you can search a file by class name in other IDE like webstorm. Does visual studio code support it or plan on supporting it?\n'}, {'title': 'Cannot define multiple commands in tasks.json', 'body': "Hi,\n\nI cannot find a way to define multiple tasks which executes different commands in the `.vscode/tasks.json` file of my project directory.\n\nFrom what I understood, I can only declare a single TaskConfiguration within this file. Am I wrong?\n\nTo make my problem more understandable, let's say I would like to define 3 tasks with their own set of arguments:\n- foo: `foo --arg`\n- bar1: `bar --arg 1`\n- bar2: `bar --arg 2`\n\nHow can I make `tasks.json` reflect this need?\n"}, {'title': 'Incorrect formatting for single parameter in arrow functions', 'body': "Using Format Code, `array.map(val=>val*2);` gets formatted to `array.map(val=> val * 2);`\n\nThere's no space between the parameter `val` and the `=>` after formatting.\n"}, {'title': 'Cannot use numpad keys in key shortcuts', 'body': 'Zooming in/out with `ctrl +` and `ctrl -` is not possible from the numpad, neither the numpad keys can be referenced specifically so to reconfigure the keymapping.\n'}, {'title': 'tsd for lodash and underscore stopped working', 'body': "When I'm installing tsd for underscore or lodash Visual Sudio Code sees the variable that I'm assigning the module to as it is of type any. It correctly interprets it's members parameters, but does not see the members of fist level. Example: \n\n![problem example](http://i.imgur.com/DNkewKs.gif)\n\nI'm installing my tsd with `tsd install lodash` or `tsd install underscore` command. It works correctly for other libraries like colors or node itself. It just have a problem with those two.\n\nWhat I found also is that when I open definition file it shows some errors in it.\n\n![errors](http://i.imgur.com/qZoi8VQ.png)\n\nI would not suspect Visual Studio Code if there will be problem with only one of those libraries, but this is not looking like a coincidence.\n"}, {'title': "Format code doesn't do the right thing with TSX/JSX", 'body': "When formatting the following snippet:\n\n```\nReactDOM.render(\n    <Router history={createHistory() }>\n        <Route path='/' component={App}>\n            <IndexRoute component={SplashView} />\n            <Route path='home' component={HomeView} />\n            <Route path='chat' component={ChatView} />\n            <Route path='/chat/:contact' component={ChatView} />\n        </Route>\n    </Router>,\n    document.getElementById('app')\n);\n```\n\nThe closing tags are not properly unindented, and outputs the following:\n\n```\nReactDOM.render(\n    <Router history={createHistory() }>\n        <Route path='/' component={App}>\n            <IndexRoute component={SplashView} />\n            <Route path='home' component={HomeView} />\n            <Route path='chat' component={ChatView} />\n            <Route path='/chat/:contact' component={ChatView} />\n            </Route>\n        </Router>,\n    document.getElementById('app')\n);\n```\n"}, {'title': "Format code doesn't do the right thing with TSX/JSX", 'body': "When formatting the following snippet:\n\n```\nReactDOM.render(\n    <Router history={createHistory() }>\n        <Route path='/' component={App}>\n            <IndexRoute component={SplashView} />\n            <Route path='home' component={HomeView} />\n            <Route path='chat' component={ChatView} />\n            <Route path='/chat/:contact' component={ChatView} />\n        </Route>\n    </Router>,\n    document.getElementById('app')\n);\n```\n\nThe closing tags are not properly unindented, and outputs the following:\n\n```\nReactDOM.render(\n    <Router history={createHistory() }>\n        <Route path='/' component={App}>\n            <IndexRoute component={SplashView} />\n            <Route path='home' component={HomeView} />\n            <Route path='chat' component={ChatView} />\n            <Route path='/chat/:contact' component={ChatView} />\n            </Route>\n        </Router>,\n    document.getElementById('app')\n);\n```\n\nNot the final `</Route>` tag. As far as I can tell, this happens with all JSX/TSX.\n"}, {'title': "Can't use Git command line when Visual Studio Code is open", 'body': "It looks like Visual Studio Code locks some files and I can't use the command line Git client when it is open. Closing Visual Studio Code resolves this issue. The index.lock file did not exist when I checked for it so it must be preventing the command line client from working in some other way. Here's the output from the command line client:\n\nUpdating ca3f107..3e957b8\nfatal: Unable to create 'C:/dev/GIS/.git/index.lock': File exists.\n\nIf no other git process is currently running, this probably means a\ngit process crashed in this repository earlier. Make sure no other git\nprocess is running and remove the file manually to continue.\n"}, {'title': 'cannot set terminal process group (-1) when trying to run a C# console application (Ubuntu)', 'body': "When Starting VSCode in a console I get the following Message\n\n```\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\n```\n\nVSCode runs well so far. But when I try to run a C# console-application the terminal window does not appear.\n\nAlso I cannot debug. If I hit F5 (after Building using a csproj-file) I get an errormessage that tells me:\n\n```\nerror while processing request '{_request}' (exception: {_exception})\n```\n\nI also get the same results when I start VSCode by double clicking.\n\nI run the following version on Ubuntu 14.04 64 Bit:\n\n```\nVersion 0.10.3\nCommit 783ecf841a2b21edca6d86853670cae89b4c244f\nDate 2015-11-26T14:10:14.207Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\n```\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBysa_g==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Markdown: Allow to open files inside the editor that are linked from the markdown', 'body': "The current behaviour of Code's Markdown previewer when clicking a relative link is actually a bit cryptic: it attempts to open the file relative to the user's home path with the system's application of choice. This will commonly lead to errors being dispatched because the file cannot be found.\n\nIf I have the following Markdown:\n\n```\nThe data types are documented [here](typings/foo.d.ts).\n```\n\nClicking the link will make my system attempt to open `/home/username/typings/foo.d.ts`.\n\nGiven that even [GitHub supports relative links to project files](https://help.github.com/articles/relative-links-in-readmes/), I strongly believe that they should be supported here. Such links should instead be relative to the markdown file's directory and open the linked file using the Code editor.\n"}, {'title': 'Menu needs to be aware of what is going on inside current active workbench', 'body': 'If the editor has no files open, choosing Find or Replace from the menu doesn\'t do anything and doesn\'t warn the user that this functionality requires an open file. A feedback to the user along the lines of "please open a file first" would point out the EBKAC more explicitly.\n\n(as an aside, I tried doing that in the hope I could find a global, project-wide replace - since a global search is there, I was hoping a global replace would have been there)\n'}, {'title': 'Reproducible crash when using "Close All"', 'body': 'I had a workspace open, in full-screen mode (`COMMAND + CONTROL + F`), and used the `Close All` function to close all open files in Visual Studio Code. The application crashed. I was able to reproduce this issue at least once.\n- Macbook Pro \n- Mac OS X 10.11.1\n\n```\nProcess:               Electron [16445]\nPath:                  /Applications/Visual Studio Code.app/Contents/MacOS/Electron\nIdentifier:            com.microsoft.VSCode\nVersion:               0.10.3 (0.10.3)\nCode Type:             X86-64 (Native)\nParent Process:        ??? [1]\nResponsible:           Electron [16445]\nUser ID:               501\n\nDate/Time:             2015-12-03 15:28:57.274 -0800\nOS Version:            Mac OS X 10.11.1 (15B42)\nReport Version:        11\nAnonymous UUID:        CB56E543-A420-B09D-CDE8-4F3A9A3A17ED\n\nSleep/Wake UUID:       50F5C036-907A-467D-897E-D22CCD75C516\n\nTime Awake Since Boot: 100000 seconds\nTime Since Wake:       21000 seconds\n\nSystem Integrity Protection: enabled\n\nCrashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x000007fba22c7728\n\nVM Regions Near 0x7fba22c7728:\n    Memory Tag 255         000007cd53400000-000007cd53500000 [ 1024K] rw-/rwx SM=PRV  \n--> \n    Memory Tag 255         00000e34f8600000-00000e34f8700000 [ 1024K] rw-/rwx SM=PRV  \n\nApplication Specific Information:\nobjc_msgSend() selector name: windowDidResize:\n\n\nGlobal Trace Buffer (reverse chronological seconds):\n55.478135    CFNetwork                  0x00007fff8c866163 TCP Conn 0x7fba22c71170 SSL Handshake DONE\n55.992941    CFNetwork                  0x00007fff8c86603f TCP Conn 0x7fba22c71170 starting SSL negotiation\n55.993234    CFNetwork                  0x00007fff8c864a0f TCP Conn 0x7fba22c71170 complete. fd: 53, err: 0\n55.993407    CFNetwork                  0x00007fff8c8f31ad TCP Conn 0x7fba22c71170 event 1. err: 0\n56.392265    CFNetwork                  0x00007fff8c863cdf TCP Conn 0x7fba22c71170 started\n56.457392    CFNetwork                  0x00007fff8c82789e Creating default cookie storage with process/bundle identifier\n56.457394    CFNetwork                  0x00007fff8c827836 Faulting in CFHTTPCookieStorage singleton\n56.457433    CFNetwork                  0x00007fff8c8276c5 Faulting in NSHTTPCookieStorage singleton\n\nThread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread\n0   libobjc.A.dylib                 0x00007fff9061ad5d objc_msgSend + 29\n1   com.apple.CoreFoundation        0x00007fff8d97ac2f ___CFXRegistrationPost_block_invoke + 63\n2   com.apple.CoreFoundation        0x00007fff8d97aba7 _CFXRegistrationPost + 407\n3   com.apple.CoreFoundation        0x00007fff8d97a912 ___CFXNotificationPost_block_invoke + 50\n4   com.apple.CoreFoundation        0x00007fff8d9376d2 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1922\n5   com.apple.CoreFoundation        0x00007fff8d936925 _CFXNotificationPost + 693\n6   com.apple.Foundation            0x00007fff84fcc0fa -[NSNotificationCenter postNotificationName:object:userInfo:] + 66\n7   com.apple.AppKit                0x00007fff8298971c -[NSWindow _setFrameCommon:display:stashSize:] + 3477\n8   com.apple.AppKit                0x00007fff82988979 -[NSWindow _setFrame:display:allowImplicitAnimation:stashSize:] + 222\n9   com.apple.AppKit                0x00007fff82988894 -[NSWindow setFrame:display:] + 67\n10  com.apple.AppKit                0x00007fff82af6762 __25-[NSWindow setStyleMask:]_block_invoke + 2241\n11  com.apple.AppKit                0x00007fff829f1f05 NSPerformVisuallyAtomicChange + 147\n12  com.apple.AppKit                0x00007fff82af5e56 -[NSWindow setStyleMask:] + 222\n13  com.apple.AppKit                0x00007fff82bf569f -[NSWindow _didExitFullScreen:] + 247\n14  com.apple.AppKit                0x00007fff831c5489 __123-[_NSWindowFullScreenTransition _performExitFullScreenModeForWindow:windowController:options:customWindows:doKitAnimation:]_block_invoke_2 + 397\n15  com.apple.AppKit                0x00007fff831c51ec __123-[_NSWindowFullScreenTransition _performExitFullScreenModeForWindow:windowController:options:customWindows:doKitAnimation:]_block_invoke + 1300\n16  com.apple.AppKit                0x00007fff830e0a9f __177-[NSDockConnection(FullScreenMessages) sendFullScreenExitForTransition:synchronous:window:exitForClose:backgroundWindows:participatingWindows:customAnimation:completionHandler:]_block_invoke + 60\n17  libxpc.dylib                    0x00007fff84b5a74b _xpc_connection_reply_callout + 26\n18  libxpc.dylib                    0x00007fff84b5a6ec _xpc_connection_call_reply + 36\n19  libdispatch.dylib               0x00007fff980c53c3 _dispatch_client_callout + 8\n20  libdispatch.dylib               0x00007fff980d8c1b _dispatch_main_queue_callback_4CF + 1685\n21  com.apple.CoreFoundation        0x00007fff8d9a4999 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\n22  com.apple.CoreFoundation        0x00007fff8d9639cd __CFRunLoopRun + 1949\n23  com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n24  com.apple.HIToolbox             0x00007fff8d3b7d55 RunCurrentEventLoopInMode + 235\n25  com.apple.HIToolbox             0x00007fff8d3b7b8f ReceiveNextEventCommon + 432\n26  com.apple.HIToolbox             0x00007fff8d3b79cf _BlockUntilNextEventMatchingListInModeWithFilter + 71\n27  com.apple.AppKit                0x00007fff828b7d96 _DPSNextEvent + 1067\n28  com.apple.AppKit                0x00007fff828b71c5 -[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454\n29  com.apple.AppKit                0x00007fff828abd28 -[NSApplication run] + 682\n30  com.github.electron.framework   0x000000010e99a051 0x10e826000 + 1523793\n31  com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n32  com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n33  com.github.electron.framework   0x000000010ee8f84b 0x10e826000 + 6723659\n34  com.github.electron.framework   0x000000010ee8f785 0x10e826000 + 6723461\n35  com.github.electron.framework   0x000000010ee91c32 0x10e826000 + 6732850\n36  com.github.electron.framework   0x000000010ee8badf 0x10e826000 + 6707935\n37  com.github.electron.framework   0x000000010ee159dc 0x10e826000 + 6224348\n38  com.github.electron.framework   0x000000010ee15036 0x10e826000 + 6221878\n39  com.github.electron.framework   0x000000010e82818d AtomMain + 77\n40  com.microsoft.VSCode            0x000000010e81aeea main + 58\n41  libdyld.dylib                   0x00007fff87c825ad start + 1\n\nThread 1:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff9789c0a2 kevent_qos + 10\n1   libdispatch.dylib               0x00007fff980cb11d _dispatch_mgr_invoke + 216\n2   libdispatch.dylib               0x00007fff980cad85 _dispatch_mgr_thread + 52\n\nThread 2:: NetworkConfigWatcher\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.apple.Foundation            0x00007fff84fe9f59 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 270\n6   com.github.electron.framework   0x000000010e999e94 0x10e826000 + 1523348\n7   com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n8   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n9   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n10  com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n11  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n12  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n13  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n14  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 3:: DnsConfigService\n0   libsystem_kernel.dylib          0x00007fff9789c072 kevent + 10\n1   com.github.electron.framework   0x000000010f4a4ae5 0x10e826000 + 13101797\n2   com.github.electron.framework   0x000000010f4a255d 0x10e826000 + 13092189\n3   com.github.electron.framework   0x000000010e998b27 0x10e826000 + 1518375\n4   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n5   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n6   com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n7   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n8   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n9   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n10  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 4:: CrShutdownDetector\n0   libsystem_kernel.dylib          0x00007fff9789c50a read + 10\n1   com.github.electron.framework   0x000000010e89cb4f 0x10e826000 + 486223\n2   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n3   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n4   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n5   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 5:: WorkerPool/26115\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e85773 _pthread_cond_wait + 821\n2   com.github.electron.framework   0x000000010e9df5fb 0x10e826000 + 1807867\n3   com.github.electron.framework   0x000000010e9f19fc 0x10e826000 + 1882620\n4   com.github.electron.framework   0x000000010e9f1eb4 0x10e826000 + 1883828\n5   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n6   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 6:: Chrome_DBThread\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.github.electron.framework   0x000000010e999c0f 0x10e826000 + 1522703\n6   com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n7   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n8   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n9   com.github.electron.framework   0x000000010ee97a38 0x10e826000 + 6756920\n10  com.github.electron.framework   0x000000010ee97d86 0x10e826000 + 6757766\n11  com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n12  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n13  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n14  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n15  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 7:: Chrome_FileThread\n0   libsystem_kernel.dylib          0x00007fff9789c072 kevent + 10\n1   com.github.electron.framework   0x000000010f4a4ae5 0x10e826000 + 13101797\n2   com.github.electron.framework   0x000000010f4a255d 0x10e826000 + 13092189\n3   com.github.electron.framework   0x000000010e998b27 0x10e826000 + 1518375\n4   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n5   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n6   com.github.electron.framework   0x000000010ee97ab8 0x10e826000 + 6757048\n7   com.github.electron.framework   0x000000010ee97d96 0x10e826000 + 6757782\n8   com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n9   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n10  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n11  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n12  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 8:: Chrome_FileUserBlockingThread\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.github.electron.framework   0x000000010e999c0f 0x10e826000 + 1522703\n6   com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n7   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n8   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n9   com.github.electron.framework   0x000000010ee97b38 0x10e826000 + 6757176\n10  com.github.electron.framework   0x000000010ee97da3 0x10e826000 + 6757795\n11  com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n12  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n13  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n14  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n15  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 9:: Chrome_ProcessLauncherThread\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.github.electron.framework   0x000000010e999c0f 0x10e826000 + 1522703\n6   com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n7   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n8   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n9   com.github.electron.framework   0x000000010ee97bb8 0x10e826000 + 6757304\n10  com.github.electron.framework   0x000000010ee97db0 0x10e826000 + 6757808\n11  com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n12  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n13  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n14  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n15  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 10:: Chrome_CacheThread\n0   libsystem_kernel.dylib          0x00007fff9789c072 kevent + 10\n1   com.github.electron.framework   0x000000010f4a4ae5 0x10e826000 + 13101797\n2   com.github.electron.framework   0x000000010f4a255d 0x10e826000 + 13092189\n3   com.github.electron.framework   0x000000010e998b0f 0x10e826000 + 1518351\n4   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n5   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n6   com.github.electron.framework   0x000000010ee97c38 0x10e826000 + 6757432\n7   com.github.electron.framework   0x000000010ee97dbd 0x10e826000 + 6757821\n8   com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n9   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n10  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n11  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n12  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 11:: Chrome_IOThread\n0   libsystem_kernel.dylib          0x00007fff9789c072 kevent + 10\n1   com.github.electron.framework   0x000000010f4a4ae5 0x10e826000 + 13101797\n2   com.github.electron.framework   0x000000010f4a255d 0x10e826000 + 13092189\n3   com.github.electron.framework   0x000000010e998b0f 0x10e826000 + 1518351\n4   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n5   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n6   com.github.electron.framework   0x000000010ee97cb8 0x10e826000 + 6757560\n7   com.github.electron.framework   0x000000010ee97dca 0x10e826000 + 6757834\n8   com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n9   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n10  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n11  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n12  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 12:: IndexedDB\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.github.electron.framework   0x000000010e999c0f 0x10e826000 + 1522703\n6   com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n7   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n8   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n9   com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n10  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n11  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n12  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n13  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 13:: CompositorTileWorker1/43779\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   com.github.electron.framework   0x000000010ece28d9 0x10e826000 + 4966617\n3   com.github.electron.framework   0x000000010e9ef71d 0x10e826000 + 1873693\n4   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n5   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n6   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n7   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 14:: AudioThread\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.github.electron.framework   0x000000010e999c0f 0x10e826000 + 1522703\n6   com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n7   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n8   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n9   com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n10  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n11  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n12  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n13  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 15:\n0   libsystem_kernel.dylib          0x00007fff97895cd2 semaphore_wait_trap + 10\n1   libnode.dylib                   0x00000001128bcc80 uv_sem_wait + 16\n2   com.github.electron.framework   0x000000010e8e8130 atom::NodeBindings::EmbedThreadRunner(void*) + 48\n3   libnode.dylib                   0x00000001128bc9a9 0x112773000 + 1350057\n4   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n5   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n6   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 16:: BrowserBlockingWorker1/56111\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   com.github.electron.framework   0x000000010e9ed4bb 0x10e826000 + 1864891\n3   com.github.electron.framework   0x000000010e9eca4e 0x10e826000 + 1862222\n4   com.github.electron.framework   0x000000010e9ef71d 0x10e826000 + 1873693\n5   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n6   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 17:: NetworkConfigWatcher\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.apple.Foundation            0x00007fff84fe9f59 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 270\n6   com.github.electron.framework   0x000000010e999e94 0x10e826000 + 1523348\n7   com.github.electron.framework   0x000000010e99966c 0x10e826000 + 1521260\n8   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n9   com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n10  com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n11  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n12  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n13  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n14  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 18:\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   libnode.dylib                   0x00000001128bcd49 uv_cond_wait + 9\n3   libnode.dylib                   0x00000001128b1f93 0x112773000 + 1306515\n4   libnode.dylib                   0x00000001128bc9a9 0x112773000 + 1350057\n5   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n6   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n7   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 19:\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   libnode.dylib                   0x00000001128bcd49 uv_cond_wait + 9\n3   libnode.dylib                   0x00000001128b1f93 0x112773000 + 1306515\n4   libnode.dylib                   0x00000001128bc9a9 0x112773000 + 1350057\n5   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n6   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n7   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 20:\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   libnode.dylib                   0x00000001128bcd49 uv_cond_wait + 9\n3   libnode.dylib                   0x00000001128b1f93 0x112773000 + 1306515\n4   libnode.dylib                   0x00000001128bc9a9 0x112773000 + 1350057\n5   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n6   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n7   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 21:\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   libnode.dylib                   0x00000001128bcd49 uv_cond_wait + 9\n3   libnode.dylib                   0x00000001128b1f93 0x112773000 + 1306515\n4   libnode.dylib                   0x00000001128bc9a9 0x112773000 + 1350057\n5   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n6   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n7   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 22:: com.apple.NSEventThread\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.apple.AppKit                0x00007fff82a0dd49 _NSEventThread + 149\n6   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 23:\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.apple.CoreFoundation        0x00007fff8d9a4961 CFRunLoopRun + 97\n6   libnode.dylib                   0x00000001128c0406 0x112773000 + 1364998\n7   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n8   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n9   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 24:: WorkerPool/13579\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e85773 _pthread_cond_wait + 821\n2   com.github.electron.framework   0x000000010e9df5fb 0x10e826000 + 1807867\n3   com.github.electron.framework   0x000000010e9f19fc 0x10e826000 + 1882620\n4   com.github.electron.framework   0x000000010e9f1eb4 0x10e826000 + 1883828\n5   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n6   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 25:: handle-watcher-thread\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   com.github.electron.framework   0x000000010fcefb48 0x10e826000 + 21797704\n3   com.github.electron.framework   0x000000010fcdbea9 0x10e826000 + 21716649\n4   com.github.electron.framework   0x000000010fcdc186 0x10e826000 + 21717382\n5   com.github.electron.framework   0x000000010fcd3826 0x10e826000 + 21682214\n6   com.github.electron.framework   0x000000010fcb9e12 0x10e826000 + 21577234\n7   com.github.electron.framework   0x000000010fcb9903 0x10e826000 + 21575939\n8   com.github.electron.framework   0x000000010fcb988a 0x10e826000 + 21575818\n9   com.github.electron.framework   0x000000010e9d01d3 0x10e826000 + 1745363\n10  com.github.electron.framework   0x000000010e9c05cd 0x10e826000 + 1680845\n11  com.github.electron.framework   0x000000010e9f0142 0x10e826000 + 1876290\n12  com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n13  libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n14  libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n15  libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 26:: WorkerPool/68875\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e85773 _pthread_cond_wait + 821\n2   com.github.electron.framework   0x000000010e9df5fb 0x10e826000 + 1807867\n3   com.github.electron.framework   0x000000010e9f19fc 0x10e826000 + 1882620\n4   com.github.electron.framework   0x000000010e9f1eb4 0x10e826000 + 1883828\n5   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n6   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 27:: BrowserBlockingWorker2/75555\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   com.github.electron.framework   0x000000010e9ed4bb 0x10e826000 + 1864891\n3   com.github.electron.framework   0x000000010e9eca4e 0x10e826000 + 1862222\n4   com.github.electron.framework   0x000000010e9ef71d 0x10e826000 + 1873693\n5   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n6   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 28:: BrowserBlockingWorker3/86035\n0   libsystem_kernel.dylib          0x00007fff9789af5e __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff89e8573d _pthread_cond_wait + 767\n2   com.github.electron.framework   0x000000010e9ed4bb 0x10e826000 + 1864891\n3   com.github.electron.framework   0x000000010e9eca4e 0x10e826000 + 1862222\n4   com.github.electron.framework   0x000000010e9ef71d 0x10e826000 + 1873693\n5   com.github.electron.framework   0x000000010e9ec33b 0x10e826000 + 1860411\n6   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 29:: com.apple.NSURLConnectionLoader\n0   libsystem_kernel.dylib          0x00007fff97895c96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff978950d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8d9642b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8d96377c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8d962fc8 CFRunLoopRunSpecific + 296\n5   com.apple.CFNetwork             0x00007fff8c82ad6d +[NSURLConnection(Loader) _resourceLoadLoop:] + 412\n6   com.apple.Foundation            0x00007fff84ffaee4 __NSThread__start__ + 1351\n7   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n8   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n9   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 30:: com.apple.CFSocket.private\n0   libsystem_kernel.dylib          0x00007fff9789b222 __select + 10\n1   com.apple.CoreFoundation        0x00007fff8d9a14aa __CFSocketManager + 762\n2   libsystem_pthread.dylib         0x00007fff89e849b1 _pthread_body + 131\n3   libsystem_pthread.dylib         0x00007fff89e8492e _pthread_start + 168\n4   libsystem_pthread.dylib         0x00007fff89e82385 thread_start + 13\n\nThread 31:\n0   libsystem_kernel.dylib          0x00007fff9789b78a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff89e8458c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff89e82375 start_wqthread + 13\n\nThread 32:\n0   libsystem_kernel.dylib          0x00007fff9789b78a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff89e8458c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff89e82375 start_wqthread + 13\n\nThread 33:\n0   libsystem_kernel.dylib          0x00007fff9789b78a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff89e8458c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff89e82375 start_wqthread + 13\n\nThread 34:\n0   libsystem_kernel.dylib          0x00007fff9789b78a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff89e8458c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff89e82375 start_wqthread + 13\n\nThread 35:\n0   libsystem_kernel.dylib          0x00007fff9789b78a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff89e8458c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff89e82375 start_wqthread + 13\n\nThread 0 crashed with X86 Thread State (64-bit):\n  rax: 0x00007fba22c68420  rbx: 0x00007fff513e2dd8  rcx: 0x00007fba22c4a498  rdx: 0x00007fba22d8f0a0\n  rdi: 0x00007fba22c68420  rsi: 0x00007fff832de739  rbp: 0x00007fff513e2da0  rsp: 0x00007fff513e2d98\n   r8: 0x00000000000003ff   r9: 0x00007fba22c4f410  r10: 0x00007fff832de739  r11: 0x000007fba22c7710\n  r12: 0x00007fba22d8f0a0  r13: 0x00007fba22c4f410  r14: 0x00007fba22c4a490  r15: 0x0000000000000000\n  rip: 0x00007fff9061ad5d  rfl: 0x0000000000010202  cr2: 0x000007fba22c7728\n\nLogical CPU:     1\nError Code:      0x00000004\nTrap Number:     14\n\n\nBinary Images:\n       0x10e81a000 -        0x10e81aff7 +com.microsoft.VSCode (0.10.3 - 0.10.3) <074B4136-D76D-3961-89C9-63A495167516> /Applications/Visual Studio Code.app/Contents/MacOS/Electron\n       0x10e826000 -        0x111e52f97 +com.github.electron.framework (0) <6AE465ED-B1E7-3484-9CE0-AFC35A71CBFF> /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework\n       0x112633000 -        0x112648ff7 +com.github.Squirrel (1.0 - 1) <C39DE518-902E-3EBE-B1A6-B4E7AE668521> /Applications/Visual Studio Code.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel\n       0x112666000 -        0x1126c9ff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Applications/Visual Studio Code.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa\n       0x112743000 -        0x112757fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Applications/Visual Studio Code.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle\n       0x112773000 -        0x11332cff7 +libnode.dylib (0) <E7F96864-5A6F-37C4-B7A9-006481491759> /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib\n       0x113722000 -        0x113758fff  com.apple.audio.midi.CoreMIDI (1.10 - 88) <2BE3A6B5-98D8-386D-8763-BC057CB644FE> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI\n       0x113784000 -        0x11379dfff  libexpat.1.dylib (12) <1490D436-163D-3385-B71A-A4F17399626A> /usr/lib/libexpat.1.dylib\n       0x117837000 -        0x117852ffb  com.apple.security.csparser (3.0 - 57336.10.29) <45ECAFDC-080E-3733-94F0-DC59584BB6D1> /System/Library/Frameworks/Security.framework/PlugIns/csparser.bundle/Contents/MacOS/csparser\n       0x118016000 -        0x118081ff7  com.apple.driver.AppleIntelBDWGraphicsMTLDriver (10.10.18 - 10.1.0) <745E9CD0-F89B-35BD-A43B-2C31BAC5F8C7> /System/Library/Extensions/AppleIntelBDWGraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelBDWGraphicsMTLDriver\n       0x11b6fb000 -        0x11b6fbfe7 +cl_kernels (???) <8F68B688-46BB-4EAB-8FB5-05F61BB07BB9> cl_kernels\n    0x7fff68626000 -     0x7fff6865cf5f  dyld (360.17) <03673B53-B8B7-34D1-ADCE-F449E78E39CC> /usr/lib/dyld\n    0x7fff8286e000 -     0x7fff83490fff  com.apple.AppKit (6.9 - 1404.13) <9B600863-6A16-31CB-8138-97AC8F43FBC6> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    0x7fff83491000 -     0x7fff83498ff7  libcompiler_rt.dylib (62) <253B36E5-572D-377D-AE99-A02CE32590E5> /usr/lib/system/libcompiler_rt.dylib\n    0x7fff834d9000 -     0x7fff83508fc3  libsystem_m.dylib (3105) <07D50372-30ED-3B03-9FA0-0662BF8F0098> /usr/lib/system/libsystem_m.dylib\n    0x7fff83509000 -     0x7fff83797ff3  com.apple.RawCamera.bundle (6.17 - 825) <EFF00605-B354-3F94-B4D0-1A14B08482FE> /System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera\n    0x7fff8387a000 -     0x7fff8388aff3  com.apple.ProtocolBuffer (1 - 242) <B3D0CEE0-1ED1-39BB-8C81-896F36398802> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\n    0x7fff838bf000 -     0x7fff83914fff  com.apple.AE (701 - 701) <87FDCC5A-82AC-36A2-BFE9-D0B2A3D870F1> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\n    0x7fff83915000 -     0x7fff83d11fff  libLAPACK.dylib (1159) <50654652-353D-3B6D-9065-8932042F3B17> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\n    0x7fff83d69000 -     0x7fff83d72ff3  com.apple.CommonAuth (4.0 - 2.0) <6EF43A6E-C071-36A3-8B94-694AC6BEF6D3> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\n    0x7fff841fe000 -     0x7fff843ccff7  com.apple.QuartzCore (1.11 - 410.9) <4D3C169D-C579-38C3-AE10-B975E89331E0> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\n    0x7fff843cd000 -     0x7fff843f6ff7  libsystem_info.dylib (476) <65D0643A-C8AE-3E8D-9F6E-E4AD823F16B2> /usr/lib/system/libsystem_info.dylib\n    0x7fff84440000 -     0x7fff84441fff  liblangid.dylib (122) <EAC09BF0-5E88-3060-AA51-EC71B4D26F3C> /usr/lib/liblangid.dylib\n    0x7fff84442000 -     0x7fff84479ff7  com.apple.LDAPFramework (2.4.28 - 194.5) <207E4A14-E3CC-3658-ABAF-B5CAEC9ED1EB> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP\n    0x7fff8447a000 -     0x7fff8448bfff  libcmph.dylib (6) <43880250-9C2D-395C-90C7-CCCE109FF1B2> /usr/lib/libcmph.dylib\n    0x7fff844fa000 -     0x7fff844ffff7  libheimdal-asn1.dylib (452.1.1) <6E911973-1E1A-3F80-B955-FA78CF20FBFD> /usr/lib/libheimdal-asn1.dylib\n    0x7fff84500000 -     0x7fff8458ffff  com.apple.CorePDF (4.0 - 4) <023E8BCC-DA79-34EE-8975-45690E97F862> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF\n    0x7fff84894000 -     0x7fff848bfffb  libarchive.2.dylib (32.10.1) <88036C67-C2C8-3ADF-A4C7-6BBF94B80F15> /usr/lib/libarchive.2.dylib\n    0x7fff848c0000 -     0x7fff849a7ff7  libcrypto.0.9.8.dylib (59) <7C4E5457-B66C-39CA-BC0E-15CA6C051FC0> /usr/lib/libcrypto.0.9.8.dylib\n    0x7fff849a8000 -     0x7fff849cdff7  libPng.dylib (1440) <98D183F0-7F1A-3175-BE7F-2F90564061F0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\n    0x7fff849ce000 -     0x7fff84a5bdd7  com.apple.AppleJPEG (1.0 - 1) <6230F3A0-C89D-3A35-A896-A17B3513E8DB> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\n    0x7fff84a80000 -     0x7fff84aabff7  com.apple.AddressBook.ContactsFoundation (8.0 - 2137) <082A84FD-0076-3129-8193-2BCB0EAD15E2> /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation\n    0x7fff84aac000 -     0x7fff84af8ffb  com.apple.HIServices (1.22 - 548) <19389B63-C373-31AE-9180-3A11093EAE58> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\n    0x7fff84aff000 -     0x7fff84b28ffb  libRIP.A.dylib (938) <4D830858-FD2C-32B1-9B29-E88AD815E604> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib\n    0x7fff84b29000 -     0x7fff84b39fff  libbsm.0.dylib (34) <F1E41935-5C5D-3704-AE9D-AEA1F2BCF8B1> /usr/lib/libbsm.0.dylib\n    0x7fff84b3a000 -     0x7fff84b4ffff  com.apple.ToneKit (1.0 - 1) <3722D681-0582-335A-A992-A972D2046163> /System/Library/PrivateFrameworks/ToneKit.framework/Versions/A/ToneKit\n    0x7fff84b50000 -     0x7fff84b79fff  libxpc.dylib (755.1.19) <3E09C275-A33B-357A-B0AB-A2DDF88EC9D5> /usr/lib/system/libxpc.dylib\n    0x7fff84bed000 -     0x7fff84c05fcf  libcompression.dylib (23) <7467B2EB-E0E0-3E9D-9EAD-3E04500C6395> /usr/lib/libcompression.dylib\n    0x7fff84d45000 -     0x7fff84d5cfff  libsystem_asl.dylib (322) <97D794DA-8CE5-3676-AC5E-364F6D172BDA> /usr/lib/system/libsystem_asl.dylib\n    0x7fff84d5d000 -     0x7fff84e4dfff  libJP2.dylib (1440) <D10CC550-35AE-35E9-A6DC-9BF872E35A35> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\n    0x7fff84ec8000 -     0x7fff84f1afff  com.apple.ImageCaptureCore (7.0 - 7.0) <74BC5DBA-FD63-31B9-A55B-C3C128852F1D> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore\n    0x7fff84f42000 -     0x7fff84f4afff  libcopyfile.dylib (127) <CA2602AB-E8B7-3CD8-A0C5-D86E35FDA09F> /usr/lib/system/libcopyfile.dylib\n    0x7fff84f4b000 -     0x7fff84f50ff3  libunwind.dylib (35.3) <FDA18078-A775-3BAF-A5A6-8A7B75D6AA99> /usr/lib/system/libunwind.dylib\n    0x7fff84fc5000 -     0x7fff85319fff  com.apple.Foundation (6.9 - 1255.1) <3AD7B198-3943-3919-B6F2-B0C28DC817B1> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    0x7fff8531a000 -     0x7fff8531afff  libmetal_timestamp.dylib (600.0.41.2) <2E74E3DE-B13E-3645-8A32-90D889FE92E1> /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib\n    0x7fff8534b000 -     0x7fff85356fff  libkxld.dylib (3247.10.11) <22BBF963-3808-3320-8BDA-5B7A99035F14> /usr/lib/system/libkxld.dylib\n    0x7fff85727000 -     0x7fff85787ff7  com.apple.QuickLookFramework (5.0 - 696.1) <727FE6BE-8E92-38A3-BDEB-2410B553BB27> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook\n    0x7fff85788000 -     0x7fff85cdefff  com.apple.MediaToolbox (1.0 - 1731.15.20) <B7C4E89E-A5D5-35B2-BA8F-36EC2EAB2CFC> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox\n    0x7fff85cdf000 -     0x7fff85d08ff7  libxslt.1.dylib (14) <412A09C9-7C02-351E-A416-2453361EACA9> /usr/lib/libxslt.1.dylib\n    0x7fff85d0f000 -     0x7fff85d17fff  libMatch.1.dylib (27) <D8024E9A-795B-30FC-BCE7-DB1E20889AB9> /usr/lib/libMatch.1.dylib\n    0x7fff85d18000 -     0x7fff85dbcfff  com.apple.Bluetooth (4.4.2 - 4.4.2f1) <7037778A-6783-3727-9076-6CA9ED130A11> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\n    0x7fff85dc2000 -     0x7fff85ddffff  com.apple.AppleVPAFramework (2.0.15 - 2.0.15) <86BC6DCE-8590-38E3-9C0C-52E97F617B58> /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA\n    0x7fff85de0000 -     0x7fff85de1fff  libsystem_blocks.dylib (65) <1B4F1F10-823E-3781-8162-6884D14DF0D6> /usr/lib/system/libsystem_blocks.dylib\n    0x7fff86015000 -     0x7fff86099fff  com.apple.AVKit (1.1 - 285.1) <918F7BF4-34E0-3260-A035-2855A6F871D9> /System/Library/Frameworks/AVKit.framework/Versions/A/AVKit\n    0x7fff860fe000 -     0x7fff86248fc7  com.apple.coreui (2.1 - 364.1) <4E680853-589C-3BC5-8215-240A07A92C81> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\n    0x7fff8624e000 -     0x7fff8625cfff  com.apple.ToneLibrary (1.0 - 1) <E8B44453-4E70-393C-AECF-988D0A8284A6> /System/Library/PrivateFrameworks/ToneLibrary.framework/Versions/A/ToneLibrary\n    0x7fff8625d000 -     0x7fff86270fff  com.apple.CoreBluetooth (1.0 - 1) <A63B8FB0-F8B3-368D-B482-733FF0373610> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\n    0x7fff86326000 -     0x7fff86328fff  libCGXType.A.dylib (938) <91E0A256-B45F-3728-B68A-250E4E74A838> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib\n    0x7fff86329000 -     0x7fff86335ff7  com.apple.OpenDirectory (10.11 - 194) <7ECA481B-C265-33F6-835E-2E5B96621E51> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\n    0x7fff86336000 -     0x7fff86338fff  com.apple.EFILogin (2.0 - 2) <1FF63331-0B4A-385D-AC44-7AE665947553> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin\n    0x7fff86339000 -     0x7fff8642bff7  libiconv.2.dylib (44) <82529E3B-0485-344C-8075-83C7725D6A6F> /usr/lib/libiconv.2.dylib\n    0x7fff86434000 -     0x7fff8643ffff  com.apple.DirectoryService.Framework (10.11 - 194) <D3F78A43-A04D-31CA-AFF0-52E129CEDB91> /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService\n    0x7fff8646e000 -     0x7fff8648afff  com.apple.GenerationalStorage (2.0 - 239) <05652CAD-E7F5-3225-929D-E13F241FBA41> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\n    0x7fff864d6000 -     0x7fff864d6fff  com.apple.Accelerate.vecLib (3.10 - vecLib 3.10) <F450DC3F-837D-35CB-97F3-5835E789EF02> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff864d7000 -     0x7fff864e5fff  libxar.1.dylib (302) <898402AF-0DF3-341D-83EA-4A1B1770E718> /usr/lib/libxar.1.dylib\n    0x7fff8661d000 -     0x7fff8667afff  com.apple.CoreServices.OSServices (728.4 - 728.4) <4E1819C2-F7A9-35FB-8193-FF3DCC35226C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\n    0x7fff8689e000 -     0x7fff868c2fff  com.apple.MultitouchSupport.framework (304.9 - 304.9) <90E9EC0A-57D0-331E-AE0D-FF1A7756A409> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\n    0x7fff868c3000 -     0x7fff868cbff7  libcldcpuengine.dylib (2.6.4.1) <D8A9DDA1-35B5-3D6B-85E0-A5542033FA9F> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib\n    0x7fff868cc000 -     0x7fff868cdff3  com.apple.print.framework.Print (10.0 - 266) <F13A0609-793A-3A43-A961-AAFC81AC8FDA> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\n    0x7fff868ce000 -     0x7fff869f3ff7  com.apple.LaunchServices (728.4 - 728.4) <A4913361-072C-3A0E-9231-0D9B1DC4ECC5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\n    0x7fff86a25000 -     0x7fff86c92ff7  com.apple.imageKit (2.6 - 930) <8DA4A452-0E28-3A3E-82B6-93D155581002> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit\n    0x7fff86c93000 -     0x7fff87004fff  com.apple.FinderKit (1.4 - 1.4) <791D8B9B-5532-3B7B-89BD-C40E6ADC5339> /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit\n    0x7fff87005000 -     0x7fff8701ffff  com.apple.Kerberos (3.0 - 1) <D2F0BF94-8656-3FBF-81AC-43D417B661F1> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\n    0x7fff87201000 -     0x7fff8722dfff  com.apple.framework.SystemAdministration (1.0 - 1.0) <6DFACF58-D982-34E7-88A7-B6CC68D2169A> /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration\n    0x7fff8722e000 -     0x7fff872defe7  libvMisc.dylib (563.4) <E166E14C-616E-35FA-BD3C-A60337EDD833> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\n    0x7fff87709000 -     0x7fff87728ff7  com.apple.framework.Apple80211 (11.0 - 1102.32) <B94B708C-D7E8-3733-B360-0D5A48FBB873> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\n    0x7fff87729000 -     0x7fff87b01fef  com.apple.CoreAUC (214.0.0 - 214.0.0) <36675355-FEF4-3DC0-9734-AE6F125883C2> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC\n    0x7fff87b4a000 -     0x7fff87b4ffff  com.apple.MediaAccessibility (1.0 - 79) <309526B0-1A18-3C2D-B425-A2BB61EED005> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility\n    0x7fff87b76000 -     0x7fff87c03fe7  libsystem_c.dylib (1081.1.3) <A60CE86D-1FF3-32AD-A672-C7597F884529> /usr/lib/system/libsystem_c.dylib\n    0x7fff87c21000 -     0x7fff87c73fff  com.apple.CloudDocs (1.0 - 382) <F8B381F5-C434-3719-B26B-137D61F8DEBD> /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs\n    0x7fff87c7f000 -     0x7fff87c82ffb  libdyld.dylib (360.17) <99396189-E53A-3A78-BC49-449236DA7CFF> /usr/lib/system/libdyld.dylib\n    0x7fff87ced000 -     0x7fff87d1dff7  libsandbox.1.dylib (459.10.4) <78F4D125-DEF0-3BEA-9D7F-E5BE5C06C8DA> /usr/lib/libsandbox.1.dylib\n    0x7fff87d1e000 -     0x7fff87d20fff  libsystem_coreservices.dylib (19) <692631A0-1923-32CA-9BD5-044B1382FFDE> /usr/lib/system/libsystem_coreservices.dylib\n    0x7fff87d3b000 -     0x7fff87da5ff7  com.apple.framework.CoreWLAN (11.0 - 1101.20) <BA9EB0BF-7915-3DB0-9ACE-EC52CD07E1A8> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\n    0x7fff87da6000 -     0x7fff87da9ffb  libScreenReader.dylib (425.100) <993C7AE7-6CA2-37B5-A13C-F9032857D3AD> /usr/lib/libScreenReader.dylib\n    0x7fff87de1000 -     0x7fff87e50ffb  com.apple.datadetectorscore (7.0 - 460) <117708DA-6E19-3866-AD15-0CE3E3F2211A> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\n    0x7fff87e60000 -     0x7fff87f0bfff  com.apple.PDFKit (3.1 - 3.1) <CDEADFD1-493E-37A8-B2D4-42AE8F72C5FE> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit\n    0x7fff87f0c000 -     0x7fff87f0ffff  libCoreVMClient.dylib (119.5) <56187F75-4436-31CA-8D3A-C6BC67F6F2BF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\n    0x7fff87f3e000 -     0x7fff87f89ffb  com.apple.print.framework.PrintCore (11.0 - 472) <34EA102A-D482-37FF-9C9B-E4FE4275913B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\n    0x7fff87f8a000 -     0x7fff87facff7  com.apple.IconServices (68 - 68) <9F8B9184-8DA8-3B7A-970B-3086DDD1CC6F> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\n    0x7fff88062000 -     0x7fff8806cfff  com.apple.NetAuth (6.0 - 6.0) <ABBBE552-26E0-3682-8BFD-C59EC702F347> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\n    0x7fff8806d000 -     0x7fff88091fff  libJPEG.dylib (1440) <7A2BE834-C5F1-3950-B13D-66C1D39AD7AA> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\n    0x7fff8809b000 -     0x7fff880a0ff7  libmacho.dylib (875.1) <A9EC23EC-11A0-3B4F-A8AC-B990C8267A6E> /usr/lib/system/libmacho.dylib\n    0x7fff880a1000 -     0x7fff880acff7  libChineseTokenizer.dylib (16) <1794A880-9C3D-37B2-8F3E-6CAFFB396089> /usr/lib/libChineseTokenizer.dylib\n    0x7fff882e7000 -     0x7fff8858dfff  com.apple.CoreData (120 - 640) <37466A48-AA4C-3DB5-B606-C04841D3F654> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\n    0x7fff8858e000 -     0x7fff885ecfff  com.apple.SystemConfiguration (1.14 - 1.14) <E3F5D239-4CBE-3B77-A8D9-F3423702AAB9> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    0x7fff88600000 -     0x7fff8860cfff  com.apple.CacheDelete (1.0 - 1) <08FC118F-E007-35B1-8A26-23FD9FE6CA04> /System/Library/PrivateFrameworks/CacheDelete.framework/Versions/A/CacheDelete\n    0x7fff88f93000 -     0x7fff88faefff  com.apple.aps.framework (4.0 - 4.0) <A3971E50-DD87-3752-B37A-E58557AD5AF2> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService\n    0x7fff88fb5000 -     0x7fff88fe5ff3  com.apple.CoreAVCHD (5.8.0 - 5800.4.2) <56AA41E6-2F60-31D8-B506-2D4A5C341C77> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD\n    0x7fff88fe6000 -     0x7fff8900ffff  libc++abi.dylib (125) <F5027B46-1801-344D-BD51-2E6D188C8900> /usr/lib/libc++abi.dylib\n    0x7fff89010000 -     0x7fff89014fff  com.apple.CommonPanels (1.2.6 - 96) <1D76DDD3-D45A-3679-8B72-5EECE6C1ACAC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\n    0x7fff891df000 -     0x7fff891f5ff7  libLinearAlgebra.dylib (1159) <01BD9187-521F-3F96-B477-24511318AECD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\n    0x7fff891f6000 -     0x7fff89269ffb  com.apple.Heimdal (4.0 - 2.0) <2D358FB4-61BB-3BB6-9EF7-D9868A0B0275> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\n    0x7fff8926a000 -     0x7fff89270ff7  com.apple.speech.recognition.framework (5.1.1 - 5.1.1) <433F8745-874A-39B3-A7C6-2EDA8C2C6B4A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\n    0x7fff89271000 -     0x7fff895ecffb  com.apple.VideoToolbox (1.0 - 1731.15.20) <70FDD7D4-FE98-3154-8B7D-72EDD5E92CDB> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\n    0x7fff89684000 -     0x7fff8970cfff  com.apple.CoreSymbolication (3.1 - 58048.1) <7B9BCFD9-3600-3973-841D-6227BEDE5D36> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\n    0x7fff89821000 -     0x7fff8983dff3  libresolv.9.dylib (60) <B192EC27-84EC-3D8A-9CBF-0374B5C9B31A> /usr/lib/libresolv.9.dylib\n    0x7fff8983e000 -     0x7fff89850fff  libsasl2.2.dylib (209) <D48CE2C5-D0C5-39BD-A7DD-C999E81CF885> /usr/lib/libsasl2.2.dylib\n    0x7fff8992b000 -     0x7fff8992bfff  com.apple.quartzframework (1.5 - 21) <E37B0DA2-8DEB-3D46-9038-BD91E789A375> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz\n    0x7fff8992c000 -     0x7fff8997cff7  com.apple.Symbolication (1.4 - 58044) <BC1259C8-C671-3014-A9C4-85BC767EA962> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\n    0x7fff899c0000 -     0x7fff89a36ff7  com.apple.MMCS (1.3 - 349) <C445C851-09F2-34F8-AA4C-D7135C15945F> /System/Library/PrivateFrameworks/MMCS.framework/Versions/A/MMCS\n    0x7fff89b37000 -     0x7fff89d42fff  libFosl_dynamic.dylib (16.24) <28CD6965-696D-32D0-B76F-4EA21DC1984A> /usr/lib/libFosl_dynamic.dylib\n    0x7fff89d98000 -     0x7fff89de8fff  libcups.2.dylib (435) <FA565876-F9B2-3021-8E89-6D665ED01B3D> /usr/lib/libcups.2.dylib\n    0x7fff89de9000 -     0x7fff89df1fff  libsystem_networkextension.dylib (384.1.2) <4736FCC5-9DBA-31F4-AAC8-CD0A177CF502> /usr/lib/system/libsystem_networkextension.dylib\n    0x7fff89e69000 -     0x7fff89e80fff  libmarisa.dylib (4) <4D3AE55B-CE77-364F-B8DE-C95CAA48B291> /usr/lib/libmarisa.dylib\n    0x7fff89e81000 -     0x7fff89e8aff7  libsystem_pthread.dylib (137.1.1) <1373D0F1-C6CA-364E-A6BA-8BDBD0D34670> /usr/lib/system/libsystem_pthread.dylib\n    0x7fff89e8c000 -     0x7fff89e8eff7  com.apple.SafariServices.framework (11601 - 11601.2.7.2) <CC99200E-E893-3A01-AA8F-AF2856675CF7> /System/Library/PrivateFrameworks/SafariServices.framework/Versions/A/SafariServices\n    0x7fff89e8f000 -     0x7fff89f65ff7  com.apple.DiskImagesFramework (10.11.1 - 415) <F3C0F696-A10D-3A4B-9391-AAD695D29831> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages\n    0x7fff89f66000 -     0x7fff89f69ff7  libsystem_sandbox.dylib (459.10.4) <BC781530-CA98-392D-A77A-8CAD2D9C6B2F> /usr/lib/system/libsystem_sandbox.dylib\n    0x7fff89f6a000 -     0x7fff89f91fff  com.apple.ChunkingLibrary (167 - 167) <C22F5038-7354-330F-8F38-36F187E6A4B1> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\n    0x7fff89f92000 -     0x7fff8b1e2ff7  com.apple.CoreGraphics (1.600.0 - 938) <22518FBE-1937-3AF6-A91D-6B8983184025> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    0x7fff8b200000 -     0x7fff8b3c6fef  com.apple.ImageIO.framework (3.3.0 - 1440) <40A1D113-9A4A-37D5-98A7-52AABB16A942> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    0x7fff8b3d7000 -     0x7fff8b3deff7  com.apple.phonenumbers (1.1.1 - 105) <49696A1F-83FC-3BE8-A7E8-F0F4EAA326BB> /System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers\n    0x7fff8b4bf000 -     0x7fff8b664ff3  com.apple.audio.toolbox.AudioToolbox (1.13 - 1.13) <F84A0C1D-86BE-3E59-8EEA-BAE0E8CB834B> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\n    0x7fff8b665000 -     0x7fff8b668ff7  com.apple.help (1.3.3 - 46) <AA185754-DEEB-3091-9301-7B23C4D36818> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\n    0x7fff8b687000 -     0x7fff8b68cfff  com.apple.TCC (1.0 - 1) <96281C9E-B2DF-325F-BFA4-0A15150165EC> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\n    0x7fff8b68d000 -     0x7fff8b6caff3  com.apple.bom (14.0 - 193.7) <FF1FC415-0472-36C5-9706-54125BA365AE> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom\n    0x7fff8b6cb000 -     0x7fff8b6dcfff  libSparseBLAS.dylib (1159) <86AFE478-E6FB-38AB-84A3-7E4317521F2C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\n    0x7fff8b6f6000 -     0x7fff8b6f6fff  com.apple.Cocoa (6.11 - 22) <A033F342-1FEC-3DFD-830A-E8EE284DF492> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\n    0x7fff8b6fe000 -     0x7fff8b706fff  com.apple.frameworks.CoreDaemon (1.3 - 1.3) <B0028247-B333-36F5-8098-8EC95E6C2B23> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon\n    0x7fff8b713000 -     0x7fff8b7c3fff  com.apple.backup.framework (1.7 - 1.7) <70033C43-855B-3F12-998C-343F2A8A93BA> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\n    0x7fff8b7c4000 -     0x7fff8b8afff7  com.apple.QuickLookUIFramework (5.0 - 696.1) <921959F6-96C2-3814-8D20-0E761AB51199> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI\n    0x7fff8b8f5000 -     0x7fff8b92ffff  com.apple.QD (3.12 - 302) <46969760-B02A-3ED5-B8BC-D6144939B16E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\n    0x7fff8b935000 -     0x7fff8bbb4fff  com.apple.security (7.0 - 57336.10.29) <FA5D22B9-3253-38CF-81E2-E243F93753DC> /System/Library/Frameworks/Security.framework/Versions/A/Security\n    0x7fff8bf2c000 -     0x7fff8c03bfe7  libvDSP.dylib (563.4) <643154B1-9A66-3265-9A7F-B36D71964FF7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\n    0x7fff8c059000 -     0x7fff8c06afff  libz.1.dylib (60) <43317BEA-ACA2-34C2-AF37-902AA926C83A> /usr/lib/libz.1.dylib\n    0x7fff8c06b000 -     0x7fff8c06eff7  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <E4643432-0DF2-3CD3-9F63-3A7665B25838> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo\n    0x7fff8c06f000 -     0x7fff8c074fff  com.apple.ImageCapture (9.0 - 9.0) <E53CC0B8-9D36-3636-B602-8AB4CEB4C313> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\n    0x7fff8c0e0000 -     0x7fff8c0e0fff  com.apple.Carbon (154 - 157) <DF95E7EB-1CFC-3C83-B114-60FFEEAE166E> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    0x7fff8c0e1000 -     0x7fff8c0e9fff  com.apple.CoreServices.FSEvents (1222.1.1 - 1222.1.1) <79DF16A7-E169-38A5-BF5E-2D45F86DE154> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\n    0x7fff8c822000 -     0x7fff8caa9ff3  com.apple.CFNetwork (760.1.2 - 760.1.2) <D4FD8DF6-8481-3BE6-9E93-A3268B16774E> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    0x7fff8caaa000 -     0x7fff8cb64fff  com.apple.DiscRecording (9.0.1 - 9010.4.3) <7AFCD317-2A1C-30D3-9871-C9C2C4FF05FD> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording\n    0x7fff8cb65000 -     0x7fff8cb70fff  com.apple.AppSandbox (4.0 - 261.10.2) <9824F3E3-6212-32BB-BC68-13FCAF820FB1> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox\n    0x7fff8cb72000 -     0x7fff8cb72fff  libOpenScriptingUtil.dylib (169) <5C4A51D4-09A9-3209-8E57-15F112725CC4> /usr/lib/libOpenScriptingUtil.dylib\n    0x7fff8cb77000 -     0x7fff8cbebff3  com.apple.securityfoundation (6.0 - 55126) <73D2EE6C-E3A2-32FE-89B3-BA8ACEA53F09> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\n    0x7fff8cc2e000 -     0x7fff8cc34fff  com.apple.IOAccelerator (203.10 - 203.10) <A9827A1B-1337-31CF-9D96-791868B51A49> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\n    0x7fff8cc87000 -     0x7fff8cca2ff7  libCRFSuite.dylib (34) <65E4DC91-A994-3921-B5B0-696123CE0C1E> /usr/lib/libCRFSuite.dylib\n    0x7fff8cca3000 -     0x7fff8ccbfff7  libextension.dylib (78) <3A674BC1-8D7E-3A62-80EF-F950B02CB0FF> /usr/lib/libextension.dylib\n    0x7fff8cce6000 -     0x7fff8ccf4fff  com.apple.IntlPreferences (2.0 - 192) <6576CA0C-BFA3-3DD4-8FB8-B2B36137060E> /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences\n    0x7fff8ccf5000 -     0x7fff8cd28fff  com.apple.MediaKit (16 - 807) <CCE5E5C0-B379-3F2C-AE16-7BB543FF7C09> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit\n    0x7fff8cef2000 -     0x7fff8cef4ff7  libRadiance.dylib (1440) <A38FFEAA-7E99-3007-B776-6D0E7B29120A> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\n    0x7fff8cef5000 -     0x7fff8d28afdb  com.apple.vImage (8.0 - 8.0) <3EF89E53-2A54-3464-A405-88E3213F31F7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\n    0x7fff8d28b000 -     0x7fff8d28ffff  libpam.2.dylib (20) <7F986CE8-EF74-3BC3-BB7E-5267E24EAFFE> /usr/lib/libpam.2.dylib\n    0x7fff8d2ea000 -     0x7fff8d33cfff  com.apple.AppleVAFramework (5.0.31 - 5.0.31) <17D3C8AE-5E48-34CE-B5FB-5F30747EDE91> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\n    0x7fff8d33d000 -     0x7fff8d33efff  com.apple.TrustEvaluationAgent (2.0 - 25) <BC19A1D1-805B-3FC5-BF0B-1EF6FB36FE74> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\n    0x7fff8d33f000 -     0x7fff8d380ff7  libGLU.dylib (12.0.34.12) <055A2B53-7C59-359A-82CB-1F79160C5C86> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\n    0x7fff8d381000 -     0x7fff8d385fff  libcache.dylib (75) <4948E2C8-867F-3E9D-AAE7-2F30F0B345C6> /usr/lib/system/libcache.dylib\n    0x7fff8d386000 -     0x7fff8d386ff7  libkeymgr.dylib (28) <47080280-8B57-3D75-8A20-9E100864DE27> /usr/lib/system/libkeymgr.dylib\n    0x7fff8d387000 -     0x7fff8d67cff3  com.apple.HIToolbox (2.1.1 - 806) <359FC9DB-B64C-3BC7-B9DA-401D8A5337DC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\n    0x7fff8d684000 -     0x7fff8d68cfff  com.apple.AppleSRP (5.0 - 1) <8DBB11A2-150A-3E70-8B83-DDEDAB15E2C3> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP\n    0x7fff8d7d6000 -     0x7fff8d832fef  libTIFF.dylib (1440) <5E2886E4-AEEF-382F-9AFB-93239278B36A> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\n    0x7fff8d836000 -     0x7fff8d8d6fff  com.apple.ViewBridge (157 - 157) <EA9A214B-6AFA-3543-A4F0-8E67F6ED414F> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge\n    0x7fff8d8d7000 -     0x7fff8d8d9ff7  com.apple.securityhi (9.0 - 55006) <02F35345-EFDE-3EE6-8526-F64EA74F91EA> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\n    0x7fff8d8da000 -     0x7fff8dd4fff7  com.apple.CoreFoundation (6.9 - 1255.1) <86B26482-C917-34F2-80D8-02911B6001E0> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n    0x7fff8dd50000 -     0x7fff8dd77fff  com.apple.shortcut (2.16 - 93) <F6E559D9-40BE-3CC9-BB16-E71300C77F8A> /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut\n    0x7fff8dd78000 -     0x7fff8dd91ffb  com.apple.openscripting (1.7 - 169) <6AA25650-8900-33C6-AD49-D0543DB27C16> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\n    0x7fff8dd92000 -     0x7fff8ddcaff7  com.apple.Accounts (113 - 113) <22DBA9B9-F70A-33CB-B87C-4D11AD66D126> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts\n    0x7fff8de1d000 -     0x7fff8def5fff  com.apple.CoreMedia (1.0 - 1731.15.20) <F30D52A8-5FA9-3BFE-856F-D6EDBC725A80> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\n    0x7fff8def6000 -     0x7fff8defefff  libGFXShared.dylib (12.0.34.12) <F8278F50-25AC-3CEC-9F68-D83785A25F5E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\n    0x7fff8df02000 -     0x7fff8df97fff  com.apple.ink.framework (10.9 - 214) <F1B3B6C9-FF8D-3E68-93EB-8CDCEB65171A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\n    0x7fff8dfad000 -     0x7fff8dfb8fff  libGL.dylib (12.0.34.12) <182B925C-7BF6-3EFE-85AF-54760206A6FD> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\n    0x7fff8dfbd000 -     0x7fff8dfcbfff  com.apple.opengl (12.0.34 - 12.0.34) <31C23ABB-8F75-3201-8CD1-447B3052B434> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n    0x7fff8e027000 -     0x7fff8e093ff7  com.apple.contacts.Contacts (1.0 - 2137) <3503806B-F315-3869-88FD-FFF8D5C10973> /System/Library/Frameworks/Contacts.framework/Versions/A/Contacts\n    0x7fff8e180000 -     0x7fff8e183ff7  libCoreFSCache.dylib (119.5) <5935DEAB-4236-38D2-8C76-5AF9A5700559> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\n    0x7fff8e184000 -     0x7fff8e390fff  com.apple.CoreImage (11.1.0 - 366.1.1) <BE963C1D-90C2-388A-85F2-D6701DC104C4> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\n    0x7fff8e391000 -     0x7fff8e3d6ff7  com.apple.coreservices.SharedFileList (24.4 - 24.4) <3C8665BA-A9CD-377C-BECB-2E933FDB68AE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\n    0x7fff8e3d7000 -     0x7fff8e4e5fff  com.apple.desktopservices (1.10 - 1.10) <76AA21FE-0F96-366A-9B43-6188FBC29ABE> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\n    0x7fff8e4e6000 -     0x7fff8eb8cffb  com.apple.JavaScriptCore (11601 - 11601.2.3) <CAB09947-EC70-3CFC-9C24-101122452A58> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore\n    0x7fff8eb8d000 -     0x7fff8eb95ffb  libsystem_dnssd.dylib (624.10.1) <21D63EAB-27BE-3F41-B1D4-604BE7F4C9BA> /usr/lib/system/libsystem_dnssd.dylib\n    0x7fff8eb96000 -     0x7fff8eb96ff7  libunc.dylib (29) <D9B0C7B1-8648-3AAC-931C-E7CD362FAA8A> /usr/lib/system/libunc.dylib\n    0x7fff8eb97000 -     0x7fff8ec4cfff  com.apple.CoreDuet (1.0 - 1) <063ADBE1-44D5-30EE-887E-69ACC8EA9AB6> /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet\n    0x7fff8ec4d000 -     0x7fff8ef32ff3  com.apple.CoreServices.CarbonCore (1136 - 1136) <9DE930A3-63C0-3E21-965A-132D97D61892> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\n    0x7fff8ef33000 -     0x7fff8ef35ff7  libquarantine.dylib (80) <1693C5FE-EA0A-3122-85EB-7950ECC7435A> /usr/lib/system/libquarantine.dylib\n    0x7fff8ef64000 -     0x7fff8ef66fff  com.apple.OAuth (25 - 25) <DFC11955-75DD-303E-BFCB-0F70A4C541E0> /System/Library/PrivateFrameworks/OAuth.framework/Versions/A/OAuth\n    0x7fff8efca000 -     0x7fff8f215fff  com.apple.AddressBook.framework (9.0 - 1679) <87B2D9E4-A042-3A99-BC5F-BA48D6896D12> /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook\n    0x7fff8f237000 -     0x7fff8f28aff7  libc++.1.dylib (120.1) <54190E1B-EE49-3D6D-AC29-2813D7380BA5> /usr/lib/libc++.1.dylib\n    0x7fff8f28b000 -     0x7fff8f2affff  com.apple.quartzfilters (1.10.0 - 1.10.0) <B25F42F6-2548-39A8-9A9E-35331FD813EB> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters\n    0x7fff8f2b0000 -     0x7fff8f2b1ffb  libremovefile.dylib (41) <C7CFF5F2-AFFB-3C8D-BDB4-D66D50E657C0> /usr/lib/system/libremovefile.dylib\n    0x7fff8f437000 -     0x7fff8f479ff7  com.apple.Metal (54.26.3 - 54.26.3) <54544DF5-B1D1-3139-ADE6-E815533313EB> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\n    0x7fff8f49f000 -     0x7fff8f52eff7  libCoreStorage.dylib (517) <1CC0776E-B682-3CC1-8CC2-2305E0FA439D> /usr/lib/libCoreStorage.dylib\n    0x7fff8f52f000 -     0x7fff8fa51fff  com.apple.QuartzComposer (5.1 - 334) <B28D6929-25C0-3F27-9454-EAE22857EF4A> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer\n    0x7fff8fa52000 -     0x7fff8fa5bff7  com.apple.DisplayServicesFW (3.0 - 378) <69821BC1-66F6-30FE-B706-134F3A9FCAD7> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices\n    0x7fff8fa5c000 -     0x7fff8fa68fff  com.apple.speech.synthesis.framework (5.4.12 - 5.4.12) <8D8F331E-21D2-3B7E-B977-3EB1D9E44D5B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\n    0x7fff8fa6e000 -     0x7fff8fa6efff  com.apple.CoreServices (728.4 - 728.4) <14019127-641A-3CB9-8155-86AD35F23597> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    0x7fff8fa6f000 -     0x7fff8fa7dff7  libbz2.1.0.dylib (38) <99C5121D-8147-3B51-8D79-66245C863338> /usr/lib/libbz2.1.0.dylib\n    0x7fff8fa7e000 -     0x7fff8fc8bfff  libicucore.A.dylib (551.30) <CC6AA367-C6D3-3592-A697-76C0CFFE19DD> /usr/lib/libicucore.A.dylib\n    0x7fff90440000 -     0x7fff9053bff7  libFontParser.dylib (158.3) <DBFEE35E-60F4-3F51-AA25-D4D7E4E01996> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\n    0x7fff9053c000 -     0x7fff905e3fff  com.apple.LanguageModeling (1.0 - 1) <C405E993-F0DF-39E4-9B74-FE310E63DD8E> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\n    0x7fff905e4000 -     0x7fff90601fff  com.apple.pluginkit.framework (1.0 - 1) <0601C318-E10E-3A62-BCA1-67B3A6108F17> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit\n    0x7fff90602000 -     0x7fff90613ff7  libsystem_trace.dylib (200) <1D289F35-BFA2-3B9E-BDF9-20F34F9A01D4> /usr/lib/system/libsystem_trace.dylib\n    0x7fff90614000 -     0x7fff909776d7  libobjc.A.dylib (680) <7C5FAD04-2C01-3ED6-AA40-78925C12A456> /usr/lib/libobjc.A.dylib\n    0x7fff90978000 -     0x7fff909acff7  com.apple.CoreVideo (1.8 - 191.1) <FA99D150-EFCE-3F32-ACDF-5E91AD97F176> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\n    0x7fff909ad000 -     0x7fff909b2fff  com.apple.AssetCacheServices (14 - 14) <8C912A44-6635-33A0-82A3-389585BAC0F1> /System/Library/PrivateFrameworks/AssetCacheServices.framework/Versions/A/AssetCacheServices\n    0x7fff909b3000 -     0x7fff90a99fef  unorm8_bgra.dylib (2.6.4.1) <28F838EA-19E5-3724-99FF-B61132555D09> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib\n    0x7fff90a9a000 -     0x7fff90a9aff7  liblaunch.dylib (755.1.19) <7EC0F297-43CC-3D11-B46B-7E72E372648A> /usr/lib/system/liblaunch.dylib\n    0x7fff90a9e000 -     0x7fff90aa9fff  libcsfde.dylib (517) <C8C9A632-5072-3D24-8EBF-CCDE0BC8BFB5> /usr/lib/libcsfde.dylib\n    0x7fff90ac4000 -     0x7fff90c2bfff  libBLAS.dylib (1159) <35ADE4D4-391A-30C2-9D38-388F543EA4BA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\n    0x7fff90c84000 -     0x7fff90cd0ff7  com.apple.corelocation (1486.17 - 1615.37) <AF201676-FFF5-39E1-8B0A-D670F4129CA8> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation\n    0x7fff90d9b000 -     0x7fff90e0efff  com.apple.framework.IOKit (2.0.2 - 1178.10.1) <6A9D7E11-156A-3FDB-850E-114ECB1AE7FD> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    0x7fff91067000 -     0x7fff910defc7  libcorecrypto.dylib (334) <4E1B969F-8449-3B21-9880-51AD58E25AA6> /usr/lib/system/libcorecrypto.dylib\n    0x7fff91107000 -     0x7fff9111cfff  com.apple.AppContainer (4.0 - 261.10.2) <ABF27707-2925-3A25-916E-370A3E342AF0> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer\n    0x7fff919d4000 -     0x7fff91a43fff  com.apple.SearchKit (1.4.0 - 1.4.0) <45A716CD-D9E7-3F1F-9EC8-BB37CA9E8C04> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\n    0x7fff91a48000 -     0x7fff91a61fff  com.apple.CFOpenDirectory (10.11 - 194) <86755CDA-B4AA-39EF-8F7B-27F120F9AAC3> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\n    0x7fff91a73000 -     0x7fff91a87fe3  libCGInterfaces.dylib (317.8) <5D867287-2340-3650-ABA9-2E4D2C99C96C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib\n    0x7fff91a88000 -     0x7fff91a8afff  com.apple.SecCodeWrapper (4.0 - 261.10.2) <54B4F790-1FD5-3DFB-8F1F-3BEE312238DC> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper\n    0x7fff91a8b000 -     0x7fff91ae7fff  com.apple.Suggestions (5.0 - 180) <1F22314C-F5E6-309D-A272-BE78C897B64C> /System/Library/PrivateFrameworks/Suggestions.framework/Versions/A/Suggestions\n    0x7fff92369000 -     0x7fff92369fff  com.apple.audio.units.AudioUnit (1.13 - 1.13) <CFB91CDC-5BBA-3A8E-BA05-6E972217BD57> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\n    0x7fff92371000 -     0x7fff923bffff  libcurl.4.dylib (90) <00662A4C-B89A-3A17-93FF-950C6DE47F99> /usr/lib/libcurl.4.dylib\n    0x7fff923c0000 -     0x7fff923c1fff  libsystem_secinit.dylib (20) <932ED582-E80F-39DA-B0FA-F1BC5F1AD2F8> /usr/lib/system/libsystem_secinit.dylib\n    0x7fff925c4000 -     0x7fff9264dff7  com.apple.PerformanceAnalysis (1.0 - 1) <BE35D3E9-570D-3483-9C78-82F3EFB56D43> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\n    0x7fff9264e000 -     0x7fff92699ff7  com.apple.CoreMediaIO (701.0 - 4790) <EE999B42-E879-346B-829F-6CE9E2806187> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO\n    0x7fff92935000 -     0x7fff92937ff7  com.apple.xpc.ServiceManagement (1.0 - 1) <0EA1807B-4F41-317D-A6C2-E6A23F201252> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\n    0x7fff9293b000 -     0x7fff92ae2ffb  com.apple.avfoundation (2.0 - 1046.9.1) <AE9896EC-F23A-3148-A757-D5807E1369EA> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation\n    0x7fff92ae3000 -     0x7fff92ae5fff  com.apple.CoreDuetDebugLogging (1.0 - 1) <B390CD9A-A04F-3A9E-A40C-CB317F40AFE5> /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging\n    0x7fff92ae6000 -     0x7fff92b15fff  com.apple.securityinterface (10.0 - 55065.10.2) <1D6DB9F4-6EB4-39E0-8E99-C09EEA78BB16> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface\n    0x7fff92b34000 -     0x7fff92b35ffb  libSystem.B.dylib (1225.1.1) <59F79CA0-5D86-359D-A235-4F257409109E> /usr/lib/libSystem.B.dylib\n    0x7fff92b36000 -     0x7fff92b41ff7  libcommonCrypto.dylib (60074) <BD1DCF19-8353-3F6A-AFFA-EBBA29A302A8> /usr/lib/system/libcommonCrypto.dylib\n    0x7fff92b42000 -     0x7fff92b61ff7  com.apple.contacts.vCard (1.0 - 2137) <74FA0133-CFBB-3055-B429-AF2D13B24D7D> /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard\n    0x7fff9510b000 -     0x7fff951abfff  com.apple.Metadata (10.7.0 - 972.9) <303B6874-8B16-39A0-BB9D-5B7A59D3B8A2> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\n    0x7fff9520f000 -     0x7fff95214fff  com.apple.DiskArbitration (2.7 - 2.7) <B391A885-1286-3718-A341-8C84560DDE58> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    0x7fff95215000 -     0x7fff954aafff  libmecabra.dylib (696.1) <8FCC4C88-BE6A-3697-B1D3-8E1A2A3B99BA> /usr/lib/libmecabra.dylib\n    0x7fff954bc000 -     0x7fff954bcfff  libenergytrace.dylib (10) <64F779D4-2192-37EC-8DB5-EC55BAE50058> /usr/lib/libenergytrace.dylib\n    0x7fff954bd000 -     0x7fff958ebfff  com.apple.vision.FaceCore (3.3.1 - 3.3.1) <D02FBB03-42A5-3E75-83C1-F563B1E3258F> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\n    0x7fff95978000 -     0x7fff95999fff  com.apple.Sharing (438.0.1 - 438.0.1) <679D40D7-3C04-3D2C-962B-E8A959E5889E> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\n    0x7fff9599a000 -     0x7fff959a3fff  com.apple.icloud.FindMyDevice (1.0 - 1) <28CE764F-4C4C-3A75-B7AE-EDBC7A189E82> /System/Library/PrivateFrameworks/FindMyDevice.framework/Versions/A/FindMyDevice\n    0x7fff959a4000 -     0x7fff959eaff7  libauto.dylib (186) <460B0167-C89B-37EC-823C-52F684B31C26> /usr/lib/libauto.dylib\n    0x7fff95d9d000 -     0x7fff95db9ff7  libsystem_malloc.dylib (67) <1B57A614-3D60-3F87-876F-7DB4AF38120F> /usr/lib/system/libsystem_malloc.dylib\n    0x7fff95dba000 -     0x7fff95debffb  com.apple.GSS (4.0 - 2.0) <D50CDB44-72E9-3520-9965-93901621F781> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\n    0x7fff95dec000 -     0x7fff95dfbfff  com.apple.AppleFSCompression (80 - 1.0) <34166CFF-ED5D-3234-A0A2-CB1809879E72> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\n    0x7fff95dfc000 -     0x7fff95e02fff  com.apple.XPCService (2.0 - 1) <E50F1206-8B6B-3CDB-BC66-E5B70B4B41C7> /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService\n    0x7fff95e03000 -     0x7fff95e05fff  com.apple.loginsupport (1.0 - 1) <09F245DC-8342-358E-A881-DAE88BF0EC1D> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\n    0x7fff95e06000 -     0x7fff95e1cfff  com.apple.CoreMediaAuthoring (2.2 - 953) <8F5453F5-DC0E-39B8-9CB0-0A89268F6930> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring\n    0x7fff95e1d000 -     0x7fff95e29fff  com.apple.HelpData (2.1.4 - 90) <17295640-71FE-3D5A-887A-751D110E0630> /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData\n    0x7fff95ebd000 -     0x7fff95ed1fff  com.apple.CoreDuetDaemonProtocol (1.0 - 1) <C0619E4A-5CF8-357E-B571-2398239911A1> /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol\n    0x7fff95ef9000 -     0x7fff95f76ff7  com.apple.iLifeMediaBrowser (2.10.1 - 721) <C7081359-4300-3D44-A8AE-143D6E5ED153> /System/Library/PrivateFrameworks/iLifeMediaBrowser.framework/Versions/A/iLifeMediaBrowser\n    0x7fff95f77000 -     0x7fff95fa5ff7  com.apple.DictionaryServices (1.2 - 250) <94678AC8-41FF-3D2E-A35E-D83AD18D7A78> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\n    0x7fff9610f000 -     0x7fff96154ff3  libFontRegistry.dylib (155) <BC1B3AD5-4927-3AB7-94FF-CD93BF895D98> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\n    0x7fff96155000 -     0x7fff96281fff  com.apple.CoreText (352.0 - 494.5.1) <393F0F48-0226-34BA-9793-66D8455EF894> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    0x7fff96282000 -     0x7fff96294fff  com.apple.contacts.ContactsPersistence (1.0 - 2137) <40E67B07-5DC9-3B5E-8266-1A27142268D0> /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence\n    0x7fff96295000 -     0x7fff962f3fff  libsystem_network.dylib (582.1.4) <C5DC3F04-7011-34D4-9682-E1B31999A89C> /usr/lib/system/libsystem_network.dylib\n    0x7fff962f4000 -     0x7fff962f8fff  com.apple.LoginUICore (3.1 - 3.1) <6DCEED7A-529B-3AFD-8F83-97A40B56E4D9> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore\n    0x7fff962f9000 -     0x7fff962fcfff  libspindump.dylib (197) <4DAD2F5F-B719-3DD8-9D7C-135314CE85D0> /usr/lib/libspindump.dylib\n    0x7fff967e4000 -     0x7fff9681eff7  com.apple.DebugSymbols (132 - 132) <6F5853A1-5DA8-3C42-8E02-2B972F34BCE0> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\n    0x7fff9681f000 -     0x7fff968ffff7  unorm8_rgba.dylib (2.6.4.1) <49FF2837-D97B-3CFF-B139-E57D40700F32> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib\n    0x7fff96900000 -     0x7fff96903fff  com.apple.Mangrove (1.0 - 1) <7CA6F485-F7A5-301C-9F14-4C667EF8B2F3> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove\n    0x7fff96904000 -     0x7fff96904fff  com.apple.Accelerate (1.10 - Accelerate 1.10) <78D9071F-93DE-3C66-8912-8B0AA25DDF05> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\n    0x7fff96905000 -     0x7fff9690dfff  com.apple.NetFS (6.0 - 4.0) <5602F3EB-64F6-3495-BEF0-988F92974234> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\n    0x7fff9690e000 -     0x7fff969bdfff  com.apple.cloudkit.CloudKit (480 - 480) <2507C1D3-733F-394A-9ADC-FF8FAD7D21B9> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit\n    0x7fff969c5000 -     0x7fff969fdfff  com.apple.RemoteViewServices (2.0 - 99) <8BD12AE2-BE91-37CF-955B-62E08551FF83> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\n    0x7fff96a73000 -     0x7fff96a7bfef  libsystem_platform.dylib (73.1.1) <3F4D2390-E3DE-3C24-A515-95DFAC8671C4> /usr/lib/system/libsystem_platform.dylib\n    0x7fff96a82000 -     0x7fff96ad1ff7  com.apple.opencl (2.6.9 - 2.6.9) <CA196FE1-7E95-3CBD-A97F-90747B9F5CBC> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\n    0x7fff96ad2000 -     0x7fff96af9ff7  com.apple.ProtectedCloudStorage (1.0 - 1) <403BC9E0-2A4E-3481-BDFE-B3CB372E5051> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage\n    0x7fff96afa000 -     0x7fff96c78fff  com.apple.UIFoundation (1.0 - 435) <237F281F-7F15-3309-B749-F8DA37822F9F> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation\n    0x7fff96de6000 -     0x7fff96de8ffb  libutil.dylib (43) <E37832CF-5EE6-345A-B0EC-FFC8D2B67375> /usr/lib/libutil.dylib\n    0x7fff9765e000 -     0x7fff97662fff  libGIF.dylib (1440) <22C11AAC-DDCD-37F8-8656-27184840CA7F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\n    0x7fff97669000 -     0x7fff9769aff7  libtidy.A.dylib (15.17) <917B7716-5060-3755-A1BA-435DAC06E778> /usr/lib/libtidy.A.dylib\n    0x7fff9769b000 -     0x7fff976aaffb  com.apple.LangAnalysis (1.7.0 - 1.7.0) <E7D610A1-1445-3CA3-B9A1-EE15D54B75AB> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\n    0x7fff9774e000 -     0x7fff97872fff  libsqlite3.dylib (216.4) <BC4681AA-F45A-3DCF-8CE5-D672036CD4C8> /usr/lib/libsqlite3.dylib\n    0x7fff97884000 -     0x7fff978a2fff  libsystem_kernel.dylib (3247.10.11) <FA4DCF42-27B0-3878-9158-E148D208B21E> /usr/lib/system/libsystem_kernel.dylib\n    0x7fff978b2000 -     0x7fff978b3ff7  libodfde.dylib (23) <B2194A77-3D29-3CE2-9D96-F8986A198980> /usr/lib/libodfde.dylib\n    0x7fff97ad3000 -     0x7fff97b41ff7  com.apple.ApplicationServices.ATS (377 - 394.1) <E35909E3-83E0-3671-914A-B43845D889B3> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\n    0x7fff97bf8000 -     0x7fff98065ffb  com.apple.GeoServices (1.0 - 1151.2.13.1) <8305A6E9-BE86-3AC7-8EAB-6A989CC208C0> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices\n    0x7fff98066000 -     0x7fff98066fff  com.apple.ApplicationServices (48 - 48) <B5326BD2-AF17-3880-A8C5-3C990AE4A1C8> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    0x7fff98067000 -     0x7fff980b8ff7  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <73EF4EB0-315C-3064-A991-3DBFF6BDDFE1> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\n    0x7fff980b9000 -     0x7fff980c2ffb  libsystem_notify.dylib (149) <56ABC155-CB99-30A8-A8B1-C204B5615092> /usr/lib/system/libsystem_notify.dylib\n    0x7fff980c3000 -     0x7fff980f0fff  libdispatch.dylib (500.10.1) <438F4595-0731-34A2-ACAD-60121A76D1FF> /usr/lib/system/libdispatch.dylib\n    0x7fff983b8000 -     0x7fff983e6ff7  com.apple.CoreServicesInternal (248.1 - 248.1) <834B5D98-DB81-36B1-BD2A-640928EDAAF6> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\n    0x7fff983e7000 -     0x7fff98401ff3  liblzma.5.dylib (10) <8CD18286-49EA-31E4-8A73-1BF8DECED6C6> /usr/lib/liblzma.5.dylib\n    0x7fff98402000 -     0x7fff98403fff  libDiagnosticMessagesClient.dylib (100) <F2D8CFCC-A00A-3675-9C01-EF0C663F2445> /usr/lib/libDiagnosticMessagesClient.dylib\n    0x7fff98404000 -     0x7fff98406fff  libCVMSPluginSupport.dylib (12.0.34.12) <F8E1EA87-73ED-3372-8C58-4209942ECD20> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\n    0x7fff98438000 -     0x7fff98476ff7  libGLImage.dylib (12.0.34.12) <4FC92D21-0834-397E-BE0D-282A73FC16B2> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\n    0x7fff98596000 -     0x7fff98685fff  libxml2.2.dylib (29) <0702E13C-D726-3DAF-B0D1-77F7B9EF6A37> /usr/lib/libxml2.2.dylib\n    0x7fff98686000 -     0x7fff98692fff  com.apple.SpeechRecognitionCore (2.2.7 - 2.2.7) <12117823-8A9E-3C88-A01C-3B25D68535CE> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\n    0x7fff98693000 -     0x7fff986a7fff  libsystem_coretls.dylib (82) <21EDACF1-D9B3-3086-9821-60EB75E7F965> /usr/lib/system/libsystem_coretls.dylib\n    0x7fff98871000 -     0x7fff988d4ff3  libAVFAudio.dylib (161) <1E0384CE-FF8D-36EE-8A28-50CD673D3109> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib\n    0x7fff988d5000 -     0x7fff988d7ff7  libsystem_configuration.dylib (801.10.2) <93D5FB9A-CC7C-3672-80D8-7A1C4805204B> /usr/lib/system/libsystem_configuration.dylib\n    0x7fff9890a000 -     0x7fff989a0ff7  com.apple.ColorSync (4.9.0 - 4.9.0) <1FBEDDC2-4BCD-3148-800E-968814206CB9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\n    0x7fff989b5000 -     0x7fff989c0fff  com.apple.CrashReporterSupport (10.11 - 716) <9BD908E9-368A-3B17-AFCD-185277FF70BA> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\n    0x7fff989c1000 -     0x7fff98a28fff  com.apple.framework.CoreWiFi (11.0 - 1101.20) <D5DC3626-3131-3BAA-8552-294B4CE1EFCB> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi\n    0x7fff98a2b000 -     0x7fff98b6fff7  com.apple.QTKit (7.7.3 - 2937) <C04A69AB-93F9-3BB4-BF56-1CD408183CE7> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit\n    0x7fff98ed2000 -     0x7fff98ed5fff  com.apple.IOSurface (108.0.1 - 108.0.1) <7B05B27A-5CC4-30D4-8A10-ED444A2807A2> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\n\nExternal Modification Summary:\n  Calls made by other processes targeting this process:\n    task_for_pid: 1\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by this process:\n    task_for_pid: 0\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by all processes on this machine:\n    task_for_pid: 59397\n    thread_create: 0\n    thread_set_state: 0\n\nVM Region Summary:\nReadOnly portion of Libraries: Total=346.6M resident=0K(0%) swapped_out_or_unallocated=346.6M(100%)\nWritable regions: Total=360.8M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=360.8M(100%)\n\n                                VIRTUAL   REGION \nREGION TYPE                        SIZE    COUNT (non-coalesced) \n===========                     =======  ======= \nAccelerate.framework               256K        3 \nActivity Tracing                  2048K        2 \nCG backing stores                 4180K        6 \nCG image                           464K       55 \nCG shared images                   496K       14 \nCoreAnimation                      788K       65 \nCoreUI image data                 1124K       51 \nCoreUI image file                  192K        4 \nDispatch continuations            8192K        2 \nFoundation                          28K        3 \nIOKit                             37.9M       12 \nImage IO                            44K        4 \nKernel Alloc Once                    8K        3 \nMALLOC                            56.6M       65 \nMALLOC guard page                   32K        7 \nMemory Tag 242                      12K        2 \nMemory Tag 251                      28K        3 \nMemory Tag 255                   561.3M       53 \nOpenCL                               8K        2 \nSTACK GUARD                       56.1M       37 \nStack                            166.9M       57 \nVM_ALLOCATE                       53.1M       34 \n__DATA                            32.1M      287 \n__IMAGE                            528K        2 \n__LINKEDIT                        99.1M       14 \n__TEXT                           247.5M      292 \n__UNICODE                          552K        2 \nmapped file                      104.6M       79 \nshared memory                     16.3M       13 \n===========                     =======  ======= \nTOTAL                              1.4G     1144 \n\nModel: MacBookPro12,1, BootROM MBP121.0167.B14, 2 processors, Intel Core i5, 2.7 GHz, 8 GB, SMC 2.28f7\nGraphics: Intel Iris Graphics 6100, Intel Iris Graphics 6100, Built-In\nMemory Module: BANK 0/DIMM0, 4 GB, DDR3, 1867 MHz, 0x80AD, 0x483943434E4E4E424C54414C41522D4E5544\nMemory Module: BANK 1/DIMM0, 4 GB, DDR3, 1867 MHz, 0x80AD, 0x483943434E4E4E424C54414C41522D4E5544\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x133), Broadcom BCM43xx 1.0 (7.21.94.29.1a4)\nBluetooth: Version 4.4.2f1 16391, 3 services, 19 devices, 1 incoming serial ports\nNetwork Service: Wi-Fi, AirPort, en0\nSerial ATA Device: APPLE SSD SM0128G, 121.33 GB\nUSB Device: USB 3.0 Bus\nUSB Device: Bluetooth USB Host Controller\nThunderbolt Bus: MacBook Pro, Apple Inc., 27.1\n```\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n'}, {'title': 'Remove comment does not work consistently in HTML', 'body': 'When editing HTML, remove comment (ctrl+k,u) often _adds_ a comment.\n\nReproducing:\n- the code is not already commented\n- the code is commented, but you select whole lines instead of selecting the specific start and end of the comment\n'}, {'title': 'c_+', 'body': ''}, {'title': "debugger reads into string's content", 'body': "I've noticed that debugger resolves variables even from strings: \n\n![](https://dl.dropboxusercontent.com/u/105338698/ShareX/2015-12/2015-12-04_02-52-13.png)\n\nI guess it's not a big deal and maybe can even be useful at some point, but still doesn't seem like an intended behavior...\n"}, {'title': 'Support temporarily installed fonts. (Win)', 'body': 'Please support font that loaded by the [AddFontResource](https://msdn.microsoft.com/en-us/library/windows/desktop/dd183326%28v=vs.85%29.aspx)\\* function for the sake of the non-admin workers.\nAlong with the portable mode(#329) we may have, it helps a lot.\n\n*It can be used to add font by non-admin user. ([FYI1](https://msdn.microsoft.com/en-us/library/dd144833%28v=vs.85%29.aspx)) ([FYI2](http://www.dailygyan.com/2008/05/how-to-install-fonts-in-windows-without.html))\n'}, {'title': 'Extension APIs: suggest window is displayed despite not having any suggestions', 'body': '### Context\n\nFor the [VIM extension](https://github.com/VSCodeVim/Vim), we need to add a keybinding for every key input, do some stuff, then manually insert it into the active text editor. Despite inserting a character at the current position, it will hide the suggest/autocomplete window.\n### Problem\n\nAs you type and press a key that triggers an suggest window (e.g. `.`), regardless of the next character inserted via the active text editor API, it will close the suggest window.\n\nWe can manually trigger the suggest window following every insert via \n\n```\nvscode.commands.executeCommand("editor.action.triggerSuggest");\n```\n\nBut this results in the suggest window showing up even if there is nothing to suggest. Is there a way to trigger the suggest window only if there are actually suggestions?\n'}, {'title': 'Explorer should not reopen a file when hiding and showing again', 'body': "Don't know if it's bug or feature, but it's different from my experience using Visual Studio Community, so I decided to add it.\n\nSteps to reproduce this:\n- Open file in editor\n- Close it\n- Collapse the Explore tab\n- Expand the Explore tab\n\nResult: Previously closed file is open again\n"}, {'title': 'Cannot invoke an expression whose type lacks a call signature (versus optional semicolon)', 'body': 'I am getting the error "Cannot invoke an expression whose type lacks a call signature." on this minimalist js test code (tested with v0.10.2 and v0.10.3):\n\n``` javascript\nmodule.exports = function(env) {\n    env.deciders = []\n    require(\'./test\')(env)\n}\n```\n\nthe error is on the underlined code `[]\n    require(\'./test\')` (with the return, whatever LF or CRLF)\n\nand adding the **optional** semicolon after [] makes the error disappear:\n\n``` javascript\nmodule.exports = function(env) {\n    env.deciders = [];\n    require(\'./test\')(env)\n}\n```\n\nthere\'s no test.js file since it does not matter if it exists or not.\nmy jsconfig.json file is set for ES6 / commonjs.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBywIsg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Slow response when system is offline', 'body': "When system is connected to network but don't have access to internet (just local network) navigation, move , copy , rename in directories and files become very slow. it's happening periodically and seems  like it's waiting for kind of timeout. \n\n![image](https://cloud.githubusercontent.com/assets/10362398/11582160/2d796f30-9a60-11e5-8695-5b25929a2ed3.png)\n"}, {'title': 'No longer responding when opening a big file?', 'body': 'When I click the file (a 4M JSON file) in the file list panel in the left, the content of this file is correctly displayed but without syntax highlighting. And after that VS Code is no longer responding, I thought it\'s parsing the file, so I waited for a while. Then it alerts "Visual Studio Code is no longer responding: Exit or Keep waiting".\n\nWindows Task Manager shows it\'s still "Running" (rather than "Not responding"), but even I select "Keep waiting" and wait for over half an hour, the editor is still no responding.\n\nI thought the JSON file is common, and maybe using a smaller file will also reproduce this issue. If you can\'t reproduce this issue I\'ll do some study and try to provide sample.\n\nWindows 7 64bit\n'}, {'title': 'Incorrect comment symbol in puppet language definition', 'body': "Conditions\n- file has 'puppet' selected as language mode\n\nAction\n- using key bound to `editor.action.commentLine`\n\nResult\n- line is commented with `//`\n\nExpectation\n- line commented with `#`\n"}, {'title': 'Suggestion Widget appears to eagerly', 'body': 'I have custom key bindings like these\n\n```\n{ "key": ";",  "command": "^acceptSelectedSuggestion", "when": "editorTextFocus && suggestWidgetVisible" },\n{ "key": "space",  "command": "^acceptSelectedSuggestion", "when": "editorTextFocus && suggestWidgetVisible" },\n...\n```\n\nto mimic how autocomplete works in the full VS, however, this makes typing something like\n\n```\nvar foo = 1;\n```\n\ndifficult in JavaScript/TypeScript because when typing `1`, the suggestion widget eagerly appears with `Int16Array` and hitting `;` autcompletes to it and you end up with\n\n```\nvar foo = Int16Array;\n```\n'}, {'title': '[html] add css intellisense for styles', 'body': 'The style links are set in my MVC masterpage _Layouts:\n\n<base href="@Url.Content("~")" />\n<link href="~/Content/css/bootstrap.min.css" rel="stylesheet" />\n<link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />\n\nVSCode does not \'see\' any styles.\n\nIs there a way around this?\n'}, {'title': '[debt] improve the internals of the suggestion contribution', 'body': "Over the years we have accumulated debt in the internals of the suggest feature. Let's collect what we have already cleaned up and what left to do. \n- [x] move `overwiteBefore` and `overwriteAfter` from `ISuggestResult` to `ISuggestion` - @aeschli \n- [x] remove `Suggestion.highlights` and move it correctly in  to the view model\n- [x] improv perf when filtering down a list of suggestion by using the tree properly - @joaomoreno \n"}, {'title': 'Quickopen not finding all files', 'body': 'quickopen, vscode repo, search for some files in quick open does not always give results even though they exist.\nSearching for pluginHostMain.ts produces no results for me. Once I open that file manually it starts appearing in quick open.\n\nI see this on OS X el capitan with latest code. Started happening 3 days ago - about the time you messed with that complex promise chain\n'}, {'title': 'Extensions: Install Extension is slow', 'body': "When listing available extensions (typing `ctrl+shift+p`and then `ìnst` and hit `enter`) it takes at least **5 seconds** to display anything.\n\nMeanwhile, there's no user feedback other than an indeterminate loader.\n\nWhat about having a faster feedback with for example cached results of plugins list while newest plugins list is being retrieved ?\n\nIt seems that the more extension are available, the longer it will take to display anything, so it will likely get worse.\n"}, {'title': 'Version 0.10.3 uses a full core on CPU', 'body': 'Version 0.10.3 uses up 100% cpu on my macbook pro.\nEspecially the Electron Helper\n'}, {'title': 'Diagnostic should support source field', 'body': 'Now that extensions can validate files and produce problems we should extend the Diagnostic literal with a source field. Currently extensions start to mangle the source into the message which will make building proper UI for grouping and filtering hard.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOByy2ew==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Ctrl + click on quick open does not work', 'body': '- Open quick open with ctrl + tab\n- Click on file you want to open while holding down ctrl - **nothing happens**\n- I would expect the file gets opened\n\nI see this on mac el capitan. I think it was working before your promise chain work since I this is part of my workflow.\n'}, {'title': "Insert key doesn't switch to overtype/overwrite mode", 'body': 'Insert key should switch between insert and overtype modes but it does not.\n\nVersion 0.10.3\nCommit 783ecf841a2b21edca6d86853670cae89b4c244f\nDate 2015-11-26T14:10:14.207Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\nUbuntu 14.04\n'}, {'title': 'Highlight arrow function parameters', 'body': 'When you are writing in TypeScript, arrow function does not get the parameter names colored. Using anonymous functions you get it colored.\n'}, {'title': 'Request: Colourise text in Output Channel', 'body': 'I am looking at building an extension that prints a lot of information from errors, debug & warnings so it would be nice to stylise the messages from the realtime logs of a website to help with debugging.\n\nSo can I make a feature request please to enable colorised text in Output Channel\n'}, {'title': "Triple click selection seems to render a single line's selection twice", 'body': 'Best seen on dark themes.\n\nIn the following screenshots, I triple-clicked line 381. Then I dragged down to the next line. Notice that when only line 381 is selected, the selection is brighter and misses rounded corners. As soon as I drag the selection down, the selection is OK.\n\n![image](https://cloud.githubusercontent.com/assets/22350/11592132/0173655c-9a9d-11e5-8740-05b1578db0ea.png)\n\n![image](https://cloud.githubusercontent.com/assets/22350/11592139/07f2f3c0-9a9d-11e5-8cd9-8a9afa7de08f.png)\n'}, {'title': '"Open with Code" in Context of Desktop causes Error', 'body': 'Hello,\nif you right-click on the desktop (Win 10) "Open with Code" is available, but if you click it an error message appears.\n\n<img width="155" alt="menu item" src="https://cloud.githubusercontent.com/assets/809210/11592169/26961bb8-9a9d-11e5-92de-e5e61c0a6281.PNG">\n<img width="418" alt="error" src="https://cloud.githubusercontent.com/assets/809210/11592168/2692c5c6-9a9d-11e5-898c-108586d919bb.PNG">\n'}, {'title': "Can't download for Linux x64", 'body': 'Hi,\nThe web site seems a bit broken. There is no way to download Code for Linux x64. Tested with Fedora, on both Firefox and a WebKit browser.\n'}, {'title': '[js] template string highlighting not working', 'body': 'The template string highlighting is broken (it\'s announced to be working in 0.5.0: http://blogs.msdn.com/b/vscode/archive/2015/07/06/vs-code-es6.aspx).\n\nMy jsconfig.json file:\n\n```\n{\n  "compilerOptions": {\n    "target": "ES6",\n    "module": "commonjs"\n  }\n}\n```\n\nbacktick.js:\n\n```\nvar x = null;\nvar y = `Hello ${x} World/*`\nvar z = null;\n```\n\nplaced in the same directory and then open visual studio code with:\n`open .`\n\nusing the following line in `.bash_profile`:\n\n``` bash\ncode () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}\n```\n\nThis results in the second line to be green (because of `/\\* which starts a block comment), also the last line is compeletely green as if it\'s a block comment...\n\nIf I add `var sum = (var1, var2) => var1 + var2` as the first line in backtick.js, is highlighted correctly. If I remove jsconfig.json, it starts complaining. For me this is a check to see if the options jsonfig.json are correct and picked up by Code.\n'}, {'title': 'Autocomplete should insert parenthesis for methods', 'body': "During autocompletion for methods, parenthesis do not get inserted automatically. Most of the time they are required and it's easier to delete them than insert them manually.\n\nEg: Tab or Return after `var arr = str.sp` should autocomplete to `var arr = str.splice()` rather than `var arr = str.splice` with the cursor between the parenthesis.\n"}, {'title': 'Settings file cannot be a symlink', 'body': "The settings file (~/Library/Application Support/Code/User/settings.json) cannot be a symbolic link. Don't know why, but the editor is complaining about when the file is in fact a symlink. Please see screenshot for an example.\n\nHowever, if the it's a hardlink, then everything is okay. The reason for this issue is that I would like to add the vscode settings file to my dotfiles repository.\n\n![screen shot 2015-12-04 at 19 52 13](https://cloud.githubusercontent.com/assets/3907131/11598202/c52ef538-9ac0-11e5-89f5-e52edbaee10b.png)\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBy4Zjw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Implement multi-select in left-panel file tree', 'body': 'It would be good to be able to move/copy/delete/etc. multiple files in the tree view at once using combinations such as:\n\n**Mouse**\n- <kbd>shift</kbd>+`left click`:  Select all items from the currently focused item to the clicked item\n- <kbd>ctrl</kbd>+`left click`: Add the clicked item to the selection\n\n**Keyboard**\n- <kbd>shift</kbd>+<kbd>&uarr;</kbd>: Add the item above the focused item to the selection (or reduce the selection)\n- <kbd>shift</kbd>+<kbd>&darr;</kbd>: Add the item below the focused item to the selection (or reduce the selection)\n- <kbd>ctrl</kbd>+<kbd>&uarr;</kbd>: Move the focus up without selecting the item\n- <kbd>ctrl</kbd>+<kbd>&darr;</kbd>: Move the focus down without selecting the item\n- <kbd>ctrl</kbd>+<kbd>space</kbd>: Add/remove the focused item from the selection\n'}, {'title': 'namespace name Stack could not be found', 'body': 'Even though all other things work out, I get error when I try to use Stack.\n\n``` shell\nDNXCore,Version=v5.0 error CS0246: The type or namespace name \'Stack\' could not be found (are you missing a using directive or an assembly reference?)\n```\n\nI have System.Collections in the dependencies,\n\n``` json\n"frameworks": {\n    "dnx451": { },\n    "dnxcore50": {\n      "dependencies": {\n        "Microsoft.CSharp": "4.0.1-beta-23516",\n        "System.Collections": "4.0.11-beta-23516",\n        "System.Console": "4.0.0-beta-23516",\n        "System.Linq": "4.0.1-beta-23516",\n        "System.Threading": "4.0.11-beta-23516"\n      }\n    }\n  }\n```\n'}, {'title': 'After left panel tree view delete, focus should go on the last file or the file that took its place', 'body': "Selecting and deleting `c` in this file structure:\n- `a`\n  - `b`\n  - `c`\n  - `d`\n\nCurrently will move focus to `a`. I would expect this to move focus to `d` to allow multiple deletes in quick succession, so `delete`, `delete`, `delete` could be used to remove all of `a`'s files before focus is moved to `a`.\n"}, {'title': 'Editor basics doc say `kbstyle()` instead of Cmd for Mac keyboard shortcuts', 'body': 'E.g., "holding the Ctrl (Mac: kbstyle()) key".\n'}, {'title': 'Suppress display of end-of-file newline as blank line', 'body': 'Currently:\n\n```\n1. Line 1\\n\n2. \\n\n3. Line 3\\n\n4.\n```\n\nWhat it should be:\n\n```\n1. Line 1\\n\n2. \\n\n3. Line 3\\n\n\n```\n\nRow 4 is not considered a line, at least not according to the [POSIX definition](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_206), so it shouldn\'t be numbered.\n\n(Atom issue [here](https://github.com/atom/atom/issues/7787))\n\nEdit: You might also consider not showing the final line number unless the line is correctly terminated, or, displaying an icon as suggested in [this](https://github.com/atom/atom/issues/7787#issuecomment-140149811) comment. However, this might "upset" certain users, so it should probably be configurable.\n'}, {'title': 'Not possible to specify quoted arguments in tasks', 'body': 'eg\n\n"C:\\Program Files\\Git\\bin\\bash.exe" -c "ls -a" \n\nIt is impossible to encode "arguments" to resolve to `-c "ls -a"` as far as I can tell. Every attempt to escape quotes or put spaces in an argument string fail.\n'}, {'title': 'Debug start button gets hidden when the sidebar is too narrow', 'body': "![screen shot 2015-12-04 at 4 49 19 pm](https://cloud.githubusercontent.com/assets/5505433/11602718/71c4909e-9aaa-11e5-9808-04e1db48f10d.png)\n\nWhen the sidebar is at its narrowest allowed width, the green start button gets hidden, and there is nothing that indicates that it's hidden. This is especially confusing when you've opened the debug view for the first time.\n"}, {'title': 'Syntax highlighting stops working when TypeScript keywords appear as object keys', 'body': "![screen shot 2015-12-04 at 5 22 50 pm](https://cloud.githubusercontent.com/assets/5505433/11602866/bb196534-9aab-11e5-9c22-82d8ea20ab56.png)\n\nWhen a keyword such as `class` appears as a key in an object, syntax highlighting for method declaration no longer works for the rest of the file.\n\n``` typescript\nclass A {\n    private getSomeObj() {\n        var obj = {\n            class: 'Class Name',\n            id: 1\n        };\n        return obj;\n    }\n\n    private someOtherMethod() {\n        return 0;\n    }\n}\n```\n"}, {'title': 'Feature Request: Chromebook support ', 'body': "Logging this on behalf of Ed Price at Microsoft\n\nPer this article (https://www.yahoo.com/tech/why-google-is-beating-apple-in-the-battle-for-the-142410097.html), schools are moving away from iOS/Apple devices and onto less expensive devices that run Chrome OS.\n\nThere's discussion on a related Microsoft-educator Yammer group about how we need Visual Studio Code to work on Chromebooks and related devices so educators can continue using to for teach AP Java (or other languages) Computer Science courses.\n\nFeel free to email me or Ed Price for more info.\n"}, {'title': "Please don't lock the tsconfig.json file", 'body': 'I am attempting to use a separate git client and it keeps complaining about the tsconfig.json file being locked. If I close the folder from Visual Studio Code, the file is unlocked but also deleted.\n\nIt looks like Visual Studio Code is somehow locking the tsconfig.json file.\n\nExpected:\nAllow other applications to read and write the tsconfig.json file even if the folder containing that file is open in Visual Studio Code.\n\nEnvironment:\nVisual Studio Code:\n![image](https://cloud.githubusercontent.com/assets/469582/11603997/6f6b1c42-9aa4-11e5-8155-23ba85831bde.png)\n\nOS: Windows 7\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBy7MJg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Locally exported environment variables are overwritten by ~/.bash_profile when using `code .`', 'body': 'Per https://github.com/Microsoft/vscode-go/issues/141, there appears to still be an issue with how env vars are passed into Code, even after the fix for https://github.com/Microsoft/vscode/issues/560.\n\nSteps to reproduce:\n1. have `export FOO=1` in your `.bash_profile`\n2. ensure your function to start visual studio code looks like this `code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}`\n3.  open a terminal session\n4.  `export FOO=2` in your terminal session\n5.  open `code .`\n6. open developer tools, and eval `process.env["FOO"]`\n\nExpected: `Foo` should be `2`\nResult: `FOO` will be `1`\n\nBut the thing that\'s really odd is that if you skip step (1) (remove this from you `.bash_profile`), you will see `Foo` set to `2`.  So in that case, the local environment is getting passed in.  \n\nIt seems like this must be either a problem with how vscode is setting up the env vars, or how `open` in OS X behaves.\n'}, {'title': 'JavaScript language support reports assignment to function as error instead of warning', 'body': 'This is a holdover from TS language service errors.\n\n![image](https://cloud.githubusercontent.com/assets/972891/11605161/233b6576-9aad-11e5-9400-5191d1b9bda5.png)\n'}, {'title': 'Codelens feature causing unexpected diff areas in git diff view', 'body': 'When the codelens feature pops in the editor to show reference info while viewing a git file diff it causes additional diff areas to show up in areas where the codelens UI gets inserted.\n\n![image](https://cloud.githubusercontent.com/assets/208549/11605563/e85b01c2-9ab7-11e5-862d-b1fbbe03b85a.png)\n'}, {'title': 'Integrate bash', 'body': "I'm finding VS Code is fairly hard to use efficiently without an integrated terminal.\nI have to type make repeatedly in a separate bash window (remembering to hit ctrl-s every time!), and from there, I can't double-click on compile errors to go to the line+file.\nAt a minimum, it would be good to have an integrated shell, and support clicking errors to go to the source.\n\nIdeally, once integrated, a macro could: save all -> execute `make`, and productivity would increase substantially.\n"}, {'title': 'the file "src/vs/workbench/parts/debug/browser/debugActions.ts" misplaced', 'body': 'This file imports electron modules "remote" and "clipboard" and should be placed under "src/vs/workbench/parts/debug/electron-browser"\n'}, {'title': 'cant run the app from within the Applications folder on my Mac.  ', 'body': 'cant run the app from within the Applications folder on my Mac.  \n'}, {'title': 'Can you add a vs2015 like ctrl+K+D to automatically arrange code?', 'body': 'This software is very good use, if you can add the vs like ctrl+K+D as a function of automatic arrangement code is better.\n'}, {'title': 'JS: default object functin param show error in editor', 'body': 'such as: a & b will show error tip\n\n``` js\nfunction test({a = "foo", b = "bar"} = {}) {\n  console.log(a + " " + b);\n}\n```\n'}, {'title': 'VSCode Marketplace Theme moderation?', 'body': 'So I see that the user **genare** contributed to a [huge list of themes](https://github.com/gerane/VSCodeThemes), and props to that, but it is a really a PIA try to preview each one of them because the only description we have is a link to another site to see how it looks like.\n\nSo users that put a better effort to show us their themes, are difficult to find in that flooded list by **genare**. For example. look at this submission by [**Tarique Naseem**](https://marketplace.visualstudio.com/items/tnaseem.theme-seti), that\'s how I think it should be submitted each theme extension.\n\nI know that some people would say "do a PR?", but that is not the point, the thing is, we should have quality over quantity.\n'}, {'title': 'Difficult to create folder in left panel file view if the open folder only contains folder', 'body': 'Open a folder that a lot of folders (enough to fill the height of the screen) and no files, it seems impossible to create a folder or file in the root folder without closing all files in the text view.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzAQcQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Open last active file when closing a file', 'body': 'It would be nice to have a feature to open the most recent active file when the current file gets closed. Ideally this would be a configurable options.\n'}, {'title': 'Support `preserveFocus` flag when opening editors or an output channel', 'body': "When showing an `OutputChannel`, it will steal the current focus. In an atempt to be less disruptive and keep the user's current focus, I tried the following code:\n\n``` typescript\nlet textDocument = vscode.window.activeTextEditor.document;\nlet channel = vscode.window.createOutputChannel('test');\nchannel.show(2);\nvscode.window.showTextDocument(textDocument);\n```\n\nThis returns the focus to the previously focused document, but it has one quirk, when any quick panel is opened and then closed, the focus will go to the `OutputChannel` instead of going to the previously focused document.\n"}, {'title': 'Support to drag and drop selected text', 'body': 'In Microsoft Visual Studio Professional you can click+hold on selected text and then drag that text to a new location.  Like a cut/paste operation by dragging/dropping.  Requesting that VS Code support this feature.  Thanks!\n'}, {'title': "Typescript: breakpoints on the first statement of a static method don't work", 'body': "Hey,\n\nI found a minor issue with typescript debugging. When executing a typescript program, breakpoints placed on the first line of static methods are moved to the closing brace of the method. \n\nFor example:\n\n``` typescript\nimport fs = require('fs');\n\nclass MyClass {\n  public static doSomethingStatic(): void {\n    let a: boolean = fs.existsSync('a');\n    let b: boolean = fs.existsSync('b');\n    let c: boolean = fs.existsSync('c');\n  }\n}\n\nMyClass.doSomethingStatic();\n```\n\nBreakpoints on line `b`, `c` work as expected, but putting a breakpoint on line `a` does not work: the breakpoint gets moved to the closing brace `}`.\n\nThe problem is not present in non-static methods.\n"}, {'title': "html, editor.autoClosingBrackets doesn't work well", 'body': 'When I am typing a html file and adding a class to a tag such as :\n `<div class="some-class"></div>`\nwhen I type `class="`, the double quotes doesn\'t auto closing.\neditor.autoClosingBrackets doesn\'t work well when cursor in `<...>`\n'}, {'title': "Can't save file in another HDD partition", 'body': "Simply trying to save a file to D:\\ raises the following error:\n\nEPERM: operation not permitted, mkdir 'd:\\'\n"}, {'title': 'autocomplete & emmett not working when in Multi-cursor mode?', 'body': 'Not sure if this is by design, but for example, when editing markup with Multi-cursor enabled I cannot get autocomplete to work.\n\nTo recreate: \nAdd multiple cursors, type "div" and hit tab.\n'}, {'title': 'Incorrect error in TypeScript code', 'body': 'I\'m using version df352367df2efcfa9d602d471e4e2f42140a0f05\n\nFor this code I get an incorrect error. \n\n``` typescript\n  /**\n   * Removes all the children from `<div class="children"></div>` element\n   *\n  */\n  removeChildren() {\n    if (this.element.querySelector(\'div.children\')) {\n      this.element.removeChild(this.element.querySelector(\'div.children\'));\n    }\n  }\n```\n\nTypeScript compiler does not complain for this code but VSCode throws this error:\n\n<img width="1199" alt="cap" src="https://cloud.githubusercontent.com/assets/543633/11614942/575d0dae-9c07-11e5-8caf-7dd6da702b20.png">\n'}, {'title': "tsconfig/jsconfig exclude doesn't work with '.' directories", 'body': 'Hello,\n\nI\'ve been using Visual Studo Code for quite some time and love the tsconfig and jsconfig concept, however I\'ve found that when specifying a folder such as ".meteor" in the exclude array the IDE/editor still traverses the ".meteor" directory. I would expect it not to.\n'}, {'title': 'why cannot format xml file in the latest version??????', 'body': 'in the previous version, i can still format a xml file, but in the latest version, why cannot?????\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzGAog==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Add delay to autosave', 'body': 'I have a watch on my source files and while autosaving is great, every change triggers the rebuild process which is pretty crazy. Is it possible to have autosave wait till i stop typing(pause > configurable time) like search box debouncing.\n'}, {'title': 'Support RHEL Linux platform', 'body': 'Dear developers,\n\nSince Redhat enterprise linux would be standard in the linux world.\nBut we cannot successful install it on RHEL5 or RHEL6.\n\nCould your teams enhance this?\n\nThanks,\nSimon\n'}, {'title': 'JavaScript for loop template completion needs more context', 'body': 'The JavaScript editor does not well support the common pattern of a for loop with a loop variable called \'i\'.\n\nWhen writing a JavaScript for loop a common pattern is \n- type \'foo\' and chose the for loop template\n- the template comes up with the complete structure and suggests "index" as the name of the loop variable.  \n- \'i\' is a common loop variable name.  If the user types i to replace index, the code completion engine suggests the \'if\' control structure. \n- of course, if you hit enter that inserts an if structure in the middle of the first line of the for loop \n- if you hit any other key to dismiss the \'if\' suggestion, that punts you out of the template completion and you have to manually change all of the array names, etc.\n\nThe template completion needs more context to know that a variable name is being entered so a control structure is not a good suggestion.\n'}, {'title': 'Crashing on OS X 10.8.3', 'body': 'Hi,\n\nThe moment i upgraded from an older version to v0.10.1it started crashing. I can not open it anymore.\n\nI tried downloading greater version like \n- v0.10.2\n- v0.10.3\n\nBut that does not work either. Please see attached file [crash info.txt](https://github.com/Microsoft/vscode/files/53608/crash.info.txt) for more information.\n\nThanks\n'}, {'title': 'Feature request: Event onWillSaveTextDocument()', 'body': 'As proposed by @jrieken  in my earlier issue, #967, it would be nice if an even listener could listen to an event like this, to enable format on save and the possibility to run other commands before the save is actually done.\n'}, {'title': 'Is there vertical selection? Is there documentation?', 'body': '1. I am trying to select text vertical such as it is possible in Visual Studio.\n2. Not finding a way to do so, I search the keyboard shortcut preference settings. No find either. So I try to search for documentation. More or less, there is none? I mean, at https://code.visualstudio.com/Docs, there is a rough overview but I cannot find an answer to this question.\n\nAnyway, great tool even beside VS, thx for delivering and open sourcing it.\n'}, {'title': 'Gopath in Extension Development Host', 'body': 'Sometimes when opening the Extension Development Host to debug custom extensions and the active file is a golang file it will give the following error:  **"Path must be a string. Received ..."**\n\nThe call stack looks like this:\n![skarmavbild 2015-12-07 kl 10 07 35](https://cloud.githubusercontent.com/assets/7289303/11623039/601d84be-9cca-11e5-8281-97b8f3d27643.png)\n\nAs I mentioned this doesn\'t happens all the time.\n'}, {'title': 'Build release?', 'body': "Hi.\n\nThe editor did not have subword Navigation or scrolling with the keyboard. I added both of these however I can't actually figure out how to build a release build to use. How do I go about that? \n"}, {'title': "[js] ES6 template string can't include '/*'", 'body': 'such as: \n\n``` js\nconst str = `bar/*`\n```\n'}, {'title': 'closing semicolon emmet expansion SCSS', 'body': "When you expand an emmet expression in .SCSS files, a semicolon is not added at the end. I search everywhere, but I can not find this in settings. So I'm filing this as a bug.\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzIvOw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Allow to match on paths in quick open', 'body': 'This enables matching on file paths once the pattern includes the platform path separator (slash on mac and linux and backslash on windows).\n'}, {'title': 'alt-gr meta key not available?', 'body': "From what I've seen in the [docs](https://code.visualstudio.com/docs/customization/keybindings) it looks like that the alt-gr meta key can't be mapped for keybindings in the package.json for a plugin. Will this be supported in the future or is there any other way? Thanks in advance.\n"}, {'title': 'Question: Cross platform Win/VS2015 and OSX/VSCode', 'body': 'Hi,\n\nI\'ve created a new ASP.Net 5 RC1 solution with VS2015 running on Win10. I\'ve added portable class library and configured gulp-tasks for LESS and TypeScript. So far the project setup works/runs on VS2015. Now Then I cloned my repo on the Mac and tried starting development on the same thing using VSCode but stuck on several points. Some of them may be related to .Net Core, others to EF7 and some of them to VSCode.\n\nSo I try to understand all these things but need some help / input with. Hopefully someone can bring some light in so I can fix my project to get it run/develop on Win/VS2015 and OSX/VSCode.\n\nVSCode related problems:\n- Is it a goal to switch between VS2015 and VSCode back and forth? Means can I open the entire src folder with multiple assemblies in it and get a correct developer experience?\n- Debugger of VSCode does not recognise the already fully configured solution/commands? Should it do that?\n-  When starting the debugger ("Launch") I get the error "spawn mono ENOENT" without anymore info. What does this mean? A issues with "Mono"? I guess the problem comes from the launch.json but I your not find what to fill in there for my ASP.Net 5 app. The commands are already configured in project.json. Shouldn\'t I just pick them from a list within the VSCode Debugger?\n\nMy repo can be found here: https://github.com/DiveConditions/DiveConditions\n\nCheers, Marc\n'}, {'title': 'Configuring an ES6 project using .d.ts files', 'body': "if i want use node.d.ts, i must add node.d.ts to files property, but files not support glob pattern, i have to add all of project files to this property\n\nother question: just use require('path') can support IntelliSense, use import don't support\n"}, {'title': 'Workbench services should be all in /common/ layer', 'body': "There are a few services from the workbench that don't live in common but in browser which makes them dangerous to use in the API, for instance `IQuickOpenService` service is in common, consequently is `pluginHostQuickOpen`. In effect it might mean we drag a lot of code into the ext host process and in the worst case we have css-dependencies et al in there too. So, I wonder why these services and types don't live in common?\n- `vs/workbench/services/quickopen/browser/quickOpenService`\n- `vs/workbench/browser/parts/statusbar/statusbar`\n"}, {'title': 'Build broken on OS X', 'body': "Following the instructions in the [contribution guidelines](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source), I received the following error when I ran `gulp watch`:\n\n```\n$ gulp watch\n\nfs.js:549\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\n                                                  ^\n\nError: ENOENT: no such file or directory, open '/Users/dem/proj/vscode/node_modules/gulp-tsb/lib/typescript/lib.d.ts'\n    at Error (native)\n    at Object.fs.openSync (fs.js:549:18)\n    at Object.fs.readFileSync (fs.js:397:15)\n    at new DefaultLibScriptSnapshot (/Users/dem/proj/vscode/node_modules/gulp-tsb/lib/builder.js:354:32)\n    at Object.createTypeScriptBuilder (/Users/dem/proj/vscode/node_modules/gulp-tsb/lib/builder.js:29:44)\n    at Object.create (/Users/dem/proj/vscode/node_modules/gulp-tsb/lib/index.js:28:28)\n    at createCompile (/Users/dem/proj/vscode/gulpfile.js:43:15)\n    at compileTask (/Users/dem/proj/vscode/gulpfile.js:74:16)\n    at Object.<anonymous> (/Users/dem/proj/vscode/gulpfile.js:100:47)\n    at Module._compile (module.js:435:26)\n```\n\nI resolved the error by:\n1.  Creating the `~/proj/vscode/node_modules/gulp-tsb/lib/typescript/`folder, which was missing:\n   \n   ```\n   cd ~/proj/vscode/node_modules/gulp-tsb/lib/\n   mkdir typescript\n   ```\n2. Copying `~/proj/vscode/out/vs/languages/typescript/common/lib/lib.d.ts` into that new `typescript` folder:\n   \n   ```\n   cp ~/proj/vscode/out/vs/languages/typescript/common/lib/lib.d.ts ~/proj/vscode/node_modules/gulp-tsb/lib/typescript\n   ```\n\n**Additional information:**\n- I didn't have mocha or gulp installed before trying to build Visual Studio Code\n- This is on the master branch\n- I'm able to duplicate this error every time I clone a new copy of the repository\n\nIf there is any other information you need, I'm happy to help!\n"}, {'title': 'Different `wrappingColumn` settings based on language mode.', 'body': 'For example, `0` for markdown, large enough for code.\n'}, {'title': 'Theme: Background color at line-numbers', 'body': 'At first I thought this was a problem with the theme Solarized Dark, but it appears to be the same problem with most themes (not "Dark" or "Light").\n\nThe problem (albeit a small problem) is that when I for example paste several lines in a row, the background color at the line-numbers changes after some lines, as seen on line 1239 on the screenshot. The amount of lines needed to create show this fault differs.\n\n<img width="612" alt="screen shot 2015-12-07 at 14 36 44" src="https://cloud.githubusercontent.com/assets/7148640/11628150/05bf70d8-9cf0-11e5-8b59-9e8e9b83ddf3.png">\n\nOS X 10.11 (15A284)\nVsCode: v0.10.3    \n\nReproduce:\n1. Open any file with code\n2. Select all\n3. Copy\n4. Spam paste until it occurs (anywhere from 50-1500 lines in my experience)\n\nIs it possible that the problem has to do with transparent colors?\n'}, {'title': 'Ignoring some C# warnings of OmniSharp', 'body': 'Hi!\n\nI\'m trying to ignore the "Unnecessary using directive." warning in my C# code (for Unity3D).\nI\'ve created an `omnisharp.json` file with this content:\n\n``` json\n{\n    "IgnoredCodeIssues": [\n        "^Unnecessary using directive.$"\n    ]\n}\n```\n\nThen I opened a C# file, and restarted OmniSharp (with the command palette within Code).\nBut it fails with this message:\n\n```\nSystem.FormatException: Unsupported JSON token \'StartArray\' was found. Path \'IgnoredCodeIssues\', line 2 position 24.\n```\n\nI\'m using VS Code Version 0.10.3, on OS X 10.11.1.\n\nThanks!\n'}, {'title': 'Message when plugins have been updated', 'body': 'Hi.\nIs it possible to get some message, when some installed plugins have been updated?\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzOR9Q==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Debug mode,\xa0the\xa0value\xa0of\xa0the\xa0variable error', 'body': "Hi~\nin the function b, the paramether id is a string 'id from middleware'. but vs code tell me it's a object and equal to the second parameter.\n\nI think the pictures is more intuitive.  beg your pardon for my English. T T\n\nhttps://c.hime.io/images/L0o.png\n\n``` javascript\n'use strict';\nconst koa = require('koa');\nconst app = koa();\nfunction* b(id, {\n    age,\n    name = 'name from b'\n}) {\n    console.log(id);\n    return {\n        id: id,\n        name: name,\n        age: age\n    }\n}\napp.use(function* () {\n    let {\n        age: returnB\n    } = yield* b('id from middleware', {\n        age: 25\n    });\n    this.body = 'returnB(age):' + returnB;\n});\napp.listen(3001);\n\n```\n"}, {'title': 'Wrong string interpolation parsing when string contains quotes', 'body': 'Please look at the self-explaining screenshot.\n![2015-12-07 2](https://cloud.githubusercontent.com/assets/822771/11636183/6d7bf95c-9d23-11e5-9456-19f2c772eeac.png)\n'}, {'title': 'No intellisense for typings even with jsconfig.json created', 'body': 'I have **typings/extjs/ExtJS.d.ts** and **jsconfig.json** at root level of my Sencha ExtJS 6 project folder:\n\n```\n{\n    "compilerOptions": {\n        "module": "commonjs",\n        "target": "ES5",\n        "outDir": "out",\n        "noLib": true,\n        "sourceMap": true\n    },\n    "exclude": [\n        "node_modules",\n        "ext",\n        "overrides",\n        "resources",\n        "sass",\n        "build",\n        "packages",\n        "help"\n    ]\n}\n```\n\nWhen I open any js file I just get a popdown Warning saying:\n\n```\nSorry, but there are too many JavaScript source files for VS Code. Consider using the exclude-property in jsconfig.json.\n```\n\nAnd no IntelliSense.\n\nI have another web project that is not a Sencha MVC project, but uses ExtJS 4 on js files. In this project I get no warnings, but I get no IntelliSense as well.\n'}, {'title': 'Show Installed Extensions empty if two extensions with the same name', 'body': 'This issue came  up with looking into changing an extension publisher (sean\'s spell checker).  If you change the publisher to the MS account (seanmcbreen -> ms-vscode), the user will end up with two extensions under .vscode\\extensions which have the same name "Spell" but different publishers and versions.  \nExtensions: Install Extensions shows that lower version installed with the Remove X available.  If you uninstall, the later version will show up here.\nThe issue is that Extensions: Show Installed Extensions shows nothing.  It should probably show both versions of the extension and the user can then clean up the lower version extension. \nFrom my testing, it appears that the later version extension is the one that is running.\n'}, {'title': "error while processing request ' _request ' (exception exception ) ", 'body': 'This is the error that comes up when i try to launch my first program. What does this mean? Any solutions? is this well coded? are there many mistakes? please help me. i am just learning to code :)\n\nusername = raw_input("username?")\nage = raw_input("age?")\nif age == [1,17]:\n    print "you are too young"\nelse:\n    print "welcome", username "we are happy to have you here"\n\ntime.sleep(3)\n\nwhile true: \n    import random \n    print "welcome: " + username "This is a dice game. So get ready!"\n    time.sleep(3)\n    print "press enter to roll the dice."\n    input()\n    number=random.randint(1,6)\n    if number == 1:\n        print "[--------------]"\n        print "[              ]"\n        print "[      o       ]"\n        print "[              ]"\n        print "[--------------]"\n        print "you threw 1!"\n    if numer == 2:\n        print "[--------------]"\n        print "[              ]"\n        print "[   o      o   ]"\n        print "[              ]"\n        print "[--------------]"\n        print "you threw 2!"\n    if number == 3:\n        print "[--------------]\n        print "[   o     o     ]"\n        print "[                 ]"\n        print "[      o         ]"\n        print "[--------------]"\n        print "you threw 3"\n    if number == 4:\n        print "[--------------]"\n        print "[   o       o   ]"\n        print "[                 ]"\n        print "[   o       o   ]"\n        print "[-------------]"\n        print "you threw 4!"\n    if number == 5:\n        print "[--------------]"\n        print "[   o       o  ]"\n        print "[       o      ]"\n        print "[   o       o  ]"\n        print "[--------------]"\n        print "you threw 5!"\n    if number == 6:\n        print "[--------------]"\n        print "[   o      o   ]"\n        print "[   o      o   ]"\n        print "[   o      o   ]"\n        print "[--------------]"\n        print "you threw 6!"\n'}, {'title': 'No permalink to latest VSCode distributable', 'body': "**I basically need a permalink to the latest VSCode distributable.**\n\nI was trying to write a Python installation script which will download the latest release, unzip it, make symlinks, copy a VSCode.desktop I have written ([here](https://github.com/hashhar/vscode/tree/hashhar-desktop/resources/linux) as a fork of VSCode) into /usr/share/applications to register a launcher into Unity and GNOME.\n\nI have stumbled upon an issue though. Since no releases are being done (not the source files, the actual installation zipballs which are downloaded from the website) I cannot use the GitHub Releases API (I wrote a preliminary proof of concept [here](https://github.com/hashhar/vscode/blob/hashhar-desktop/resources/linux/install.py)).\n\nI also wasn't able to trigger a click on the download page. (I can do it with Mechanize but that is a dependency and I want the script to be as self sustained as possible).\n\n**So how do I go about this? I basically need a permalink to the latest VSCode distributable.**\n"}, {'title': 'Colorize files/folders based on .gitignore', 'body': 'It would be nice if the files/folders text was colorized within the file tree based on the `.gitignore` files.\n\nFor example:\n\n```\nBlue  = File Updated\nGreen = File Added\nGray  = File Ignored\n```\n\nHere is an example that shows added files and ignored files:\n\n![git file highlight](https://cloud.githubusercontent.com/assets/1571806/11642352/0ffe4d7c-9d03-11e5-900d-5e8b1d61d010.jpg)\n'}, {'title': 'Add "Beta" flag to mobile site', 'body': "#417 has been resolved but, it brought up a good point that we don't have the beta banner on the mobile site.\n"}, {'title': '// Place your settings in this file to overwrite the default settings {"javascript.validate.lint.tripleSlashReferenceAlike": "warni //""editor.wrappingColumn": 300', 'body': ''}, {'title': '[c#] wrong colorization for unsafe code pointer', 'body': "![pointer](https://cloud.githubusercontent.com/assets/14086700/11649742/220b860a-9dbd-11e5-8e6d-bedd2c3a98f6.png)\n\nhi\nplease see the attachment, I'm writing unsafe code in c#, but the color for the parameters of pointers is wired, I think this should be a bug.\n\nThank you\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzWGqA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Mac: TypeScript language service fails', 'body': 'I think since the update to 1.7 the language service stops working for me quickly. The ts server is still running but no smartness comes from the editor. Is there a way to enable diagnostics to find out what is happening?\n'}, {'title': 'Failed to install an extension with EPERM exception (operation not permitted, write)', 'body': "This seems to happen on Windows only using Commit 942e9b and could be reproduced on multiple machines. \n- wanted to install tslint\n- checked whether it was already installed ant tslint didn't show up\n- selecting tslint from `install extension`\n  -> EENOPERM exception\n"}, {'title': 'December Test Plan', 'body': 'The test plan for the December iteration plan #917.\n### Debug - long text wraps in repl\n- [x] win @alexandrudima \n- [x] mac @jrieken\n- [ ] linux @SofianHn  \n\nVerify that long text now nicely wraps across multiple lines in the debug repl both for evaluation requests and for output text.\n### Debug - breakpoint state\n- [ ] win @alexandrudima \n- [x] mac @jrieken\n- [x] linux @aeschli \n\nWe have changed breakpoints states and now show it differently in the UI. Verify:\n- new UI properly and intuitivly reflects if breakpoints are enabled, disabled, verified or deactivated. \n- breakpoints get hit / not hit depending on their enablement state\n### Debug - extension debugging\n- [ ] win @dbaeumer \n- [ ] mac @SofianHn \n- [x] linux @aeschli \n\nExtension debugging is now using a new strategy to attach the debugger to the extension\n- verify you can debug your extension as before\n- verify you can restart debugging from the debugger side and the debugger reconnects properly\n- verify you can change folders or refresh on the extension development side and the debugger reconnects\n- verify closing the extension development side stops debugging\n- verify stopping the session from the debugger closes the extension development window\n### Update - channel from settings\n- [ ] win @alexandrudima \n- [x] mac @joaomoreno \n\nVerify you can change the update channel from settings.\n### View - persisted zoom settings\n- [ ] win @dbaeumer \n- [x] mac | linux @weinand \n\nVerify you can change and persist the zoom factor for windows. \n- negative and positive values work\n- the zoom actions are still working as before but do not persist\n- the change is live\n### Quick open - Path and Fuzzy matching\n- [x] win @aeschli \n- [ ] mac | linux @isidorn \n\nUnless you include a path character in your query or enabled fuzzy matching, quick open for files should work as before:\n- results are sorted properly with most relevant ones to the top\n- editor history always comes first on top of matching file results\n- if you narrow down a search, subsequent matching is fast and does not go to the disk (verify with a larger workspace)\n\nVerify the new support to match on paths if included in search\n- using the native path separator in the search enables matching on (workspace relative) paths for both editor history results and file matching\n- more relevant results are still sorted to the top\n- results are highlighted properly also in their path segment\n\nVerify the new support for fuzzy file matching\n- find and enable the new setting to enable fuzzy matching for quick open. this will only enable fuzzy matching for file search, it should not have any impact to other quick open providers, nor the editor history search\n- verify results from file searches match on the entire (workspace relative) path of the file without having to use the native path separator\n- verify matching happens in substrings of the path, not requiring the characters to be in sequence (e.g. "fr" would match "**f**oo_ba**r**")\n- more relevant results are sorted to the top\n### Extensions info in status bar #1123\n- [ ] win @bpasero \n- [ ] mac @egamma \n- [ ] linux @SofianHn  \n\nVerify that the extensions status shows up in the status bar if you have extension errors. Verify clicking on the status bar shows all the error / warning messages to the user and that you can uninstall the extension via action in message.\n'}, {'title': 'Update editor mode while changing buffer', 'body': 'Have a file without ending but this first line\n\n```\n#!/usr/bin/env node\n```\n\nit should be associated to JavaScript.\n'}, {'title': 'Cmd+O proposes wrong folder', 'body': '- be on mac\n- git cmd+o\n- > it open with the folder that you have opened last (like, `~/dev/vscode`) which is never a good choice because why would I open the folder which I opened last again? Instead it should open the folder from which I have opened the last folder (the parent of the current folder, `~/dev/`)\n'}, {'title': '`question` How auto-updates working with electron', 'body': "Hi, it's a question about build process. I can't find in sources the correct place where auto-update implemented. Do you use Squirrel for it? \n\nSorry if it's not a good place to ask.\n"}, {'title': 'Allow setting TSServer trace via env variable', 'body': ''}, {'title': 'Cant display Images with *.JPG', 'body': "If you want to open an Image *.jpg in the editor, it shows you a preview. But with the ending *.JPG it doesnt.\n\nI'm using Version 0.10.3\n"}, {'title': 'Add variable to tasks.json for filename without extension', 'body': 'Like `${fileBasename}`, but without the extension. Use case is I want to write a task configuration to run JUnit tests in Java (besides other tasks). My tasks.json:\n\n``` json\n{\n    "version": "0.1.0",\n    "isShellCommand": true,\n        "suppressTaskName": true,\n    "linux": {\n        "command": "sh",\n        "args": ["-c"]\n    },\n    "windows": {\n        "command": "cmd",\n        "args": ["/C"]\n    },\n    "tasks": [\n        {\n            "taskName": "JUnit Test",\n            "args": ["java org.junit.runner.JUnitCore ${fileBasename}"],\n            "isTestCommand": true\n        }\n    ]\n}\n```\n\n(I\'m using the workaround described in #981, but this is unrelated)\nThe task is supposed to run JUnit test for the currently opened file. The problem is, JUnit expects a class name, not a file name. So instead of MyTest.java I need to pass just MyTest. Please add a variable like `${fileBasenameWithoutExtension}`. \n'}, {'title': 'Provide an option to hide the activity bar', 'body': "I'd like to be able to hide the workspace button bar on the left side of the window to gain some more screen real estate and have a more text-focused experience.  Users of Sublime Text and Atom may also be interested in this setting.\n\ncc @guillermooo\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzb1Dg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Changes can get lost when application crashes with dirty files open', 'body': 'VS Code froze and I lost all my changes.\n'}, {'title': 'How to prevent CompletionItemProvider from being executed in strings and comments?', 'body': "I'm working on an extension and have a `CompletionItemProvider`. It works good when writing code. But it's annoying when it pops up suggestions inside of strings and comments. \nI don't want the suggestions to appear in that cases. \n\nI had a look at other extensions on how they solve this problem. The TypeScript plugin has got these lines:\n\n```\nfunction TypeScriptCompletionItemProvider(client) {\n    this.triggerCharacters = ['.'];\n    this.excludeTokens = ['string', 'comment', 'numeric'];\n    this.sortBy = [{ type: 'reference', partSeparator: '/' }];\n    this.client = client;\n    this.config = configuration_1.defaultConfiguration;\n}\n```\n\nI tried to define the `excludeTokens` in the same way but it doesn't work. How can I prevent the `CompletionItemProvider` from being executed in strings and comments?\n"}, {'title': 'Code crashes if you exit the launching process', 'body': '- Start cmd\n- Launch VS Code from prompt\n- Close cmd\n\n**Expected:** VS Code continue to run\n**Actual:** Just before closing, cmd displays `[VS Code]: render process crashed`, and both cmd and Code exit\n\nScreencap from right after X-ing out of cmd:\n\n![image](https://cloud.githubusercontent.com/assets/5943573/11665470/77b729cc-9d9c-11e5-8e12-fe514497a4c7.png)\n\n```\nVersion 0.10.3\nCommit 783ecf841a2b21edca6d86853670cae89b4c244f\nDate 2015-11-26T14:06:31.538Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\n```\n'}, {'title': 'Selection Highlight stops after 1000 matches', 'body': "I don't see any setting to control this, so the behavior seems unexpected/unintuitive.\n- Create text file with the line `oh hai` > 1000 times\n##### Scenario 1\n- Single-click `hai` on line 1\n\nExpected: All instances of `hai` are highlighted\nActual: Only the first 500 are highlighted (markers on scrollbar indicate similar)\n\n![image](https://cloud.githubusercontent.com/assets/5943573/11665991/05ccc59e-9d9f-11e5-98b5-a3fa849860a2.png)\n##### Scenario 2\n- Double-click `hai` on line 1\n\nExpected: All instances of `hai` are highlighted\nActual: First 500 instances are bright-highlighted, the next 500 are dim-highlighted, and the rest are un-highlighted.\n\n![image](https://cloud.githubusercontent.com/assets/5943573/11666004/169ccb4e-9d9f-11e5-88b9-9b5190ab5a28.png) ![image](https://cloud.githubusercontent.com/assets/5943573/11666020/29a17f78-9d9f-11e5-8d87-4ab18dd0599e.png)\n\n```\nVersion 0.10.3\nCommit 783ecf841a2b21edca6d86853670cae89b4c244f\nDate 2015-11-26T14:06:31.538Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\n```\n"}, {'title': 'Extensions: Upgrading Extensions Blows Up', 'body': "I pushed out a new version of the Vim extension, however, when upgrading it on top of the existing version, we are seeing this error: https://github.com/VSCodeVim/Vim/issues/93. Installing the new version by itself (with no previous versions of the Vim extension) works successfully. \n\nI've been unsuccessful at getting a repro. Is there a way in which I can install a specific version from the marketplace?\n\nI've built the packages (`vsce package`) and made them available here: https://github.com/VSCodeVim/Vim/releases. I have tried:\n\n1) `code vim-0.0.2.vsix` - This installs successfully\n2) On top of the existing install `code vim-0.0.3.vsix`, VSCode blows up with a different error than reported in https://github.com/VSCodeVim/Vim/issues/93. The [console log is here](https://github.com/Microsoft/vscode/files/55978/vscode-blows-up.txt).\n3) Installing `code vim-0.0.3.vsix` (not upgrading) works fine\n\ntldr;\n- Is there a way to install a specific version of an extension from the marketplace?\n- Barring the above, is manually upgrading a plugin through the vsix expected to work?\n"}, {'title': 'Quick info gets cut off for long text', 'body': '![image](https://cloud.githubusercontent.com/assets/972891/11668098/2e672f3e-9daa-11e5-8866-7c107b7ffe5f.png)\n'}, {'title': 'Explore view does not refresh on outside changes to the source tree', 'body': 'I have been making changes to the source tree that is open in explore from outside the editor. It has happened twice where changes that occur outside of the editor do not show up in the explore view in the editor. It has happened twice and I wish I could reproduce it. I have to stop and restart the editor.\n'}, {'title': 'Find and replace "line break"', 'body': 'In other IDEs I used to simple copy a line break and paste it to the find text box. Then I could replace it with some other string.\n\nI tried to do it with regex find using "\\n" or "\\r" and I had no luck either. \n\nThis is very helpful when creating db queries or csv files on the fly by replacing line breaks with strings like: \'");\' or whenever you detect  some char (like >) you can replace it with a breakline. \n\nThanks a lot!\n'}, {'title': 'Markdown Preview Under Working Files Should be Sticky', 'body': 'Add a markdown (.md) file to the Working Files section\nUnder Working Files, right-click on this file and select "Open Preview" (you see preview)\nSelect another file so that the markdown file is out of view\nUnder Working Files, select this file again\n\nActual behavior:  you see the markdown source, not the preview\nPreferred behavior:  you see the preview of the markdown file\n\nIn general, it would be useful if there were a way to pin the markdown preview so that one could easily switch back to it.\n'}, {'title': "vscode can't open twon instance?", 'body': 'I writing the fron-end code from Sublime Text3 to Visual Studio Code. But I only open one instance of vscode one times, sometimes, I should open another project at same time. Now the vscode on windows only support one intance one time?\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBziE6g==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Avoid 3x file size memory pressure when resolving file contents', 'body': 'open a file size 96935KB error:\n\nVisual Studio Code has crashed\nWe are sorry for the inconvenience! Please restart Visual Studio Code.\n'}, {'title': 'Javascript objects not highlighting correctly on master', 'body': "It looks like highlighting of JavaScript objects was broken on the current master. For reference, here's what it looks like on the current production build (0.10.3):\n\n![0.10.3 JS Objects](http://i.imgur.com/UZ9XqoF.png)\n\nAnd here's how it looks on master:\n\n![Master JS Objects](http://i.imgur.com/N2ED6Fq.png)\n\nI tried fiddling around with tokens.css a little but reverting the changes there didn't do anything. I think this may be related to the changes made to JavaScript.tmLanguage as a result of #133.\n"}, {'title': 'Corrupted extension in the extensions folder', 'body': "(extracted from #1095)\n\nSome time ago I've uninstalled the tslint extension. The extension was not completely removed. \nIt was still in the extensions folder and consisted of empty folders only and no package.json file.\n\nI cannot reproduce how this happened but we should recover from such incomplete extensions, so that the user doesn't have to go in manually and clean-up the extension.\n\nOn startup there is a warning that the extension is incomplete, i.e., that there is no package.json. This warning should be shown to the user and there should be a command provided that allows cleaning up such a partial extension.\n"}, {'title': 'TAB should not indent empty lines in a multi-line selection', 'body': '1. Start with the document:\n   \n   ```\n   a\n   b\n   \n   c\n   ```\n2. Select the entire text\n3. Press <kbd>TAB</kbd>\n\nExpected: The three lines with text get indented. The empty third line remains unindented.\n\n```\n    a\n    b\n\n    c\n```\n\nActual: All the four lines get indented, and I then have to manually delete the trailing whitespace from the third line.\n\n```\n    a\n    b\n    \u200c\n    c\n```\n\n(This is only when indenting a multi-line selection; when pressing TAB in an empty line then the line _should_ get indented as it currently does.)\n'}, {'title': "Markdown Inline Formats in Headings doesn't themed correctly", 'body': 'In Markdown preview, inline formats in single backticks (`) seems small sized in heading. Headings of different sizes have this problem in common.\n![capture](https://cloud.githubusercontent.com/assets/3831744/11680340/70fb35aa-9e92-11e5-8eb5-53e7aaf13c15.PNG)\n'}, {'title': 'Define Launch.json based on file type', 'body': 'For single file, or, may be auto add settings based on files in project\nLike:\nif js - node\nif ps1 - powershell\n\nand so on\n'}, {'title': 'whether i can add an api in vscode for my plugin?', 'body': 'The plugin what I want to implement has following requirement:\n     As you know, vscode will popup an completionitemlist when user type JavaScript in vscode, what my plugin want to do is show external information for each completionitem when user switch between each completionitem, but now I have not found any API can meet my requirement , so I suppose whether I can change  the vscode source to provide an API for my plugin.\n\nThe API can do the following things:\n1. pass all completionitem to user\n2. user can redraw the completionitemlist UI\n\nAnyone can help me?\n'}, {'title': 'Change defaults for tabSize, insertSpaces', 'body': 'We have received a lot of feedback on twitter about how the current default values `tabSize: "auto"` and `insertSpaces: "auto"` lead to confusion.\n\nThe reason is that these values mean that the settings will be "gussed" based on the current opened file. The guessing code is limited in cases where the file does not give sufficient hints and causes surprise to end users when some files resolve to `insertSpaces: true` and some to `insertSpaces: false` in a seemingly unpredictable manner.\n\nWe have decided to change the defaults to `tabSize: 4, insertSpaces: true` as this seems to be the most common used setting and because most of the compilers can handle spaces, while some compilers do not like tabs.\n'}, {'title': 'Use horizontal layout for inspectors such as locals, watch window etc in debug mode', 'body': 'When we have the ability to view panels in a horizontal layout, we should use this in debug mode to show inspectors such as locals, watch window, debug console, breakpoints etc. Pickers, such as the call stack, processes etc should remain in the vertical panel.\n\nThis does two things - it provides is with more real estate to view the values of variables and expressions and it maintains the overall left to right UX flow in the product where the user sets the context of what they want to inspect from the left hand side.\n\nFor example:\n\n![horizontallayout](https://cloud.githubusercontent.com/assets/1704059/11682904/88747274-9e5f-11e5-8014-5ca6ba17927b.png)\n'}, {'title': 'Use a separate column to show the value of a variable or expression', 'body': 'Add a separate column to show the value of a variable or expression to improve readability and to improve the experience of scanning a list of variables or values to find the required one.\n\nWhen appropriate, we should also consider using another column to show the type of the variable or expression.\n\nFor example, this screenshot shows one extra column for the value:\n![locals](https://cloud.githubusercontent.com/assets/1704059/11683123/c208816e-9e60-11e5-866d-6c33b3d22021.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzl9IQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Use an expand/collapse control to control wrapping of long values in locals and watch window', 'body': 'Whenever there is a value that cannot be displayed in the amount of real estate available we should use an expando control to allow the user to expand/collapse the value so that they can see the whole value. This is especially useful in the case of displaying long strings.\n\nFor example, the screenshot below shows the selectedText and this variables with an expando.\n![locals](https://cloud.githubusercontent.com/assets/1704059/11683172/2a971790-9e61-11e5-91bc-21fd2fc4734f.png)\nThen, when the variable is expanded, we show this:\n![localsexpanded](https://cloud.githubusercontent.com/assets/1704059/11683200/4b8b70e0-9e61-11e5-9106-4e8322354a6c.png)\n'}, {'title': 'Allow viewing up to three panels side by side in horizontal layout', 'body': "If we support horizontal layouts we should mimic the mechanism we use in the editor to view multiple panels side by side. For example, if we start out with a horizontal panel for inspectors when in debug mode like so:\n![defaulthorizontalpanel](https://cloud.githubusercontent.com/assets/1704059/11683276/c52866a6-9e61-11e5-99ff-06dce36e68ab.png)\nWe could then support an 'Open to the side' action that would allow the user to open two or more panels side by side:\n![opentoside](https://cloud.githubusercontent.com/assets/1704059/11683305/e81aaf84-9e61-11e5-8796-d60fef8b127f.png)\nThis would then show the panel alongside the main panel:\n![sidebyside](https://cloud.githubusercontent.com/assets/1704059/11683395/62061b44-9e62-11e5-969c-858bf56c2174.png)\n\nPanels would expose a close button which when clicked would regroup that panel with the main panel:\n![closepanel](https://cloud.githubusercontent.com/assets/1704059/11683342/15deca90-9e62-11e5-9708-88f57e85372a.png)\n\n![returntomainpanel](https://cloud.githubusercontent.com/assets/1704059/11683365/370f8cc2-9e62-11e5-8d17-82f08a823669.png)\n"}, {'title': 'Support snippets, intellisense etc in debug console', 'body': 'We should consider supporting snippets, intellisense and other rich design time experiences in the debug console so that we can provide a rich commanding experience in the console. For example, extension providers could take advantage of this so that specific debug commands can easily be exposed and discovered by users as shown in the screenshot below:\n![debugconsolesnippets](https://cloud.githubusercontent.com/assets/1704059/11683490/0edef9da-9e63-11e5-9c65-2486f03b5f16.png)\n'}, {'title': 'Expose exception settings in a json file', 'body': 'We should consider exposing the ability for the user to specify which exceptions they want to break on when thrown or when they are unhandled. Consistent with how we manage settings throughout the product we could have a default exceptionsettings.json file that defines the default settings and a user settings file that the user can override or customise.\n\nFor example, something like the following:\n![exceptionsettings](https://cloud.githubusercontent.com/assets/1704059/11683573/8ef8df32-9e63-11e5-844a-0865de2a21f7.png)\n'}, {'title': 'quickSuggestions auto completes numbers with decimals', 'body': 'In the latest update (Version 0.10.3 (0.10.3) on Mac ), typing a number with a decimal autocompletes suggestions for other libraries in tsd.d.ts.\n\nExample attached shows attempt to type "0.1" and "1.1"\n\n"Power0" autocompletes with ease from tweenMax\n\nSeems to be no way past this without removing quickSuggestions.\n\nTSD has :\n\n``` typescript\n    /// <reference path="greensock/greensock.d.ts" />\n    /// <reference path="pixi.js/pixi.js.d.ts" />\n    /// <reference path="createjs-lib/createjs-lib.d.ts" />\n    /// <reference path="createjs/createjs.d.ts" />\n    /// <reference path="easeljs/easeljs.d.ts" />\n    /// <reference path="tweenjs/tweenjs.d.ts" />\n    ///<reference path="requirejs/require.d.ts" />\n```\n\n![vs-code-autocomplete](https://cloud.githubusercontent.com/assets/4097335/11683880/b4e2c18e-9e65-11e5-8f6d-0403dfd978da.gif)\n'}, {'title': 'Improve workspace management', 'body': 'We need to improve the way that the users workspace is managed. The following (non-exhaustive) list of items describes what we should do:\r\n\r\n- [x] - When a user clicks an editor close button we should show the file that was previously opened in that editor (we could also consider showing a set of file thumbnails and allow the user to choose the file to open)\r\n- [ ] - We should explore better ways to indicate which editor is currently active\r\n- [x] - We should explore better ways to move and open files in different editors. For example, should the working files list also indicate which files are currently open and in which editor\r\n- [ ] - We should ensure that whenever the user opens a folder that the whole workspace opens up in the exact same state it was in when they last closed it (including all files, viewports and active viewlet)\r\n'}, {'title': 'Intellisense UX', 'body': 'We need to improve the overall Intellisense UX, including how to display documentation in suggestion lists, how to display parameter help etc.\n\nThis includes the discussion on #369 \n'}, {'title': 'Notifications UX', 'body': 'We need to explore improving the way that we display warnings, errors and notifications to users. Currently we have a variety of mechanisms (info in status bar, details in quick open, error/warning dialog).\n\nWe need a consistent way that prompts the user when there are notifications/errors/warnings for them to pay attention to and a consistent affordance for the user to get a holistic view of all of the notitications/errors/warnings.\n'}, {'title': 'Commanding UX', 'body': 'We need to explore ways we can provide access to commands that are global in scope. For example, the start debug icon is only visible in the debug viewlet but should be available regardless of context.\n\nThis should also handle the current UX for the likes of git checkout where we have a label in the status bar that shortcuts to the git checkout command in the command palette.\n'}, {'title': 'Polymer and x-tag support', 'body': 'WebComponents are more and more frequently used.\nIs it possible to add to Code the syntax highlighting and support for debugging?\nNow the Polymer and x-tag are on the horizon.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzmyRg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Error pushing to git remote with http', 'body': 'I have configured my git remote like this:\n\n```\n[remote "origin"]\n    url = http://MY-HOST.../branch-locatlocator-select-ui.git\n```\n\nAnd when i do a push show me an error:\n\n```\nfatal: Authentication failed for \'http://MY-HOST.../branch-locatlocator-select-ui.git/\'\n```\n\nWhy Visual Studio Code add the final slash? :(\n'}, {'title': 'Intellisense completely hosed on files with names starting with "temp"', 'body': 'I have a javascript node project with some TypeScript definition files inside it. My jsconfig.json is as follows:\n{\n    "compilerOptions": {\n        "target": "ES6",\n        "module": "commonjs"\n    }\n}\n\nIf I rename a javascript source file to temp_hello.js or even temple.js (imagine if temples were in my business domain!) then the intellisense stops working for the file (it does not pick up anything in the typescript definition files) and it also forgets my jsconfig.json settings. That means I can\'t use ES6 syntax anymore!\n'}, {'title': 'Backspace stops prematurely ', 'body': 'With the selected area, I would expect it all to be removed to the given point, but instead, it only removes the parenthesis. Happens when I tested this with both Java and Javascript. \n\nBefore backspace:\n![vscode java bug1](https://cloud.githubusercontent.com/assets/12275268/11690583/5aa160d6-9e65-11e5-9fe9-d542ccade6b2.png)\n\nAfter pressing backspace:\n![vscode java bug2](https://cloud.githubusercontent.com/assets/12275268/11690584/5c6df5dc-9e65-11e5-9b12-79b8bf4902b4.png)\n\nExpected:\n![vscode java expected](https://cloud.githubusercontent.com/assets/12275268/11690739/0f7978cc-9e66-11e5-9c05-1b02af697321.png)\n'}, {'title': "Reloading Extension Host window doesn't restart debug session", 'body': '- create TypeScript extension\n- F5\n- reload EH window (Cmd-R)\n  Observe: VSCode debugger doesn\'t attach to EH\n\nBTW, an "Open file" in the EH works fine.\n'}, {'title': "No extension installed for 'test' debugging -- in Windows only, works in Linux", 'body': 'I\'m developing a debugger extension that works fine in Linux (VSCode 0.10.1), but when I try to install in Windows (VSCode 0.10.3), it isn\'t recognized.\n\nI\'ve boiled down this simple test debugger in this zipfile: http://onetacoshort.com/temp/test_debug_extension.zip\n\nIn its `package.json` it contributes debugger of type `test`. It also includes a sample project with accompanying `launch.json`.\n\nOn linux, if I unzip this in my `~/.vscode/extensions` and try to debug the included sample project, it fails expectedly with "Debug adapter process has terminated unexpected". Of course it has, it\'s fake, but at least it gets invoked.\n\nOn windows, if I unzip this in `%USERPROFILE%\\.vscode\\extensions` and try to debug the included sample project, the error is "No extension installed for \'test\' debugging."\n\nThat\'s odd, because it shows as installed:\n\n![image](https://cloud.githubusercontent.com/assets/2192439/11691484/66cd7bcc-9e58-11e5-9a28-6040a2e1b28b.png)\n\nThis is just a test, but my real debug adapter is suffering from the same problem. So what am I doing wrong?\n'}, {'title': 'Ability to create custom Side bar Panels', 'body': 'Trying to create an FTP Extension but I need a way to be able to view the contents on the FTP server. A side bar panel would be great or at least the have access to the folder panel to create a virtual tree for the user to use for navigation.\n'}, {'title': 'Keyboard Shortcut prompts', 'body': 'Provide keyboard shortcut prompts. \n\nExample, right click on file browser to create a new file. Show a popup explaining the key binding for that action. \n\nThis could be turned off / on. \nCould potentially be included in the onboarding process. \nThis is likely a good extension, although I am not sure if the extension API would support the operations it would need. \n'}, {'title': 'Closing tag for style showing in intellisense when not needed', 'body': 'While typing in the properties for a style block, it keeps showing the </style> closing tag as an option, when one is already included.  Having to avoid pressing "Enter" so that the tag is not inserted again:\n![image](https://cloud.githubusercontent.com/assets/2633521/11694389/7877d734-9e6f-11e5-8ed0-63fc81108a7c.png)\n'}, {'title': 'Tasks not showing up in Command Palette', 'body': 'Tested using windows version\n'}, {'title': 'Command palette search', 'body': "~~When searching the command palette, the search is based in exactly what you type, In essence, Code is checking if what's been typed is a substring of the command title.~~\n\nIt would be great if the command palette search were a bit more fuzzy, i.e. based on the individual words that are input, ignoring punctuation, etc.\n\nAtom's command palette search works in this way:\n\n![atom](https://cloud.githubusercontent.com/assets/2899448/11696714/054c5f40-9eb6-11e5-84b9-ed2b2eacbb11.png)\n\nThis would resolve an issue raised on one of my extensions: wmaurer/vscode-change-case#3, and provide a much nicer user experience.\n\nEDIT: I've been playing with it more, and in fact Code's search is a bit fuzzier than I had thought, however it's not fuzzy enough. To be honest I can't even figure out the rules, sometimes a search matches something and then I try something similar and it doesn't match.\nIn any case, it would be great if it could be improved to approach Atom's level of fuzziness. For example with my change-case plugin, I would expect a search for _case sep_ to find the a number of commands, but it doesn't.\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBztEEA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[json] Provide full documented json schema', 'body': 'The configuration contribution point offers a great chance to provide a rich documentation about the JsonSchema, [yet it simply refers to the official meta-schema](https://github.com/Microsoft/vscode/blob/468635529ed0e10f1aeffee31ee2327e76051b05/src/vs/platform/configuration/common/configurationRegistry.ts#L110) that does not contain any useful description.\n\nIf you say, that this is something you would merge into VS Code, I would start the implementation and open a PR. Implementation details:\n1. Create a new file containing the complete meta-schema in Typescript with descriptions.\n2. Import the schema and register it with `PluginsRegistry.registerExtensionPoint<IConfigurationNode>(...)`.\n'}, {'title': 'Debugger requires path to program be correct casing for breakpoints to get hit', 'body': "Assume there's a file `app.js` in directory `Foo`. If in my `launch.json` file, I specify `foo/app.js` as the `program`, the debugger will run, but none of my breakpoints will get hit. However, if I give it the actual casing of the path, `Foo/app.js`, the debugger runs and breakpoints will get hit.\n\nI think it should be all or nothing here. As in, if correct casing is required for breakpoints to get hit, then correct casing should be required for the debugger to work at all. Or vice versa (and preferably), if correct casing isn't required to run the debugger, than correct casing shouldn't be required for breakpoints to get hit.\n"}, {'title': "[json] 'postbuild' and 'prebuild' scripts are missing from hints for ASP.NET project.json", 'body': "For some reason the `postbuild` and `prebuild` scripts are missing from hints shown for `project.json` in editor:\n![20151209223221](https://cloud.githubusercontent.com/assets/14539/11700668/811a0248-9ecb-11e5-94d1-dd717954c992.jpg)\nThe same `prebuild` script in Atom:\n![20151209223109](https://cloud.githubusercontent.com/assets/14539/11700669/812195c6-9ecb-11e5-984d-589c3ca9c1f8.jpg)\n\nThe current schema:\nhttp://json.schemastore.org/project\n\nI cannot yet trace where there is a provider of that content. I've only found that current provider also seems to be missing that properties:\nhttps://github.com/Microsoft/vscode/blob/468635529ed0e10f1aeffee31ee2327e76051b05/src/vs/editor/browser/standalone/standaloneSchemas.ts#L391-L405\n\nThanks!\n\nVSCode: 10.3\nOS X: 10.10\n"}, {'title': 'Recent Folders should not be case sensitive in Windows', 'body': 'Since Windows is not case sensitive_ for Files and Folders, the recent folders should also not to be.\n\nIf you open a folder in Code via command line, with different case, it adds a new entry for each one. It also maintain a _folder state_ (like the files that are opened in that folder) different for each entry.\n\nOpening **Code** with different case:\n\n![recent_folders_console_call](https://cloud.githubusercontent.com/assets/3781424/11701976/0fed331c-9eba-11e5-80e8-ba9d4a3990fb.png)\n\nIt adds 3 different entries in **Menu**\n\n![recent_folders_menu](https://cloud.githubusercontent.com/assets/3781424/11702027/5cbbf94e-9eba-11e5-8bbf-41e5c7b01481.png)\n\nAnd also in **Command Palette**:\n\n![recent_folders_command_palette](https://cloud.githubusercontent.com/assets/3781424/11702042/7ab8a5b4-9eba-11e5-9c57-de6f5fd656e3.png)\n'}, {'title': "It's impossible to create a folder or file via new folder/file buttons when project has only folders in the root level ", 'body': "If my project structure is like this:\n\n```\n.\n├── bar\n├── baz\n└── foo\n```\n\nAnd I've selected a folder in the sidebar, the new folder/file button will create a folder/file inside the selected folder and there is no way (that I know of) to select the root folder and make a folder in root level.\n\n![screen shot 2015-12-09 at 3 27 08 pm](https://cloud.githubusercontent.com/assets/543633/11702164/54b4471e-9e89-11e5-8c75-5d6d21e160e7.png)\n"}, {'title': ' Uncaught SyntaxError: Unexpected end of input', 'body': 'Issue Id: <b>f3a775fb-4479-4a5e-0c8d-4fe63549d6a3</b><br /><br />_Versions_ <br />\\- 0.10.1-release<br />\\-  783ecf841a2b21edca6d86853670cae89b4c244f<br />_Stack_ <br />SyntaxError: Unexpected end of input<br />    at Object.parse (native)<br />[/vs/workbench/parts/debug/node/debugAdapter.ts#L28:8 (Adapter.constructor)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/node/debugAdapter.ts#L28:8 %28Adapter.constructor%29)<br />[/vs/workbench/parts/debug/common/debugViewModel.ts#L36:34 (ViewModel.setSelectedExpression)](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/src/vs/workbench/parts/debug/common/debugViewModel.ts#L36:34 %28ViewModel.setSelectedExpression%29)<br />[vs/workbench/workbench.main.js#L102056:58](https://github.com/microsoft/vscode/blob/df352367df2efcfa9d602d471e4e2f42140a0f05/srcvs/workbench/workbench.main.js#L102056:58)<br />    at emitOne (events.js:77:13)<br />    at Socket.emit (events.js:169:7)<br />    at readableAddChunk (_stream_readable.js:146:16)<br />    at Socket.Readable.push (_stream_readable.js:110:10)<br />    at Pipe.onread (net.js:523:20)<br />\n'}, {'title': " Uncaught TypeError: Cannot read property 'symbol' of undefined", 'body': "Issue Id: <b>2f6a083e-4961-8bfb-9851-be9a373466cf</b><br /><br />_Versions_ <br />\\- 0.10.3<br />_Stack_ <br />TypeError: Cannot read property 'symbol' of undefined<br />[/vs/editor/contrib/codelens/browser/codelens.ts#L94:8 (CodeLensContentWidget)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/contrib/codelens/browser/codelens.ts#L94:8 %28CodeLensContentWidget%29)<br />[/vs/editor/contrib/codelens/browser/codelens.ts#L433:7 (CodeLensContribution.onModelChange)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/contrib/codelens/browser/codelens.ts#L433:7 %28CodeLensContribution.onModelChange%29)<br />    at Array.forEach (native)<br />[/vs/editor/contrib/codelens/browser/codelens.ts#L431:24 (CodeLensContribution.onModelChange)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/contrib/codelens/browser/codelens.ts#L431:24 %28CodeLensContribution.onModelChange%29)<br />[/vs/editor/contrib/codelens/browser/codelens.ts#L306:8 (CodeLens)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/contrib/codelens/browser/codelens.ts#L306:8 %28CodeLens%29)<br />[/vs/base/common/async.ts#L296:0](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/async.ts#L296:0)<br />\n"}, {'title': " Cannot read property 'editOperations' of null", 'body': "Issue Id: <b>2ec89842-1cd7-8e05-0e52-47e2d4ca87a8</b><br /><br />_Versions_ <br />\\- 0.10.3<br />\\-  7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066<br />_Stack_ <br />TypeError: Cannot read property 'editOperations' of null<br />[/vs/editor/common/commands/trimTrailingWhitespaceCommand.ts#L5:0](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/commands/trimTrailingWhitespaceCommand.ts#L5:0)<br />[/vs/editor/common/model/textModelWithDecorations.ts#L738:50 (ModelDecorationOptions._htmlContentArrEquals)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/model/textModelWithDecorations.ts#L738:50 %28ModelDecorationOptions._htmlContentArrEquals%29)<br />[/vs/editor/common/controller/cursor.ts#L559:3 (Cursor._getEditOperations)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L559:3 %28Cursor._getEditOperations%29)<br />[/vs/editor/common/controller/cursor.ts#L476:4 (Cursor._getEditOperationsFromCommand)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L476:4 %28Cursor._getEditOperationsFromCommand%29)<br />[/vs/editor/common/controller/cursor.ts#L273:35 (Cursor.getSelection)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L273:35 %28Cursor.getSelection%29)<br />[/vs/editor/common/controller/cursor.ts#L196:37 (Cursor.restoreState)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L196:37 %28Cursor.restoreState%29)<br />[/vs/editor/common/controller/cursor.ts#L1153:9 (Cursor)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L1153:9 %28Cursor%29)<br />[/vs/editor/common/controller/cursor.ts#L906:80 (Cursor._registerHandlers)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L906:80 %28Cursor._registerHandlers%29)<br />[/vs/editor/common/controller/cursor.ts#L217:8 (Cursor)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L217:8 %28Cursor%29)<br />[/vs/editor/common/controller/cursor.ts#L196:37 (Cursor.restoreState)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/editor/common/controller/cursor.ts#L196:37 %28Cursor.restoreState%29)<br />\n"}, {'title': " Cannot read property 'launch' of null", 'body': "Issue Id: <b>280d969c-e5e6-d1ae-0945-cfa99441ab50</b><br /><br />_Versions_ <br />\\- 0.10.3<br />\\-  7cc0c602a2b802b09a3f56b68a1a61ee9e8f0066<br />_Stack_ <br />Error: Cannot read property 'launch' of null<br />[/vs/base/common/errors.ts#L300:4 (toErrorMessage)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/errors.ts#L300:4 %28toErrorMessage%29)<br />[/vs/workbench/parts/debug/browser/debugService.ts#L459:13 (DebugService.enableOrDisableAllBreakpoints)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/workbench/parts/debug/browser/debugService.ts#L459:13 %28DebugService.enableOrDisableAllBreakpoints%29)<br />[/vs/base/common/winjs.base.raw.js#L1432:0](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1432:0)<br />[/vs/base/common/winjs.base.raw.js#L1080:0 (_cancelAction)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1080:0 %28_cancelAction%29)<br />[/vs/base/common/winjs.base.raw.js#L1319:0 (_progress)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1319:0 %28_progress%29)<br />[/vs/base/common/winjs.base.raw.js#L1207:0 (_notify)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1207:0 %28_notify%29)<br />[/vs/base/common/winjs.base.raw.js#L1387:0 (_isException)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1387:0 %28_isException%29)<br />[/vs/base/common/winjs.base.raw.js#L1080:0 (_cancelAction)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1080:0 %28_cancelAction%29)<br />[/vs/base/common/winjs.base.raw.js#L1319:0 (_progress)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1319:0 %28_progress%29)<br />[/vs/base/common/winjs.base.raw.js#L1207:0 (_notify)](https://github.com/microsoft/vscode/blob/783ecf841a2b21edca6d86853670cae89b4c244f/src/vs/base/common/winjs.base.raw.js#L1207:0 %28_notify%29)<br />\n"}, {'title': "Introducing '.js' file causes errors with TypeScript code", 'body': 'From https://www.reddit.com/r/programming/comments/3ux8fs/announcing_typescript_17/cxo5ldn?context=3.\n\n> I just updated VSCode to the latest version (0.10.3) and reduced this problem to a small case, and I\'m really confused:\n> 1. A simple internal module, a simple .d.ts referencing it. Everything works fine: http://i.imgur.com/O8uIQFT.png\n\n![](http://i.imgur.com/O8uIQFT.png)\n2. I create a plain .js file. Even without writing to it or saving it again, I get Schrodinger\'s interface: http://i.imgur.com/siOf1AV.png\n\n![](http://i.imgur.com/siOf1AV.png)\n\n> At this point, the errors about the interface file won\'t go away. After I close the .js file in the editor, close the folder, and reopen the folder, things go back to normal. But as soon as I open a plain .js file, they come back just like before. After the errors get triggered, I can close the .js file and they stay in the status bar. If I then add both the module and the .d.ts to the "working files" list, then remove .d.ts from it, the errors vanish again.\n\nWe\'re not sure what sort of interaction might be going on with the TypeScript language service, so we felt it would be better filed here.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBzwnvg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Index all files in open folders for intellisense', 'body': "Perhaps there's already a way to force, this but none that I've found.  I'd really like to get intellisense code-completion, and since I'm opening the folders which contain all the relevant code I'd like to be able to use those files for this feature.  \n\nAlternatively, I'd like to be able to reference local modules (in the case of node.js) by relative or absolute path, as opposed to having just a few presets that I can choose from in the jsconfig.json file.  \n\nIf there's a better way to get code-completion for javascript code in VSC then please let me know :)\n"}, {'title': 'Add select line command ', 'body': 'I want to bind `cmd+l` to select a line entirely but there is no "select line" command.\n'}, {'title': "Cannot read property 'highlightSpans' of undefined", 'body': "Useless stack trace:\n\n```\nCannot read property 'highlightSpans' of undefined\n  e.doShow @ workbench.main.js:1598\n```\n\nReproduction code (TypeScript):\n\n``` ts\nfunction a() {\n    let b = {{\n        a: 'string'\n    };\n}\n```\n\nExpected: No fatal error in engine\nActual: Fatal error caused by `b = {{` inside function.\n\nVersion: 0.10.3 Mac OS X\n"}, {'title': 'Prevent data loss with automated backups for files and unsaved changes', 'body': "Windows 10 is half baked one IE and now this editor.\n\nI was surprised with the built in extensions, but I'm feeling terrible after experiencing this issue.\n\nI was working with this editor, and suddenly my system became very slow and I'm forced to shut down my system. After the restart my current working file (see the attachment), got changed in to some other encoding. I lost my 3 hours of work :(.\n- Bala\n  [global.txt](https://github.com/Microsoft/vscode/files/57803/global.txt)\n"}, {'title': 'Workspace UI storage not picked up when launching workspace with different casing', 'body': 'Currently we loose all workspace associated state when the workspace path is using different casing. Ideally the storage is agnostic to casing for file systems that are case insensitive.\n'}, {'title': 'Document Range Formatting fails', 'body': 'Steps:\n- extension that registers a document and a document range formatting provider\n- open a test workspace that activates the extension and trigger a range format.\n\nYou get:\n\n```\ni.formatRange is not a function: TypeError: i.formatRange is not a function\n    at Object.u [as formatRange] (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1579:7171)\n    at t.run (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1579:12653)\n    at file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1598:17974\n    at __dirname.undefined.t.Class.define.then (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1544:7415)\n    at e.showContextMenu (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1598:17232)\n    at e._doShowContextMenu (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1578:25279)\n    at e.showContextMenu (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1578:24190)\n    at e._onContextMenu (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1578:23875)\n    at Array.<anonymous> (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1578:22955)\n    at t.e._emitToSpecificTypeListeners (file:///C:/Program Files (x86)/Visual Studio Code/resources/app/out/vs/workbench/workbench.main.js:1548:10228)\n```\n'}, {'title': 'Feature Request: Debugging of AngularJS projects', 'body': "I don't know if this is possible or am asking for too much, but is it possible to have the debugger debug angularjs? I am talking of the same debugging experience as the one I get when using it to debug nodejs\n"}, {'title': 'Feature request : add file location and line number to CompletionItem', 'body': "Hello,\n\nI've read this new feature will be available soon:\nWith the Dec15 update you can invoke this command https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/api/common/extHostLanguageFeatureCommands.ts#L55 to retrieve the same list of completions the UI would show.\n\nIt would be great to know where the CompletionItem is pointing to (which file and which line number) if available locally of course.\nThis could help extensions to display a function, or to go to that function, or to analyse the function to add more info for example when available ...\n\nIt could apply to provideHover, so when the text is hovered one can add info regarding the function pointed with an extension.\n\nI hope this could help others.\n"}, {'title': 'Allow multiple build tasks depending on file type', 'body': 'I\'m working with a lot of projects that have different build tasks for different file types, for example I `javac` for Java, `pdflatex` for Latex, others may have `lessc` for their styles and `babel` for their JS.\nCurrently, you can only define _one_ build task to be run when Ctrl+Shift+B is pressed. tasks.json allows us to nicely define tasks to run with the currently opened file, but (eg compile the currently open java / Latex / Less / ES6 file), but you can only assign one of these tasks the shortcut that comes with `isBuildCommand`.\n\nIt would be nice if instead of just `"isBuildCommand": true` we could also define `"isBuildCommand": "java"` and for another task `"isBuildCommand": "latex"` so VS Code automatically runs the desired task when pressing Ctrl+Shift+B depending on what type of file is currently open.\n\nThis should also work with `"isTestCommand"`\n'}, {'title': "Can't write Vietnamese text in editor with UniKey software", 'body': 'this not for vietnamese programer ? i can not write vietnamese language: "Tôi yêu Việt Nam" on editor, please fix !\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBz2ZNw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Allow relative path when adding file to project folder', 'body': "Similar like Atom does it when adding a file to a project folder, allow us to specify a path relative to the project folder.\n\nThis would be a much more convenient way to add files compared to navigating a file tree and clicking buttons, especially useful for those of us who like to disable trackpads on their laptops and use keyboard only.\n\nSay I have in my project folder the subfolder 'foo', and inside 'foo' I have 'bar', allow me to create a new file directly giving this:\n\nfoo/bar/newfile.ts\n\nIdeally, we would have autocompletion using [tab] for folder names, and it would create subfolders if needed, e.g. this\n\nfoo/bar/newfolder/newfile.ts\n\nwould also create 'newfolder'.\n"}, {'title': '"Change all Occurrences" in a string with stop or whitespace chars', 'body': '"Change all Occurrences" doesn\'t work if the text selection contains stops, spaces or such. Furthermore, if the text was selected from L->R - it just doesn\'t do anything, but if R->L - it automatically selects the most left word and then invokes the "Change all Occurrences".\n'}, {'title': 'Question: Is there a cli for this?', 'body': 'I wanted to use https://www.npmjs.com/package/open in my extension. \n\nIs there a way, from VS Code `F1` (or the cmd line) to install open, grab the d.ts from nuget (unpackage it to the correct subdir), add the `/// ref` to the current ts and update the package.json?\n\nThank you\n'}, {'title': '[js] Quotes not parsed properly in ES6 string templates', 'body': "When using single or double quotes within back-tick quotes, they are not considered quoted:\n\n![screenshot 2015-12-10 14 26 50](https://cloud.githubusercontent.com/assets/573056/11725918/1e339a48-9f4a-11e5-90ac-d02f433dcdca.png)\n\nSo if they happen to be closed within the back ticks, it's not the end of the world, but if not, all subsequent formatting is lost.\n"}, {'title': '[python] strings in dictionary values incorrectly highlighted', 'body': 'When creating dictionaries with any values the strings in the value section are all hi-lighted blue and not red. \ne.g. for the following code snippet\n\n``` python\n{"a":{"b":"c"}}\n```\n\nThe string "a" will be highlighted red, while "b" and "c" will be highlighted blue even though they are both strings like "a" is.  "b" is also a key to a dict like "a" is \n\nNote: this is using the "Light" theme\n'}, {'title': 'Support JSON Schema for YAML files', 'body': "It's getting more common to use YAML for configuration. For example `docker-compose.yml` or Swagger files are usually written in YAML. The JSON Schema based autocomplete for JSON files is a neat feature, please enable that for YAML files also. \n"}, {'title': 'Double-clicking leading whitespace should select all leading whitespace', 'body': 'In most editors, you can double-click anywhere in the leading whitespace of a line to select all such leading whitespace (even mixed tab/space).\n\nIn VS Code, double-clicking leading whitespace only selects that single whitespace character.\n\nExamples of expected behavior in Notepad++ and VS, and unexpected behavior in Code:\n\n![leadingwhitespace](https://cloud.githubusercontent.com/assets/5943573/11728708/256edbe2-9f40-11e5-9d99-6083e65eb1e5.gif)\n'}, {'title': 'debugging bluebird promises', 'body': 'Can vscode debug node code allowing one to step through promises without setting breakpoints? This is similar to clicking "Async" in the chome debug tools as described in this question.\n\nhttp://stackoverflow.com/questions/32767721/how-to-step-through-debugger-with-promises\n'}, {'title': 'output console not showing process.stdout.write', 'body': '**I have this on my tasks.json**\n\n{\n    "version": "0.1.0",\n    "command": "cmd",\n    "options": {\n      "env": {\n        "NODE_ENV": "development"\n      }\n    },\n    "isShellCommand": true,\n    "args": ["/C"],\n    "tasks": [\n        {\n            "taskName": "Run node current file",\n            "args": ["node ", "${file}"],\n            "isBuildCommand": true,\n            "suppressTaskName": true\n        }\n    ]\n}\n\n**when running this script using the node task:**\n\n\'use strict\'\n\nvar os = require(\'os\')\nvar eol = os.EOL\nvar nl = \'hola \\r\\n\'\n\nconsole.log(os.uptime() + nl)\nconsole.log(os.type())\nconsole.log(\'h\', eol)\nconsole.log(eol)\nprocess.stdout.write(\'hello: x\')\n\n**the output is:**\n\n185583.3875537hola \nWindows_NT\nh \n\n**but on the console running node filename.js**\n\n185603.0488328hola\n\nWindows_NT\nh\n\nhello: x\n'}, {'title': 'Allow variables in launch.json config', 'body': 'Allowing a variable like \'${file}\', in "launch.json" would open up nice workflows.\n\nFor example, I want to launch the debugger with the current file as a parameter, so that I can run a specific test.\n\nRight now, I need to modify the launch.config every time I want to debug a single test.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOBz9PCQ==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Add more keyboard bindings for debug features', 'body': 'Add more keyboard bindings for debug features such as Add watch and evaluate in console.\n'}, {'title': '[js] Parameters of ArrowFunction in JavaScript, does not get syntax hightlighted', 'body': '`var a = function (value) { }`  this code highlights the parameter value \n`var a = (value) => { }` but this one does not. \n\nthis also happens in TypeScript.  is this intended?\n'}, {'title': 'vscode should have its own orgnization on github.', 'body': 'As more extensions  added to vscode, it is reasonable that all the vscode related stuff goes to one place that allow people to easily work with it.\n'}, {'title': '.ts and .d.ts files sharing the same filename interfere with each other', 'body': 'I have an in-house library written in TypeScript. It consists of two files: `promises.ts` and a `promises.d.ts` exposing related interfaces globally. The TypeScript compiler has no problem with this setup, and neither does IntelliJ, but VSCode seems to only "be aware" of the `promises.d.ts` content while I have it open as the active file. As soon as I close it or switch to another file, the interfaces declared in `promises.d.ts` get flagged as unknown.\nI have seen this on two different computers running VSCode. Both VSCode installations are currenty up to date. It also happens with other libraries using the same naming pattern.\nWe are not using TypeScript\'s "generate declaration files" setting.\n'}, {'title': 'Add "select all matches" command ', 'body': 'Similar to Sublime Text `cmd+ctrl+g` command which selects all the matches of current selection \n\nhttp://gfycat.com/DazzlingMeagerErin\n'}, {'title': '执行powershell显示乱码', 'body': '执行powershell时，output区域显示的中文乱码\n��ʹ�� -Command ����ָ���ˡ�-����������Ϊ -Command ָ�������κβ�����\n\nPowerShell[.exe] [-PSConsoleFile <�ļ�> | -Version <�汾>]\n    [-NoLogo] [-NoExit] [-Sta] [-Mta] [-NoProfile] [-NonInteractive]\n    [-InputFormat {Text | XML}] [-OutputFormat {Text | XML}]\n    [-WindowStyle <��ʽ>] [-EncodedCommand <Base64 ����������>]\n    [-File <�ļ�·��> <args>] [-ExecutionPolicy <ִ�в���>]\n    [-Command { - | <�ű���> [-args <��������>]\n                  | <�ַ���> [<�����в���>] } ]\n\nPowerShell[.exe] -Help | -? | /?\n\n-PSConsoleFile\n    ����ָ���� Windows PowerShell ����̨�ļ���\n    Ҫ��������̨�ļ������� Windows PowerShell ��ʹ�� Export-Console��\n\n-Version\n    ����ָ���汾�� Windows PowerShell��\n    ͨ���˲��������汾�ţ��� "-version 2.0"��\n\n-NoLogo\n    ����ʱ���ذ�Ȩ��־��\n\n-NoExit\n    �����������������˳���\n\n-Sta\n    ʹ�õ��̵߳�Ԫ���� Shell��\n    Ĭ��ֵΪ���̵߳�Ԫ(STA)��\n\n-Mta\n    ʹ�ö��̵߳�Ԫ���� Shell��\n\n-NoProfile\n    ������ Windows PowerShell �����ļ���\n\n-NonInteractive\n    �����û���ʾ����ʽ��ʾ��\n\n-InputFormat\n    �������͵� Windows PowerShell �����ݵĸ�ʽ��\n    ��ЧֵΪ "Text" (�ı��ַ���)�� "XML" (���л��� CLIXML ��ʽ)��\n\n-OutputFormat\n    ȷ���������� Windows PowerShell �������ݵĸ�ʽ��\n    ��ЧֵΪ "Text" (�ı��ַ���)�� "XML" (���л��� CLIXML ��ʽ)��\n\n-WindowStyle\n    ��������ʽ����Ϊ Normal��Minimized��Maximized �� Hidden��\n\n-EncodedCommand\n    ���� Base 64 �����ַ����汾�����\ue863\n    ʹ�ô˲����� Windows PowerShell �ύ��Ҫ��������\n    �������ŵ����\ue863\n\n-File\n    �ڱ���������("dot-sourced")������ָ���Ľű���\n    �Ա��ű������ĺ����ͱ��������ڵ�ǰ�Ự��ʹ�á�\n    �����ű��ļ�·�����κβ�����\n    File �����������е�����һ��������\n    ��Ϊ�� File �������ƺ����������ַ���������Ϊ\n    �������нű������Ľű��ļ�·����\n\n-ExecutionPolicy\n    ���õ�ǰ�Ự��Ĭ��ִ�в��ԣ�\n    �����䱣���� $env:PSExecutionPolicyPreference ���������С�\n    �ò�������������ע������\n    ���õ� Windows PowerShell ִ�в��ԡ�\n\n-Command\n    ִ��ָ��������(���κβ���)��\n    �ͺ����������� Windows PowerShell ������ʾ���¼�����һ����Ȼ���˳���\n    ����ָ���� NoExit��Command ֵ����Ϊ "-"���ַ�����\n    �ű��顣\n\n```\n���� Command ֵΪ "-"�����ӱ�\u05fc�����ж�ȡ\n�����ı���\n\n���� Command ֵΪ�ű��飬���ű�������\n�ô�����({})��������ֻ���� Windows PowerShell ������ PowerShell.exe ʱ��\n����ָ���ű��顣�ű�����������Ϊ�����л��� XML ����\n(���ǻ\uedaf����)���ص��� Shell��\n\n���� Command ֵΪ�ַ������� Command �����������е�����һ��������\n��Ϊ���������������������ַ�\n��������Ϊ����������\n\nҪ��д���� Windows PowerShell �������ַ�������ʹ�����¸�ʽ:\n"& {<����>}"\n���У����ű�ʾһ���ַ�����\n����������(&)ʹ�������ᱻִ�С�\n```\n\n-Help, -?, /?\n    ��ʾ����Ϣ�������� Windows PowerShell �м��� PowerShell.exe ���\ue8ec\n    ������������ǰ���������ַ�(-)��\n    ������������б��(/)���������� Cmd.exe ��ʹ�����ַ�����б�ܡ�\n'}, {'title': 'Accepting completion from IntelliSense now selects the part that got completed', 'body': 'This is annoying because when you continue typing after accepting a suggestion you delete it.\n'}, {'title': "Text blur when check 'Find All Reference'", 'body': 'Like this:\n![360 20151211174429](https://cloud.githubusercontent.com/assets/15178410/11741099/badd8e48-a031-11e5-9601-fea5a2cb85f5.png)\n'}, {'title': 'Bad suggestion sorting for TS compared to JS', 'body': 'Going for the for loop snippet:\n## JavaScript (snippet is close by):\n\n![forjs](https://cloud.githubusercontent.com/assets/5047891/11741172/7d04981c-9ff7-11e5-81c8-e99c45a0723c.gif)\n## TypeScript (snippet is after many non relevant suggestions):\n\n![forts](https://cloud.githubusercontent.com/assets/5047891/11741199/9802b338-9ff7-11e5-80d0-3bd0512679aa.gif)\n'}, {'title': 'multiline string break colouring', 'body': '![screen shot 2015-12-11 at 11 44 03](https://cloud.githubusercontent.com/assets/1794099/11741951/8aed44c4-9ffc-11e5-8738-03478944eebf.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0C-Dg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Mac: Keybinding conflicts detected', 'body': 'With latest I see this:\n\nConflict detected, command `cursorBottom` cannot be triggered by cmd+down\n//Users/bpasero/Development/monaco/out/vs/platform/keybinding/common/commonKeybindingResolver.js:70 Conflict detected, command `cursorTop` cannot be triggered by cmd+up\n//Users/bpasero/Development/monaco/out/vs/workbench/services/thread/electron-browser/threadService.js:196 [Plugin Host] debugger listening on port 5870\n//Users/bpasero/Development/monaco/out/vs/platform/keybinding/common/commonKeybindingResolver.js:70 Conflict detected, command `cursorBottom` cannot be triggered by cmd+down\n//Users/bpasero/Development/monaco/out/vs/platform/keybinding/common/commonKeybindingResolver.js:70 Conflict detected, command `cursorTop` cannot be triggered by cmd+up\n'}, {'title': 'Do not prompt to terminate running task when closing VS Code', 'body': 'We only prompt for data loss. IMHO we should just terminate the task\n\n![screen shot 2015-12-11 at 12 26 01](https://cloud.githubusercontent.com/assets/1926584/11742718/5e44994e-a002-11e5-81b5-e9aa44872e1b.png)\n'}, {'title': 'Support encoding and lf/crlf from status bar for diff editor', 'body': ''}, {'title': "[Cancel] buttom should in [Don't Save] buttom's right", 'body': 'In version 0.10.3, order like this:\n![360 20151211200033](https://cloud.githubusercontent.com/assets/15178410/11743502/029f08cc-a043-11e5-9515-535c0de97d11.png)\nThis is different from other app:\n![paint-save-dialog](https://cloud.githubusercontent.com/assets/15178410/11743680/5a6e5732-a044-11e5-8898-cbb09981f6fc.png)\n'}, {'title': 'Weird flashing when hovering', 'body': '- theme: Quite Light\n- double click on `TO_STRING_MAP` in `keyCodes.ts`\n- hover over various instances. \n\n![flashing](https://cloud.githubusercontent.com/assets/5047891/11743794/b2fe19c6-a00a-11e5-9aba-246a4e6b119d.gif)\n'}, {'title': 'Adopt TS 1.7.5', 'body': ''}, {'title': 'support to pass arguments to debug adapters', 'body': 'I would like to configure debug adapters to run in trace mode.\nSince passing a trace flag from the launch config would be too late, I would like to be able to configure command line arguments in the package.json of a debug extension.\n'}, {'title': 'Change horizontal scrolling to scroll the window', 'body': 'Currently when scrolling horizontally with a touchpad it moves the position of the cursor. Can there be an option added to scroll the window verses just moving the cursor?\n'}, {'title': 'Request: Add events to OutputChannel such as onHide and onShow', 'body': 'I am currently in the process of writing an extension that uses an output channel that is outputting live logs from an Azure Website from their Kudu APIs.\n\nCurrently the only way that the HTTP request will end is when the logstream API service times out after 20 minutes, I would much prefer to have the `outputChannel` have an event for `onHide` so that when the user hides/closes the outputChannel that the request stops processing, rather than further messages being pushed into it when it is not visible & that the user will need to re-invoke the extension to get new log messages\n'}, {'title': "[extension api] vscode.workspace.onDidOpenTextDocument can't be triggered", 'body': 'My extension is activated when code startup.\n\n```\n"activationEvents": [\n    "*"\n]\n```\n\nand the activate function like this \n\n```\nexport function activate() {\n    vscode.workspace.onDidOpenTextDocument((d)=>{\n        vscode.window.showInformationMessage("[Document Opened]:" + path.basename(d.fileName));\n    });\n}\n```\n\nBut vscode never showInformationMessage when startup although there are a document opened at first.\n\nI try to  use the `-logPluginHostCommunication` command line argument.\n\nI find that `_acceptModelAdd` be called before `$activatePluginInPluginHost`\n\n![1](https://cloud.githubusercontent.com/assets/7069719/11749753/884b301e-a06a-11e5-89e7-b09a2bc4b469.png)\n\nso it\'s too late to listen `onDidOpenTextDocument` when my extension is activated.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0HACA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '0.10.3: Changes in filesystem structure not always reflected in VSC', 'body': 'e.g. adding a controller using ember-cli on a command line. One needs to restart VSC in order to see the changes.\n\nMac OSX El Capitan.\n\nEDIT: Found the refresh button. Maybe this is a non-issue now. \nClosed\n'}, {'title': 'cant run the app from within the Applications folder on my Mac', 'body': 'vscode Version 0.10.3 (0.10.3)  Mac OS version 10.11.2\n'}, {'title': 'Question : how to manage VS Code with android studios? (same like VS code with Unity)?', 'body': 'will VS code possible to mange with android studios? same like the way VS code with Unity.\n'}, {'title': 'Crash on OS X 10.8.5', 'body': 'Process:         Electron [6002]\nPath:            /Users/USER/Downloads/Visual Studio Code 2.app/Contents/MacOS/Electron\nIdentifier:      com.microsoft.VSCode\nVersion:         0.10.3 (0.10.3)\nCode Type:       X86-64 (Native)\nParent Process:  launchd [262]\nUser ID:         501\n\nDate/Time:       2015-12-11 14:06:41.392 -0500\nOS Version:      Mac OS X 10.8.5 (12F45)\nReport Version:  10\n\nInterval Since Last Report:          4804424 sec\nCrashes Since Last Report:           47\nPer-App Crashes Since Last Report:   6\nAnonymous UUID:                      A22229CF-FF1D-7DF6-69D5-EDE175EA071B\n\nCrashed Thread:  0  Dispatch queue: com.apple.main-thread\n\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\nException Codes: KERN_INVALID_ADDRESS at 0x0000000000000000\n\nVM Regions Near 0:\n--> \n    __TEXT                 000000010a1a4000-000000010a1a5000 [    4K] r-x/rwx SM=COW  /Users/USER/Downloads/Visual Studio Code 2.app/Contents/MacOS/Electron\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff85c60670 strlen + 16\n1   com.github.electron.framework   0x000000010be99e62 0x10a1b0000 + 30318178\n2   com.github.electron.framework   0x000000010a2265a0 atom::AtomBrowserMainParts::PreMainMessageLoopStart() + 16\n3   com.github.electron.framework   0x000000010a8162d3 0x10a1b0000 + 6709971\n4   com.github.electron.framework   0x000000010a81badc 0x10a1b0000 + 6732508\n5   com.github.electron.framework   0x000000010a815ac7 0x10a1b0000 + 6707911\n6   com.github.electron.framework   0x000000010a79f9dc 0x10a1b0000 + 6224348\n7   com.github.electron.framework   0x000000010a79f036 0x10a1b0000 + 6221878\n8   com.github.electron.framework   0x000000010a1b218d AtomMain + 77\n9   com.microsoft.VSCode            0x000000010a1a4eea main + 58\n10  libdyld.dylib                   0x00007fff881197e1 start + 1\n\nThread 1:\n0   libsystem_kernel.dylib          0x00007fff863f46d6 __workq_kernreturn + 10\n1   libsystem_c.dylib               0x00007fff85c74f1c _pthread_workq_return + 25\n2   libsystem_c.dylib               0x00007fff85c74ce3 _pthread_wqthread + 412\n3   libsystem_c.dylib               0x00007fff85c5f191 start_wqthread + 13\n\nThread 2:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff863f4d16 kevent + 10\n1   libdispatch.dylib               0x00007fff8dd3ddea _dispatch_mgr_invoke + 883\n2   libdispatch.dylib               0x00007fff8dd3d9ee _dispatch_mgr_thread + 54\n\nThread 3:\n0   libsystem_kernel.dylib          0x00007fff863f46d6 __workq_kernreturn + 10\n1   libsystem_c.dylib               0x00007fff85c74f1c _pthread_workq_return + 25\n2   libsystem_c.dylib               0x00007fff85c74ce3 _pthread_wqthread + 412\n3   libsystem_c.dylib               0x00007fff85c5f191 start_wqthread + 13\n\nThread 4:: WorkerPool/13827\n0   libnode.dylib                   0x000000010e758e9c v8::internal::LAllocator::ProcessInstructions(v8::internal::HBasicBlock_, v8::internal::BitVector_) + 348\n1   libnode.dylib                   0x000000010e75a16f v8::internal::LAllocator::BuildLiveRanges() + 207\n2   libnode.dylib                   0x000000010e759dbc v8::internal::LAllocator::Allocate(v8::internal::LChunk_) + 396\n3   libnode.dylib                   0x000000010e76118f v8::internal::LChunk::NewChunk(v8::internal::HGraph_) + 255\n4   libnode.dylib                   0x000000010e594176 v8::internal::OptimizedCompileJob::OptimizeGraph() + 70\n5   libnode.dylib                   0x000000010e7c4c01 v8::internal::OptimizingCompileDispatcher::CompileNext(v8::internal::OptimizedCompileJob*) + 33\n6   libnode.dylib                   0x000000010e7c5bb6 0x10e100000 + 7101366\n7   com.github.electron.framework   0x000000010a37be42 0x10a1b0000 + 1883714\n8   com.github.electron.framework   0x000000010a37633b 0x10a1b0000 + 1860411\n9   libsystem_c.dylib               0x00007fff85c72772 _pthread_start + 327\n10  libsystem_c.dylib               0x00007fff85c5f1a1 thread_start + 13\n\nThread 0 crashed with X86 Thread State (64-bit):\n  rax: 0x00000000ffffffff  rbx: 0x0000000000000000  rcx: 0x0000000000000000  rdx: 0x0000000000000000\n  rdi: 0x0000000000000000  rsi: 0x00007fff89738990  rbp: 0x00007fff55a5b950  rsp: 0x00007fff55a5b918\n   r8: 0x00007fef69c10780   r9: 0x0000000046364c5f  r10: 0x00007fef69806060  r11: 0x00007fff8ad560f1\n  r12: 0x0000000000000000  r13: 0x0000000000000000  r14: 0x000000010da7ee05  r15: 0x00007fef698099b8\n  rip: 0x00007fff85c60670  rfl: 0x0000000000010286  cr2: 0x0000000000000000\nLogical CPU: 3\n\nBinary Images:\n       0x10a1a4000 -        0x10a1a4ff7 +com.microsoft.VSCode (0.10.3 - 0.10.3) <074B4136-D76D-3961-89C9-63A495167516> /Users/USER/Downloads/Visual Studio Code 2.app/Contents/MacOS/Electron\n       0x10a1b0000 -        0x10d7dcf97 +com.github.electron.framework (0) <6AE465ED-B1E7-3484-9CE0-AFC35A71CBFF> /Users/USER/Downloads/Visual Studio Code 2.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework\n       0x10dfbd000 -        0x10dfd2ff7 +com.github.Squirrel (1.0 - 1) <C39DE518-902E-3EBE-B1A6-B4E7AE668521> /Users/USER/Downloads/Visual Studio Code 2.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel\n       0x10dff5000 -        0x10e058ff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/Downloads/Visual Studio Code 2.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa\n       0x10e0d2000 -        0x10e0e6fff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/Downloads/Visual Studio Code 2.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle\n       0x10e100000 -        0x10ecb9ff7 +libnode.dylib (0) <E7F96864-5A6F-37C4-B7A9-006481491759> /Users/USER/Downloads/Visual Studio Code 2.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib\n       0x10f0ac000 -        0x10f0f6ff7  com.apple.audio.midi.CoreMIDI (1.9 - 78) <67E0B007-AE92-337E-A714-3455729EE240> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI\n       0x10f121000 -        0x10fab1627  com.apple.CoreGraphics (1.600.0 - 333.1) <C085C074-7260-3C3D-90C6-A65D3CB2BD41> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    0x7fff69da4000 -     0x7fff69dd893f  dyld (210.2.3) <36CAA36E-72BC-3E48-96D9-B96A2DF77730> /usr/lib/dyld\n    0x7fff818e3000 -     0x7fff818feff7  libexpat.1.dylib (12) <95D59F1F-0A5C-3F33-BA97-26F7D796CE7A> /usr/lib/libexpat.1.dylib\n    0x7fff81904000 -     0x7fff81a1dfff  com.apple.ImageIO.framework (3.2.2 - 851) <6552C673-9F29-3B31-A12E-C4391A950965> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    0x7fff81a4f000 -     0x7fff81badfef  com.apple.MediaControlSender (1.7 - 170.20) <853BE89D-49B0-3922-9ED5-DDBDE9A97356> /System/Library/PrivateFrameworks/MediaControlSender.framework/Versions/A/MediaControlSender\n    0x7fff81be9000 -     0x7fff81bedfff  libGIF.dylib (851) <AD40D084-6E34-38CD-967D-705F94B188DA> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\n    0x7fff81bff000 -     0x7fff81c01ff7  com.apple.print.framework.Print (8.0 - 258) <8F243E49-021F-3892-B555-3010A7F450A2> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\n    0x7fff81c02000 -     0x7fff81c38ff7  libsystem_info.dylib (406.17) <C9BA1024-043C-3BD5-908F-AF709E05DEE4> /usr/lib/system/libsystem_info.dylib\n    0x7fff81c6b000 -     0x7fff81c6cfff  libsystem_blocks.dylib (59) <D92DCBC3-541C-37BD-AADE-ACC75A0C59C8> /usr/lib/system/libsystem_blocks.dylib\n    0x7fff81c6d000 -     0x7fff81c95fff  libJPEG.dylib (851) <64A3EB03-34FB-308C-817B-6106D1F4D80F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\n    0x7fff81c9c000 -     0x7fff81ccdff7  com.apple.DictionaryServices (1.2 - 184.4) <FB0540FF-5034-3591-A28D-6887FBC220F7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\n    0x7fff81cce000 -     0x7fff81d93ff7  com.apple.coreui (2.0 - 181.1) <83D2C92D-6842-3C9D-9289-39D5B4554C3A> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\n    0x7fff81d94000 -     0x7fff8218bfff  libLAPACK.dylib (1073.4) <D632EC8B-2BA0-3853-800A-20DA00A1091C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\n    0x7fff8218c000 -     0x7fff82191fff  libcache.dylib (57) <65187C6E-3FBF-3EB8-A1AA-389445E2984D> /usr/lib/system/libcache.dylib\n    0x7fff82192000 -     0x7fff82198fff  com.apple.DiskArbitration (2.5.2 - 2.5.2) <C713A35A-360E-36CE-AC0A-25C86A3F50CA> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    0x7fff823b5000 -     0x7fff823f2fef  libGLImage.dylib (8.10.1) <91E31B9B-4141-36D5-ABDC-20F1D6D1D0CF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\n    0x7fff823f3000 -     0x7fff8244aff7  com.apple.ScalableUserInterface (1.0 - 1) <93C14595-6172-37E9-88F2-CBC80A1C54D0> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/ScalableUserInterface.framework/Versions/A/ScalableUserInterface\n    0x7fff8244b000 -     0x7fff8271cff7  com.apple.security (7.0 - 55179.13) <F428E306-C407-3B55-BA82-E58755E8A76F> /System/Library/Frameworks/Security.framework/Versions/A/Security\n    0x7fff8271d000 -     0x7fff8276afff  com.apple.CoreMediaIO (309.0 - 4163.1) <8FD1C1A9-25C5-3B9E-A76D-BE813253B358> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO\n    0x7fff8276b000 -     0x7fff82779fff  libcommonCrypto.dylib (60027) <BAAFE0C9-BB86-3CA7-88C0-E3CBA98DA06F> /usr/lib/system/libcommonCrypto.dylib\n    0x7fff8277a000 -     0x7fff827bdff7  com.apple.bom (12.0 - 192) <0EFE0F2D-B6DE-3D1E-93C2-EED6D96F70A2> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom\n    0x7fff8281b000 -     0x7fff8283cfff  com.apple.Ubiquity (1.2 - 243.15) <C9A7EE77-B637-3676-B667-C0843BBB0409> /System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity\n    0x7fff8283d000 -     0x7fff82dadff7  com.apple.CoreAUC (6.22.03 - 6.22.03) <A77BC97A-B695-3F7E-8696-5B2357C2726B> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC\n    0x7fff82dc3000 -     0x7fff82dc3fff  libkeymgr.dylib (25) <CC9E3394-BE16-397F-926B-E579B60EE429> /usr/lib/system/libkeymgr.dylib\n    0x7fff82dc4000 -     0x7fff82dcafff  libmacho.dylib (829) <BF332AD9-E89F-387E-92A4-6E1AB74BD4D9> /usr/lib/system/libmacho.dylib\n    0x7fff82e08000 -     0x7fff82e36ff7  libsystem_m.dylib (3022.6) <11B6081D-6212-3EAB-9975-BED6234BD6A5> /usr/lib/system/libsystem_m.dylib\n    0x7fff82e37000 -     0x7fff830dbff7  com.apple.CoreImage (8.4.0 - 1.0.1) <CC6DD22B-FFC6-310B-BE13-2397A02C79EF> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage\n    0x7fff8312a000 -     0x7fff8332afff  libicucore.A.dylib (491.11.3) <5783D305-04E8-3D17-94F7-1CEAFA975240> /usr/lib/libicucore.A.dylib\n    0x7fff8332b000 -     0x7fff8332cff7  libdnsinfo.dylib (453.19) <14202FFB-C3CA-3FCC-94B0-14611BF8692D> /usr/lib/system/libdnsinfo.dylib\n    0x7fff8332d000 -     0x7fff83331fff  libpam.2.dylib (20) <C8F45864-5B58-3237-87E1-2C258A1D73B8> /usr/lib/libpam.2.dylib\n    0x7fff83334000 -     0x7fff83436fff  libJP2.dylib (851) <26FFBDBF-9CCE-33D7-A45B-0A31C98DA37E> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\n    0x7fff83437000 -     0x7fff834e8fff  com.apple.LaunchServices (539.9 - 539.9) <07FC6766-778E-3479-8F28-D2C9917E1DD1> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\n    0x7fff834e9000 -     0x7fff834fcff7  libbsm.0.dylib (32) <F497D3CE-40D9-3551-84B4-3D5E39600737> /usr/lib/libbsm.0.dylib\n    0x7fff834fd000 -     0x7fff8364ffff  com.apple.audio.toolbox.AudioToolbox (1.9.2 - 1.9.2) <DC5F3D1B-036A-37DE-BC24-7636DC95EA1C> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\n    0x7fff836a0000 -     0x7fff836aafff  com.apple.speech.recognition.framework (4.1.5 - 4.1.5) <5A4B532E-3428-3F0A-8032-B0AFFF72CA3D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\n    0x7fff836f7000 -     0x7fff836fffff  liblaunch.dylib (442.26.2) <2F71CAF8-6524-329E-AC56-C506658B4C0C> /usr/lib/system/liblaunch.dylib\n    0x7fff83745000 -     0x7fff83745fff  com.apple.Accelerate (1.8 - Accelerate 1.8) <878A6E7E-CB34-380F-8212-47FBF12C7C96> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\n    0x7fff837d6000 -     0x7fff839c0ff7  com.apple.CoreFoundation (6.8 - 744.19) <0F7403CA-2CB8-3D0A-992B-679701DF27CA> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n    0x7fff839c1000 -     0x7fff83a40ff7  com.apple.securityfoundation (6.0 - 55115.4) <8676E0DF-295F-3690-BDAA-6C9C1D210B88> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\n    0x7fff83a70000 -     0x7fff83a9cfff  com.apple.framework.Apple80211 (8.5 - 850.252) <73506CA1-CF76-3A98-A6F2-3DDAC10CB67A> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\n    0x7fff83afb000 -     0x7fff83e2bfff  com.apple.HIToolbox (2.0 - 626.1) <656D08C2-9068-3532-ABDD-32EC5057CCB2> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\n    0x7fff83e2c000 -     0x7fff83ec7fff  com.apple.CoreSymbolication (3.0 - 117) <7D43ED93-BD81-338C-8076-6A932A1D19E8> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\n    0x7fff83f03000 -     0x7fff83f71ff7  com.apple.framework.IOKit (2.0.1 - 755.42.1) <A90038ED-48F2-3CC9-A042-53A3D7985844> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    0x7fff83f72000 -     0x7fff83fceff7  com.apple.Symbolication (1.3 - 93) <D3AAB36A-D5EB-3044-BE9D-0B77E64C00FC> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\n    0x7fff83fcf000 -     0x7fff83fd0ff7  libsystem_sandbox.dylib (220.3) <B739DA63-B675-387A-AD84-412A651143C0> /usr/lib/system/libsystem_sandbox.dylib\n    0x7fff847b7000 -     0x7fff847b9fff  libCVMSPluginSupport.dylib (8.10.1) <F0239392-E0CB-37D7-BFE2-D6F5D42F9196> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\n    0x7fff847ba000 -     0x7fff847d9ff7  libresolv.9.dylib (51) <0882DC2D-A892-31FF-AD8C-0BB518C48B23> /usr/lib/libresolv.9.dylib\n    0x7fff84c16000 -     0x7fff84c38ff7  libxpc.dylib (140.43) <70BC645B-6952-3264-930C-C835010CCEF9> /usr/lib/system/libxpc.dylib\n    0x7fff84c89000 -     0x7fff84d2fff7  com.apple.CoreServices.OSServices (557.6 - 557.6) <FFDDD2D8-690D-388F-A48F-4750A792D2CD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\n    0x7fff84d30000 -     0x7fff84d7ffff  com.apple.framework.CoreWiFi (1.3 - 130.13) <CCF3D8E3-CD1C-36CD-929A-C9972F833F24> /System/Library/Frameworks/CoreWiFi.framework/Versions/A/CoreWiFi\n    0x7fff84dc7000 -     0x7fff84e1eff7  com.apple.AppleVAFramework (5.0.19 - 5.0.19) <541A7DBE-F8E4-3023-A3C0-8D5A2A550CFB> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\n    0x7fff84e2e000 -     0x7fff84e3bfff  libbz2.1.0.dylib (29) <CE9785E8-B535-3504-B392-82F0064D9AF2> /usr/lib/libbz2.1.0.dylib\n    0x7fff8535a000 -     0x7fff85362ff7  libsystem_dnssd.dylib (379.38.1) <BDCB8566-0189-34C0-9634-35ABD3EFE25B> /usr/lib/system/libsystem_dnssd.dylib\n    0x7fff853f2000 -     0x7fff853f2ffd  com.apple.audio.units.AudioUnit (1.9.2 - 1.9.2) <6D314680-7409-3BC7-A807-36341411AF9A> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\n    0x7fff853f3000 -     0x7fff8541afff  com.apple.framework.familycontrols (4.1 - 410) <50F5A52C-8FB6-300A-977D-5CFDE4D5796B> /System/Library/PrivateFrameworks/FamilyControls.framework/Versions/A/FamilyControls\n    0x7fff8541b000 -     0x7fff8547afff  com.apple.AE (645.6 - 645.6) <44F403C1-660A-3543-AB9C-3902E02F936F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\n    0x7fff8547b000 -     0x7fff85498ff7  com.apple.openscripting (1.3.6 - 148.3) <C008F56A-1E01-3D4C-A9AF-97799D0FAE69> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\n    0x7fff85499000 -     0x7fff854eaff7  com.apple.SystemConfiguration (1.12.2 - 1.12.2) <581BF463-C15A-363B-999A-E830222FA925> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    0x7fff854ed000 -     0x7fff854eefff  libDiagnosticMessagesClient.dylib (8) <8548E0DC-0D2F-30B6-B045-FE8A038E76D8> /usr/lib/libDiagnosticMessagesClient.dylib\n    0x7fff8585e000 -     0x7fff85860fff  libquarantine.dylib (52.1) <143B726E-DF47-37A8-90AA-F059CFD1A2E4> /usr/lib/system/libquarantine.dylib\n    0x7fff85aef000 -     0x7fff85bacff7  com.apple.ColorSync (4.8.0 - 4.8.0) <73BE495D-8985-3B88-A7D0-23DF0CB50304> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\n    0x7fff85bad000 -     0x7fff85bb0fff  libRadiance.dylib (851) <C317B2C7-CA3A-329F-B6DC-7CC33FE08C81> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\n    0x7fff85bb1000 -     0x7fff85bb5ff7  com.apple.CommonPanels (1.2.5 - 94) <5F81D593-4B87-3DCC-B934-625D436B4CB1> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\n    0x7fff85c08000 -     0x7fff85c5dff7  libTIFF.dylib (851) <7706BB07-E7E8-38BE-A5F0-D8B63E3B9283> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\n    0x7fff85c5e000 -     0x7fff85d2aff7  libsystem_c.dylib (825.40.1) <543B05AE-CFA5-3EFE-8E58-77225411BA6B> /usr/lib/system/libsystem_c.dylib\n    0x7fff860e5000 -     0x7fff86130fff  com.apple.CoreMedia (1.0 - 926.106) <64467905-48DC-37F9-9F32-186768CF2640> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\n    0x7fff862e3000 -     0x7fff8630aff7  com.apple.PerformanceAnalysis (1.16 - 16) <1BDA3662-18B7-3F38-94E5-9ACD477A7682> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\n    0x7fff863ab000 -     0x7fff863e1fff  com.apple.DebugSymbols (98 - 98) <7059F71D-9A82-3D32-99BB-E043DEDA6174> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\n    0x7fff863e2000 -     0x7fff863fdff7  libsystem_kernel.dylib (2050.48.12) <4B7993C3-F62D-3AC1-AF92-414A0D6EED5E> /usr/lib/system/libsystem_kernel.dylib\n    0x7fff86459000 -     0x7fff86470fff  com.apple.CFOpenDirectory (10.8 - 151.10) <10F41DA4-AD54-3F52-B898-588D9A117171> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\n    0x7fff86471000 -     0x7fff86788ff7  com.apple.CoreServices.CarbonCore (1037.6 - 1037.6) <1E567A52-677F-3168-979F-5FBB0818D52B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\n    0x7fff86789000 -     0x7fff86796ff7  com.apple.NetAuth (4.0 - 4.0) <A4A21A2F-B26A-3DC9-95E4-DAFA43A4A2C3> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\n    0x7fff86797000 -     0x7fff86797fff  com.apple.CoreServices (57 - 57) <45F1466A-8264-3BB7-B0EC-E5E5BFBED143> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    0x7fff86798000 -     0x7fff86800fff  libvDSP.dylib (380.10) <3CA154A3-1BE5-3CF4-BE48-F0A719A963BB> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\n    0x7fff86801000 -     0x7fff8688eff7  com.apple.SearchKit (1.4.0 - 1.4.0) <54A8069C-E497-3B07-BEA7-D3BC9DB5B649> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\n    0x7fff868f4000 -     0x7fff86a0c92f  libobjc.A.dylib (532.2) <90D31928-F48D-3E37-874F-220A51FD9E37> /usr/lib/libobjc.A.dylib\n    0x7fff86a0d000 -     0x7fff86b0afff  libsqlite3.dylib (138.1) <ADE9CB98-D77D-300C-A32A-556B7440769F> /usr/lib/libsqlite3.dylib\n    0x7fff86b0b000 -     0x7fff86b4ffff  libcups.2.dylib (327.7) <9F35B58A-F47E-348A-8E09-E235FA4B9270> /usr/lib/libcups.2.dylib\n    0x7fff86b50000 -     0x7fff86c2afff  com.apple.backup.framework (1.4.3 - 1.4.3) <6B65C44C-7777-3331-AD9D-438D10AAC777> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\n    0x7fff86c2f000 -     0x7fff86c33fff  libCoreVMClient.dylib (32.5) <DB009CD4-BB0E-3331-BBB4-A118781D193F> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\n    0x7fff86c49000 -     0x7fff86c5ffff  com.apple.MultitouchSupport.framework (237.4 - 237.4) <0F7FEE29-161B-3D8E-BE91-308CBD354461> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\n    0x7fff86c60000 -     0x7fff86c64ff7  com.apple.TCC (1.0 - 1) <F2F3B753-FC73-3543-8BBE-859FDBB4D6A6> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\n    0x7fff8751c000 -     0x7fff87531fff  com.apple.ImageCapture (8.0 - 8.0) <71B24609-DEE9-3927-9C82-62E72270299C> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\n    0x7fff87532000 -     0x7fff87539fff  libGFXShared.dylib (8.10.1) <B4AB9480-2CDB-34F8-8D6F-F5A2CFC221B0> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\n    0x7fff87657000 -     0x7fff87663fff  com.apple.CoreBluetooth (100.9 - 1) <94C4EAB8-20E6-3892-BD9E-27952318CF32> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\n    0x7fff87664000 -     0x7fff87664fff  libOpenScriptingUtil.dylib (148.3) <F8681222-0969-3B10-8BCE-C55A4B9C520C> /usr/lib/libOpenScriptingUtil.dylib\n    0x7fff876a9000 -     0x7fff8777bff7  com.apple.CoreText (260.0 - 275.17) <AB493289-E188-3CCA-8658-1E5039715F82> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    0x7fff8777c000 -     0x7fff877a7fff  libxslt.1.dylib (11.3) <441776B8-9130-3893-956F-39C85FFA644F> /usr/lib/libxslt.1.dylib\n    0x7fff877a8000 -     0x7fff87829fff  com.apple.Metadata (10.7.0 - 707.12) <69E3EEF7-8B7B-3652-8320-B8E885370E56> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\n    0x7fff8782a000 -     0x7fff8782afff  com.apple.ApplicationServices (45 - 45) <5302CC85-D534-3FE5-9E56-CA16762177F6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    0x7fff8782b000 -     0x7fff87885fff  com.apple.print.framework.PrintCore (8.3 - 387.2) <5BA0CBED-4D80-386A-9646-F835C9805B71> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\n    0x7fff87898000 -     0x7fff878b7ff7  com.apple.ChunkingLibrary (2.0 - 133.3) <8BEC9AFB-DCAA-37E8-A5AB-24422B234ECF> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\n    0x7fff878db000 -     0x7fff878e1ff7  libunwind.dylib (35.1) <21703D36-2DAB-3D8B-8442-EAAB23C060D3> /usr/lib/system/libunwind.dylib\n    0x7fff8792a000 -     0x7fff87941fff  libGL.dylib (8.10.1) <F8BABA3C-7810-3A65-83FC-61945AA50E90> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\n    0x7fff879bd000 -     0x7fff879c4fff  com.apple.NetFS (5.0 - 4.0) <195D8EC9-72BB-3E04-A64D-E1A89B4850C1> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\n    0x7fff879c9000 -     0x7fff879d4fff  libsystem_notify.dylib (98.5) <C49275CC-835A-3207-AFBA-8C01374927B6> /usr/lib/system/libsystem_notify.dylib\n    0x7fff879d5000 -     0x7fff879f7ff7  com.apple.Kerberos (2.0 - 1) <416543F5-E7AF-3269-843F-C8CDA8DD0FFA> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\n    0x7fff879f8000 -     0x7fff87a22ff7  com.apple.CoreVideo (1.8 - 99.4) <E5082966-6D81-3973-A05A-38AA5B85F886> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\n    0x7fff87a86000 -     0x7fff87aeeff7  libc++.1.dylib (65.1) <E5A0C88E-0837-3015-A987-F8C5A0D35DD6> /usr/lib/libc++.1.dylib\n    0x7fff87aef000 -     0x7fff87b89fff  libvMisc.dylib (380.10) <A7F12764-A94C-36EB-88E0-F826F5AF55B4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\n    0x7fff87b8a000 -     0x7fff87bd6fff  com.apple.framework.CoreWLAN (3.4 - 340.18) <3735FB49-30C0-3B11-BE25-2ACDD96041B5> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\n    0x7fff87bd7000 -     0x7fff87be6fff  com.apple.opengl (1.8.10 - 1.8.10) <AD49CF56-B7C1-3598-8610-58532FC41345> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n    0x7fff87be7000 -     0x7fff87d58ff7  com.apple.QTKit (7.7.1 - 2599.41) <A645347D-3EEC-34A7-8051-A57AC60151EF> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit\n    0x7fff87dc4000 -     0x7fff87e1afff  com.apple.HIServices (1.20 - 417) <BCD36950-013F-35C2-918E-05A93A47BE8C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\n    0x7fff87e1b000 -     0x7fff87e2eff7  com.apple.LangAnalysis (1.7.0 - 1.7.0) <023D909C-3AFA-3438-88EB-05D0BDA5AFFE> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\n    0x7fff87e7a000 -     0x7fff87e83ff7  com.apple.CommerceCore (1.0 - 26.2) <AF35874A-6FA7-328E-BE30-8BBEF0B741A8> /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Frameworks/CommerceCore.framework/Versions/A/CommerceCore\n    0x7fff87e84000 -     0x7fff8800afff  libBLAS.dylib (1073.4) <C102C0F6-8CB6-3B49-BA6B-2EB61F0B2784> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\n    0x7fff8800b000 -     0x7fff8800dff7  libunc.dylib (25) <2FDC94A7-3039-3680-85F3-2164E63B464D> /usr/lib/system/libunc.dylib\n    0x7fff8803b000 -     0x7fff8803bfff  com.apple.Cocoa (6.7 - 19) <3CFC90D2-2BE9-3E5C-BFDB-5E161A2C2B29> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\n    0x7fff8803c000 -     0x7fff88076ff7  com.apple.GSS (3.0 - 2.0) <423BDFCC-9187-3F3E-ABB0-D280003EB15E> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\n    0x7fff88117000 -     0x7fff8811aff7  libdyld.dylib (210.2.3) <F59367C9-C110-382B-A695-9035A6DD387E> /usr/lib/system/libdyld.dylib\n    0x7fff8866b000 -     0x7fff88676ff7  com.apple.bsd.ServiceManagement (2.0 - 2.0) <C12962D5-85FB-349E-AA56-64F4F487F219> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\n    0x7fff88677000 -     0x7fff887ecff7  com.apple.CFNetwork (596.5 - 596.5) <22372475-6EF4-3A04-83FC-C061FE4717B3> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    0x7fff888b1000 -     0x7fff88cedfff  com.apple.VideoToolbox (1.0 - 926.106) <B1185D9D-02AC-3D27-B894-21B1179F2AEF> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\n    0x7fff88cee000 -     0x7fff88ceefff  com.apple.Accelerate.vecLib (3.8 - vecLib 3.8) <F565B686-24E2-39F2-ACC3-C5E4084476BE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff88d95000 -     0x7fff88db5fff  libPng.dylib (851) <3466F35C-EC1A-3D1A-80DC-175857FA19D5> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\n    0x7fff88db6000 -     0x7fff899e3fff  com.apple.AppKit (6.8 - 1187.40) <F12CF463-6F88-32ED-9EBA-0FA2AD3CF576> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    0x7fff899e9000 -     0x7fff899f7ff7  libsystem_network.dylib (77.10) <2AAA67A1-525E-38F0-8028-1D2B64716611> /usr/lib/system/libsystem_network.dylib\n    0x7fff899f8000 -     0x7fff89a37ff7  com.apple.QD (3.42.1 - 285.1) <77A20C25-EBB5-341C-A05C-5D458B97AD5C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\n    0x7fff89a38000 -     0x7fff89e55fff  FaceCoreLight (2.4.1) <DDAFFD7A-D312-3407-A010-5AEF3E17831B> /System/Library/PrivateFrameworks/FaceCoreLight.framework/Versions/A/FaceCoreLight\n    0x7fff89e56000 -     0x7fff89e6dfff  com.apple.GenerationalStorage (1.1 - 132.3) <FD4A84B3-13A8-3C60-A59E-25A361447A17> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\n    0x7fff89e80000 -     0x7fff89e8eff7  libkxld.dylib (2050.48.12) <B8F7ED1F-CF84-3777-9183-0A1C513DF81F> /usr/lib/system/libkxld.dylib\n    0x7fff8ab65000 -     0x7fff8ac85fff  com.apple.desktopservices (1.7.4 - 1.7.4) <ED3DA8C0-160F-3CDC-B537-BF2E766AB7C1> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\n    0x7fff8ac86000 -     0x7fff8acc9ff7  com.apple.RemoteViewServices (2.0 - 80.6) <5CFA361D-4853-3ACC-9EFC-A2AC1F43BA4B> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\n    0x7fff8ace3000 -     0x7fff8ace7fff  com.apple.IOSurface (86.0.4 - 86.0.4) <26F01CD4-B76B-37A3-989D-66E8140542B3> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\n    0x7fff8ace8000 -     0x7fff8b047fff  com.apple.Foundation (6.8 - 945.18) <1D7E58E6-FA3A-3CE8-AC85-B9D06B8C0AA0> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    0x7fff8b048000 -     0x7fff8b04afff  com.apple.securityhi (4.0 - 55002) <26E6D477-EF61-351F-BA8C-67824AA231C6> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\n    0x7fff8b04b000 -     0x7fff8b165fff  com.apple.coreavchd (5.6.0 - 5600.4.16) <85670361-96CA-3805-B981-B41B47E99A37> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD\n    0x7fff8b166000 -     0x7fff8b18bff7  libc++abi.dylib (26) <D86169F3-9F31-377A-9AF3-DB17142052E4> /usr/lib/libc++abi.dylib\n    0x7fff8b18c000 -     0x7fff8b1f9ff7  com.apple.datadetectorscore (4.1 - 269.3) <5775F0DB-87D6-310D-8B03-E2AD729EFB28> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\n    0x7fff8b1fa000 -     0x7fff8b205fff  com.apple.CommonAuth (3.0 - 2.0) <1CA95702-DDC7-3ADB-891E-7F037ABDDA14> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\n    0x7fff8b592000 -     0x7fff8b5a6fff  com.apple.speech.synthesis.framework (4.1.12 - 4.1.12) <94EDF2AB-809C-3D15-BED5-7AD45B2A7C16> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\n    0x7fff8b5a7000 -     0x7fff8b645ff7  com.apple.ink.framework (10.8.2 - 150) <3D8D16A2-7E01-3EA1-B637-83A36D353308> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\n    0x7fff8b646000 -     0x7fff8b6a9fff  com.apple.audio.CoreAudio (4.1.2 - 4.1.2) <FEAB83AB-1DE5-3813-BA48-7A7F2374CCF0> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\n    0x7fff8b8f3000 -     0x7fff8b902ff7  libxar.1.dylib (105) <B6A7C8AA-3E20-3A1D-A7BA-4FD0052FA508> /usr/lib/libxar.1.dylib\n    0x7fff8b903000 -     0x7fff8b904ff7  libSystem.B.dylib (169.3) <92475A81-385C-32B9-9D6D-38E4BAC90996> /usr/lib/libSystem.B.dylib\n    0x7fff8b905000 -     0x7fff8ba02ff7  libxml2.2.dylib (22.3) <7FD09F53-83DA-3ECD-8DD9-870E1A2F0427> /usr/lib/libxml2.2.dylib\n    0x7fff8ba9f000 -     0x7fff8bb08fff  libstdc++.6.dylib (56) <EAA2B53E-EADE-39CF-A0EF-FB9D4940672A> /usr/lib/libstdc++.6.dylib\n    0x7fff8be06000 -     0x7fff8be18ff7  libz.1.dylib (43) <2A1551E8-A272-3DE5-B692-955974FE1416> /usr/lib/libz.1.dylib\n    0x7fff8be19000 -     0x7fff8bf0efff  libiconv.2.dylib (34) <FEE8B996-EB44-37FA-B96E-D379664DEFE1> /usr/lib/libiconv.2.dylib\n    0x7fff8bf0f000 -     0x7fff8bf12fff  com.apple.help (1.3.2 - 42) <418A9A41-BCB4-32A2-97ED-3A388F69CA9D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\n    0x7fff8bf13000 -     0x7fff8bf1ffff  com.apple.CrashReporterSupport (10.8.3 - 418) <DE6AFE16-D97E-399D-82ED-3522C773C36E> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\n    0x7fff8bf65000 -     0x7fff8bfafff7  libGLU.dylib (8.10.1) <6699DEA6-9EEB-3B84-A57F-B25AE44EC584> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\n    0x7fff8bfb0000 -     0x7fff8bfffff7  libFontRegistry.dylib (100) <F7EC0287-58E4-3ABE-A45E-B105A68EA76E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\n    0x7fff8c0ff000 -     0x7fff8c100ff7  libremovefile.dylib (23.2) <6763BC8E-18B8-3AD9-8FFA-B43713A7264F> /usr/lib/system/libremovefile.dylib\n    0x7fff8c163000 -     0x7fff8c311fff  com.apple.QuartzCore (1.8 - 304.3) <F450F2DE-2F24-3557-98B6-310E05DAC17F> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\n    0x7fff8c3a7000 -     0x7fff8c3acfff  libcompiler_rt.dylib (30) <08F8731D-5961-39F1-AD00-4590321D24A9> /usr/lib/system/libcompiler_rt.dylib\n    0x7fff8c3ad000 -     0x7fff8c664ff7  com.apple.MediaToolbox (1.0 - 926.106) <57043584-98E7-375A-89AE-F46480AA5D97> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox\n    0x7fff8d62e000 -     0x7fff8d630fff  com.apple.TrustEvaluationAgent (2.0 - 23) <A97D348B-32BF-3E52-8DF2-59BFAD21E1A3> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\n    0x7fff8d631000 -     0x7fff8d63efff  com.apple.AppleFSCompression (49 - 1.0) <E616053D-D3C2-3600-B8DF-A5E0D9665634> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\n    0x7fff8d72c000 -     0x7fff8d77bff7  libcorecrypto.dylib (106.2) <CE0C29A3-C420-339B-ADAA-52F4683233CC> /usr/lib/system/libcorecrypto.dylib\n    0x7fff8d7d1000 -     0x7fff8d883fff  com.apple.Bluetooth (4.1.7 - 4.1.7f4) <675C5A3B-7C69-382E-9A88-657409EC4197> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\n    0x7fff8d99e000 -     0x7fff8daa9fff  libFontParser.dylib (84.6) <96C42E49-79A6-3475-B5E4-6A782599A6DA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\n    0x7fff8daaa000 -     0x7fff8dc45fef  com.apple.vImage (6.0 - 6.0) <FAE13169-295A-33A5-8E6B-7C2CC1407FA7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\n    0x7fff8dc46000 -     0x7fff8dc4dfff  libcopyfile.dylib (89) <876573D0-E907-3566-A108-577EAD1B6182> /usr/lib/system/libcopyfile.dylib\n    0x7fff8dc4e000 -     0x7fff8dcceff7  com.apple.ApplicationServices.ATS (332 - 341.1) <39B53565-FA31-3F61-B090-C787C983142E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\n    0x7fff8dccf000 -     0x7fff8dcd0fff  liblangid.dylib (116) <864C409D-D56B-383E-9B44-A435A47F2346> /usr/lib/liblangid.dylib\n    0x7fff8dd39000 -     0x7fff8dd4eff7  libdispatch.dylib (228.23) <D26996BF-FC57-39EB-8829-F63585561E09> /usr/lib/system/libdispatch.dylib\n    0x7fff8dd64000 -     0x7fff8dd69fff  com.apple.OpenDirectory (10.8 - 151.10) <1F47EC96-7403-3690-8D8D-C31D3B6FDA0A> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\n    0x7fff8dd6a000 -     0x7fff8ddecff7  com.apple.Heimdal (3.0 - 2.0) <ACF0C667-5ACC-382A-A998-61E85386C814> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\n    0x7fff8de15000 -     0x7fff8de61ff7  libauto.dylib (185.4) <AD5A4CE7-CB53-313C-9FAE-673303CC2D35> /usr/lib/libauto.dylib\n    0x7fff8de62000 -     0x7fff8de62fff  com.apple.vecLib (3.8 - vecLib 3.8) <6CBBFDC4-415C-3910-9558-B67176447789> /System/Library/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff8ded3000 -     0x7fff8deedfff  com.apple.CoreMediaAuthoring (2.1 - 914) <23F2B9D0-7B73-3C42-8EDC-8ADBF9C7B8C2> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring\n    0x7fff8df06000 -     0x7fff8df06fff  com.apple.Carbon (154 - 155) <1B2846B1-384E-3D1C-8999-201215723349> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    0x7fff8df0a000 -     0x7fff8df64ff7  com.apple.opencl (2.2.19 - 2.2.19) <3C7DFB2C-B3F9-3447-A1FC-EAAA42181A6E> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\n    0x7fff8dfa9000 -     0x7fff8e1deff7  com.apple.CoreData (106.1 - 407.7) <A676E1A4-2144-376B-92B8-B450DD1D78E5> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\n    0x7fff8e1e6000 -     0x7fff8e207ff7  libCRFSuite.dylib (33) <B49DA255-A4D9-33AF-95AB-B319570CDF7B> /usr/lib/libCRFSuite.dylib\n\nExternal Modification Summary:\n  Calls made by other processes targeting this process:\n    task_for_pid: 2\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by this process:\n    task_for_pid: 0\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by all processes on this machine:\n    task_for_pid: 2641\n    thread_create: 0\n    thread_set_state: 0\n\nVM Region Summary:\nReadOnly portion of Libraries: Total=236.7M resident=143.2M(60%) swapped_out_or_unallocated=93.5M(40%)\nWritable regions: Total=73.9M written=11.2M(15%) resident=11.4M(15%) swapped_out=0K(0%) unallocated=62.5M(85%)\n\nREGION TYPE                      VIRTUAL\n===========                      =======\nCG shared images                     96K\nMALLOC                             44.0M\nMALLOC guard page                    48K\nMemory tag=255                    554.1M\nMemory tag=255 (reserved)           256K        reserved VM address space (unallocated)\nSTACK GUARD                        56.0M\nStack                              17.5M\nVM_ALLOCATE                          16K\n__DATA                             16.6M\n__IMAGE                             528K\n__LINKEDIT                         60.8M\n__TEXT                            175.9M\n__UNICODE                           544K\nmapped file                        45.4M\nshared memory                       308K\n===========                      =======\nTOTAL                             972.1M\nTOTAL, minus reserved VM space    971.9M\n\nModel: Macmini6,1, BootROM MM61.0106.B03, 2 processors, Intel Core i5, 2.5 GHz, 10 GB, SMC 2.7f0\nGraphics: Intel HD Graphics 4000, Intel HD Graphics 4000, Built-In, 768 MB\nMemory Module: BANK 0/DIMM0, 2 GB, DDR3, 1333 MHz, 0x80CE, 0x4D34373142353737334448302D4348392020\nMemory Module: BANK 1/DIMM0, 8 GB, DDR3, 1333 MHz, 0x0198, 0x393955353432382D3035322E4130304C4620\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x10E), Broadcom BCM43xx 1.0 (5.106.98.100.17)\nBluetooth: Version 4.1.7f4 12974, 3 service, 13 devices, 3 incoming serial ports\nNetwork Service: Wi-Fi, AirPort, en1\nSerial ATA Device: APPLE HDD HTS545050A7E362, 500.11 GB\nUSB Device: Wired Keyboard 400, 0x045e  (Microsoft Corporation), 0x0752, 0x14300000 / 2\nUSB Device: USB Optical Mouse, 0x046d  (Logitech Inc.), 0xc05a, 0x14400000 / 1\nUSB Device: hub_device, 0x8087  (Intel Corporation), 0x0024, 0x1d100000 / 2\nUSB Device: hub_device, 0x0424  (SMSC), 0x2512, 0x1d180000 / 3\nUSB Device: BRCM20702 Hub, 0x0a5c  (Broadcom Corp.), 0x4500, 0x1d181000 / 5\nUSB Device: Bluetooth USB Host Controller, apple_vendor_id, 0x828a, 0x1d181300 / 6\nUSB Device: IR Receiver, apple_vendor_id, 0x8242, 0x1d182000 / 4\nUSB Device: hub_device, 0x8087  (Intel Corporation), 0x0024, 0x1a100000 / 2\n'}, {'title': 'HTML Mixed Mode Support', 'body': 'I\'m looking at having DustJS files syntax highlighted. It\'s just like PHP/ASP/etc, where it\'s an HTML file, with another language mixed in.\n\nIs this supported? I\'m not getting any highlighting for HTML in my file. There are no errors in the console either.\n\nI created an extension using `yo code` and selecting `New Language Support`. I then used this URL as the tmLanguage file. https://raw.githubusercontent.com/jimmyhchan/Dustjs.tmbundle/master/Syntaxes/DustJS.tmLanguage This language has an include for `text.html.basic`. \n\nWhen doing a search in this repo for `text.html.basic` I get several other syntaxes that reference it. If I try using those languages with an html or dust file, it doesn\'t highlight the html. If I change the language to html, everything highlights as expected.\n\nThis is my package.json file. The tmLanguage file is the one referenced above.\n\n``` json\n{\n    "name": "dustjs",\n    "displayName": "dustjs",\n    "description": "dustjs language support",\n    "version": "0.0.1",\n    "publisher": "anonymous",\n    "engines": {\n        "vscode": "^0.10.1"\n    },\n    "categories": [\n        "Languages"\n    ],\n    "contributes": {\n        "languages": [{\n            "id": "dustjs",\n            "aliases": ["DustJS", "dustjs"],\n            "extensions": [".dust",".tl",".dustjs"],\n            "configuration": "./dustjs.configuration.json"\n        }],\n        "grammars": [{\n            "language": "dustjs",\n            "scopeName": "text.html.dustjs",\n            "path": "./syntaxes/dustjs.tmLanguage"\n        }]\n    }\n}\n```\n'}, {'title': 'No syntax highlighting in XML', 'body': 'On both Win10 and OSX my XML is not syntax highlighted at all.  If I swap the language over to HTML it looks fine, but this is a NativeScript .xml document, not an html page.\n\n![image](https://cloud.githubusercontent.com/assets/1542376/11754298/5bf049a2-a018-11e5-8c32-717d40a9ec4b.png)\n\nThoughts?\n'}, {'title': 'Open file dialog should start in the directory for the current active file', 'body': 'When using `File > Open File`, this will open the directory of the last file selected through `File > Open File`. This is sub-optimal, since the current active file may not have been opened through that dialog. The dialog itself should be context-aware.\n'}, {'title': 'Allow to configure auto save per workspace', 'body': 'Version: 0.10.3\n\nAuto save is either enabled or disabled for all open Code instances.  \n\nIn my case, I would like the setting simultaneously enabled in a window for a Go workspace, but not enabled in a window for a Web-based workspace watch by a live-reload server.\n\nSuggest it be a setting that can be set at the user and workspace levels.\n'}, {'title': 'Feature request: Sublime like display of folders', 'body': '...to have a better visual separation from files\n'}, {'title': 'tsd mocha does not apply to files past index.js', 'body': 'The mocha file for tsd works correctly for the index.js file that is at the root level of the test folder. \n\nAny nested files within the test folder, as well as any files that are siblings to index.js does not hide the green underline that shows "can\'t find it" or "can\'t find describe". \n\nExpected that when installing the tsd mocha, that visual studio code should recognize the commands past the initial index.js file within the test directory. \n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0KdiA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Support regex in files.exclude => when', 'body': 'I would like to ignore JS files in my project when there\'s a matching TS _or_ matching TSX file.  Right now I have to choose one or the other.  Please support making the "when" directive in the "files.exclude" workspace setting use a regex, so I could do this:\n\n``` javascript\n{\n  "files.exclude": {\n        "**/*.js": { "when": "$(basename).tsx?"},\n  }\n}\n```\n'}, {'title': 'Hotkeys binding error', 'body': 'Macbook. After selecting the text, if it is just trying to copy - move to a specific object. Very uncomfortable!\n1. Select the text\n2. Releasing tochpad\n3. Immediately press cmd + c\n\nDo not copy and jumped up\n\nVideo https://cloud.mail.ru/public/5874/ibzQNYA72\n'}, {'title': 'Git status bar actions need tooltips', 'body': ''}, {'title': 'Allow to open binary files in the text editor as explicit user gesture', 'body': 'When I install GitHub Windows client, it generates an error, error details recorded in the\n\n**X: \\ Users \\ xxx \\ AppData / Local \\ Temp \\ VSD75A.tmp \\ install.log**\n\nFile, I use vscode open it, but to give tips:\n\n**The file can not be dispalyed in the editor because it is either binary, very large or uses an unsupported text encoding.**\n\nAnother: Use sublime text or notepad turns on properly.\nShall not, with a hex editor to open were compared and found need to start BOM information (FF EF or EF FF) vscode open file required documents, but did not use UTF8 encoding BOM information can also be opened.\n\nAnother: The install.log encoding format to Unicode text files, the file size is 9kb.\n'}, {'title': '[css] New gradient snippet has incorrect syntax', 'body': 'A gradient snippet was recently added to the CSS snippets.\n\nThis has an incorrect syntax for the unprefixed version. When it was standardised the angles were changed so that the old "top" keyword (as used in the snippet) maps to "to bottom" in the standard syntax. "left" becomes to right, and so on.\n\nThe current code will create a gradient that is flipped for browsers that use the unprefixed version.\n'}, {'title': "[css] generate_browser.js doesn't included MIT copyright when generating browsersjs", 'body': 'It just includes the MS copyright.\n'}, {'title': 'Extensions with console-like behavior', 'body': 'Currently with the extensions API, we have access to output channels (creation and access through `vscode.window.createOutputChannel()`).  And likewise, we can get adhoc user input through `vscode.window.showInputBox`.\n\nI think what would be really helpful is if the extensions API included the capability to have a console-like experience, much like the **debug console** has (input part of the experience with the output).  Not necessarily for "debugging" purposes, but for a more consistent and extended user experience exchange for ongoing for **user input creation**, then **VS Code output consumption**, followed by more **user input creation**, ... so on and so forth.\n\nAt the moment, the `showInputBox()` functionality with the output channel can seem like a one-time exchange, without the continuity of a input/output console (like the debugger console).\n'}, {'title': 'Mac OS X :: "Open Folder With" VS Code', 'body': 'Hello,\n\nSince Finder is obviously developed by Apple, I\'m not sure if this would be possible or not. Is there any way to right-click a folder in Finder, and "open with VS Code?" You can do this with individual files, but it would be a nice, small workflow enhancement to be able to open a _folder_ with VS Code, directly from Finder, as well. If not, no big deal. This would be a fault with Finder, rather than VS Code.\n\nHere\'s a screenshot of right-clicking a folder ... there\'s no "Open With" option. Maybe the **Share** option could work somehow?\n\n<img width="367" alt="screen shot 2015-12-12 at 3 20 03 pm" src="https://cloud.githubusercontent.com/assets/466713/11764203/1e1419d4-a0e4-11e5-814e-c2a201c90ef6.png">\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n'}, {'title': '[css] Browsers without version number don’t show in CSS IntelliSense', 'body': 'The css-scheme.xml file often includes a browser token without a version number, to either mean all versions, or perhaps that the version number is unknown. This is common for Chrome as it came into existence after many versions of Safari, and I followed that pattern for Edge (using E, rather than E12).\n\nThese browser do not show up in the CSS IntelliSense.\n\nSteps to repo:\n\nStart typing :corner-present \n\nExpected:\n\n(Chrome, Safari 5)\n\nActual:\n\n(Safari 5).\n\nI could fix this for Edge by changing all E\'s to E12, but for Chrome it would be a lot of research to see if only "C" is listed because it is since Chrome 1 or if it is because the version is unknown. BrowserStack only goes back to Chrome14.\n'}, {'title': 'whenever debug UI is waiting for response from adapter, support to cancel and abort session ', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0Ph9g==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Disappeared refereneces hint with specific sdk version', 'body': 'I changed omnisharp sdk version from 1.0.0-beta4 to 1.0.0-rc1-update1 via this command:\n\n```\nvim /Applications/Visual\\ Studio\\ Code.app/Contents/Resources/app/extensions/csharp-o/bin/gl\nobal.json\n```\n\nand then open the vscode, the status bar display the omnisharp is running, but the references hint is disappeared, in addition I can\'t go to definition.\n\nbut when I set the the sdk version in global.json under solution folder as follow, the references hint and the function \'go to definition\' works fine:\n\n```\n{\n    "projects": [\n        "Src",\n        "Test"\n    ],\n    "sdk": {\n        "version": "1.0.0-rc1-update1"\n    }\n}\n```\n\nmy mac OS X version is 10.11.1, the output of dnvm list looks like:\n\n```\nActive              Version Runtime Architecture OperatingSystem Alias\n------              ------- ------- ------------ --------------- -----\n     *      1.0.0-rc1-final coreclr          x64          darwin default\n          1.0.0-rc1-update1    mono                    linux/osx\n```\n'}, {'title': 'regex does not work in 0.10.3', 'body': "strange, as I read that this should be fixed, but...\nwhen I CTRK+F or CTRL+H to find resp. replace escape sequences like '\\n', '\\r\\n' or '\\t' it does not work...\nSearch box gets red border and nothing happens...\n\nplease can you help.\nThank you.\n\n/*Karl\n"}, {'title': 'Add option to convert tabs to spaces', 'body': "Would it be possible to add a VS Code command to convert tabs to spaces, and vice versa?\n\nI copied some JSON code from GitHub into VS Code, using Google Chrome, and it's indented using tabs. I'd like to convert it to use 2 spaces.\n\nI searched for this issue on here, and couldn't find it. I only saw references to VS Code settings for using tabs or spaces by default.\n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n"}, {'title': 'errors generated by a task with isWatching not cleared after fixing', 'body': "See http://stackoverflow.com/questions/33563049/in-vscode-errors-generated-by-a-task-with-iswatching-are-not-always-cleared-afte\n\nThe question and answer are both correct in their description. I'm having the same problem and couldn't find a corresponding issue here in the repo, so figured I'd go ahead and create one. \n"}, {'title': 'vscode/releases page missing binaries', 'body': "Just wondering... why doesn't the [releases](https://github.com/Microsoft/vscode/releases) page have vscode binaries? I only see the source code downloads. [Atom](https://github.com/atom/atom/releases) and [Brackets](https://github.com/adobe/brackets) both use GitHub to publish binaries...\n\nWould be handy in case someone wanted to download an older release or if Microsoft's servers were down.\n\nInspired by [#1084](https://github.com/Microsoft/vscode/issues/1084)\n"}, {'title': 'Allow to theme UI components of the workbench', 'body': 'Is there a way to write a theme who also change color for UI components - Ej. affect sidebar and view bar.\n\nOr this should be written separatelly like atom ui themes and syntax theme ?\n'}, {'title': 'Need to be able to have Variable containers not just at the top level', 'body': 'Today VSCode displays top level variable containers like `Local, Global` differently than regular variables.  I want this capability inside of variable nodes.  I want to emulate the "Raw View" functionality in the Visual Studio debugger e.g.:\n\n![rawview](https://cloud.githubusercontent.com/assets/5177512/11770751/a7f37cd2-a1c3-11e5-8fa7-be320eff25f5.png)\n\nNow I can create a `faux` variable called `Raw View` and get the nesting but VSCode make\'s it look like any other property via the purple coloring and the `:` it suffixes the name with.  \n\nWhat I would like is the node displayed in White as the top level variable containers are displayed and no `:` suffix.\n'}, {'title': '[css] Evaluate the 2 browser rule for CSS auto-complete', 'body': "(sorry for long post)\n\nAs per #806 (for HTML), in CSS Intellisense a feature will only show up if there are two implementations. Unlike HTML this is controlled by the build script that excludes features with 1 or zero implementations.\n\nThe problem with this:\n- all webkit prefixed features show up due to Chrome + Opera  (+ Safari for older features when Chrome and Safari were both using WebKit).\n- the above is also the case for unprefixed features added to blink and picked up by both Chrome + Opera\n- No moz prefixed features will ever show up as no other browser uses -moz-\n- No ms prefixed features are included. This has changed in the latest update to the data in my PR as Edge supports a number of the same -ms- prefixes, but there are some it doesn't support or will drop, and any new feature added to Edge will show up ad IE isn't adding new features. In theory there will be no new MS prefixes as we now use flags, but it isn't impossible a prefix may need to be used. Features like the ms prefixed flex box are useful even though only implemented by IE10, as they're needed for backwards compat, and ofter difficult to remember due to the different syntax (syntax was updated just after IE10 shipped)\n- Unlike with Chrome/Opera, any unprefixed feature added Edge, Safari or Firefox will not show until another browser picks it up.\n- Unprefixed features will not show up when only prefixed ones are supported. This is bad as it leads devs to only use the -webkit- (or whichever) version, leading to interop issues for other browsers. We had to implement various webkit prefixes in Edge for this reason. The linter does complain when the unprefixed version is not used (at least for some properties…I've not tried all) but they're not included in the auto-complete. Flex box is a good example of where VS Code was only recommending -webkit- with the old syntax (now fixed with latest data update as browsers beyond IE now support unprefixed latest syntax). \n\nIt will be much more difficult to codify in the generator, but there should either be some smarts built in to consider all the prefixed and unprefixed implementations as the same feature, so that if -moz- is supported by firefox and unprefixed by Edge for example, that is two implementations. It should also include the unprefixed one even if there are no implementations to help avoid vendor lock-in. The main issue I see is how to associate features that have different syntax, like how the flex box properties and values are different between old webkit/moz syntax, mid IE 10 syntax and the final unprefixed syntax.\n\nIf the rule is to stay at two implementations then Chrome and Opera should be treated as one in the generator. Safari too for older features, but that may be harder to add. Edge and IE should probably be counted as one too.\n\nOR it could be made more simple and include if one implementation exists. This will be more fair and useful than the current situation, but it still falls foul of the fact unprefixed features will not show up for features only using prefixes in current browsers. \n"}, {'title': 'New files not getting jsconfig', 'body': 'When I create a new file, it does not recognize the jsconfig settings (ES6 for example). I need to go to jsconfig, make a change, dismake that change and then it the new file will be ok.\n'}, {'title': 'vscode support react native?', 'body': "i find https://www.youtube.com/watch?v=iWzcuJuYRIg something vscode react native video.\n\nwhen i want to try it. i can't find this plugin, in vscode plugin library. i use linux system. centos7\nthx\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0USJw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Incorrect visualising markdown table', 'body': 'When I want to indent the table, the markdown visualisation fail. The same format works perfectly on GitHub.\n![screen shot 2015-12-14 at 11 20 46](https://cloud.githubusercontent.com/assets/3873011/11772191/caaea846-a254-11e5-9b14-eed4efe5ae55.png)\n![screen shot 2015-12-14 at 11 20 32](https://cloud.githubusercontent.com/assets/3873011/11772192/cb07711a-a254-11e5-9712-44a6d18045ca.png)\n'}, {'title': 'Can not enter vietnamese characters.', 'body': 'Hi, I\'m currently using unikey 64 bit for window 7 64 bit ultimate, you can download it here (http://unikey.vn/). And I find that I can not enter Vietnamese characters in visual studio code.\nFor example the register.html file in the picture below:\n![image](https://cloud.githubusercontent.com/assets/10028918/11772422/b6fea928-a24e-11e5-9ff1-9d88a0a9c4ed.png)\n\nIf I enter "Hoom nay", it means "Hôm nay", but the editor only display "Hm nay".\nI don\'t think the problem come from encoding. Because the other vietnamese chars in this picture were entered by Notepad++ and it works very well.\nThank you and sorry for my bad english too.\n'}, {'title': 'Markdown Header Incorrect Syntax Highlighting', 'body': 'When there is a valid `#` in the header, the syntax highlighter for markdown misunderstands it to be the termination of the header.\n\n<img width="963" alt="test_md_-_workshop-materials-1-8" src="https://cloud.githubusercontent.com/assets/1282577/11777576/31e73a04-a247-11e5-8a02-0a1c91e4c8ae.png">\n\nI would be glad to help, but would need to get pointed in the right direction in the code to understand where I can make the change and submit a PR.\n'}, {'title': 'files.trimTrailingWhitespace not working', 'body': 'When i enable this option like so (User Settings):\n\n```\n"files.trimTrailingWhitespace": true\n```\n\nthen it does not delete whitespaces on save.\n\nHere are my user settings:\n\n```\n{\n    "editor.renderWhitespace": true,\n    "files.trimTrailingWhitespace": true\n}\n```\n\nOS: Windows 10 Pro\n'}, {'title': 'Support contributing different keybindings based on keyboard layout', 'body': 'VSCode should ship out of the box with multiple keymaps (based on/optimized for each keyboard layout).\r\ne.g. toggle line comment should be `ctrl+7` on swiss keyboards, etc.\r\n\r\nVSCode should detect at runtime the current system keyboard layout and employ different defaults, based on the keyboard layout.\r\n\r\n'}, {'title': 'Introduce a "Reset Zoom" or "Actual Size" action ', 'body': 'Reverting a zoomed state to a non-zoomed state by trial and error is cumbersome.\n'}, {'title': 'Emmet in plain HTML outputs everything in one line', 'body': 'Try the following emmet snippet in a `.html` file:\n\n```\n.foo>input[name="bob"]+label[for="bob"]\n```\n\nYou\'ll notice everything will be placed in one line.\n\nIf you use it in `.jsx` or `.tsx`, though, they are nicely indented.\n'}, {'title': '"Zoom Out" does not work as expected if window.zoomLevel > 0', 'body': '- set window.zoomLevel to 5.\n- try to zoom out.\n  Observe: Multiple "Zoom out" do not bring the zoom level to an non-zoomed state.\n'}, {'title': 'Emmet snippets should also tab stop at the end of the snippet', 'body': 'When using emmet, it would be nice to also get a snippet tab stop at the end of the snippet, so I can continue writing more emmet commands.\n\nFor example, the snippet `.foo` has the following tab stops:\n\n```\n<div className="foo">[HERE]</div>\n```\n\nIt would be helpful to have one at the end too:\n\n```\n<div className="foo">[HERE]</div>[HERE]\n```\n'}, {'title': 'Git viewlet does not detect folder creation in workspace', 'body': '- Have a workspace under git control and open it in VSCode\n- Copy some folder (with content inside) into the workspace -> VSCode does not detect git change\n- Do a git status in the command line -> see there are changes\n\nI see this on mac el capitan\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0XOeA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[json] Intellisense missing for jsconfig.json', 'body': '![image](https://cloud.githubusercontent.com/assets/22350/11778683/51fc7cfa-a256-11e5-8026-66d27009b80f.png)\n\n@aeschli \n'}, {'title': 'Cannot close without saving', 'body': "- open vscode\n- ctrl+shift+n to get a new instance\n- type in the untitled file\n- close \n- click do not save\n- it doesn't close\n\n![no-close](https://cloud.githubusercontent.com/assets/5047891/11778979/86d97624-a258-11e5-82e0-e23d1810ca61.gif)\n"}, {'title': 'window.showErrorMessage: returned item is undefined if close is selected', 'body': '- use window.showErrorMessage with a custom message.\n- when the message appears press the close button\n\nObserve: the resolved value for the item is undefined. IMO it should be an item representing the close button\n'}, {'title': 'Breakpoints not vertically centered wity line number', 'body': 'Linux\nVersion 0.10.4\nCommit 18c4a65cb26517c25ce0f487feb6d169145bc647\n![image](https://cloud.githubusercontent.com/assets/6461412/11779164/abaca40c-a259-11e5-86c9-348b6a5afd07.png)\n\nThe breakpoints could be nicer aligned with the line numbers\n'}, {'title': 'Jump to matching bracket shorcut not working', 'body': 'When editor\'s cursor is over a bracket and I press Ctrl+Shift+J, I expect the cursor to jump over the matching bracket but it does not happen. Actually nothing happens.\n\nIn my Default Keyboard Shorcuts I have this:\n\n```\n{ "key": "ctrl+shift+]", "command": "editor.action.jumpToBracket", "when": "editorTextFocus" },\n```\n\nI haven\'t override that value in keybindings.json.\nI\'m using VS Code 0.10.3 on Windows 8.1 x64\n'}, {'title': 'html file interfers with js file', 'body': '- two files\n\n``` javascript\nclass A {\n\n}\n\nlet x = 10;\n\nconst z = 10;\n```\n\n``` html\n<script type="text/javascript">\nvar i = 10;\nif (i < 5) {\n  // some code\n}\nclass A {\n\n}\n\nlet x = 10;\n\nconst z = 5;\nz = 10;\n</script>\n```\n\nJavaScript file shows errors about double symbols. Is this expected.\n'}, {'title': 'No code complete for jsconfig.json files', 'body': 'Title says it all :-)\n'}, {'title': 'Strange line in editor for tsconfig.json file', 'body': 'See screen shot and notice the line behind compileOptions.\n\nI have no steps how I got there.\n\n![capture](https://cloud.githubusercontent.com/assets/1931590/11780481/85d1ab48-a262-11e5-8dec-ed298a7092bd.png)\n'}, {'title': 'Long text wraps in debug console cuts CJK strings', 'body': '![image](https://cloud.githubusercontent.com/assets/5047891/11780431/272e576c-a262-11e5-96fe-7332afa29ebf.png)\n\nTest file:\n\n``` javascript\n\nvar str1 = "三代之時，天下有國千萬，言語不通。周既王，始有雅言。諸子著作，皆以雅言。及周道微，天下紛亂，言語異聲，文字異形。尤是楚語至不同也。秦始皇帝混一車書，獨用秦篆，各地方言日合。然至於許慎之世，說文解字之所錄，亦有同義而音異之字，多有「某地曰某為某」之訓。蓋天下文字雖一，而言語未統也。此上古音也。古語於語法異於今音，可見諸尚書。"\n\n\nvar str2 = "Chinese (汉语 / 漢語; Hànyǔ or 中文; Zhōngwén) is a group of related but in many cases mutually unintelligible language varieties, forming a branch of the Sino-Tibetan language family. Chinese is spoken by the Han majority and many other ethnic groups in China. Nearly 1.2 billion people (around 16% of the world\'s population) speak some form of Chinese as their first language."\n\nconsole.log(str1);\nconsole.log(str2);\n\nconsole.log(\'DONE\');\n```\n\nCheap solution (done in terminals for example):\n- measure also a typical wide character width. e.g. : https://github.com/Microsoft/vscode/blob/master/src/vs/editor/browser/config/configuration.ts#L70\n- when computing the width of the string use the wide character width where applicable. e.g. : https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/viewModel/characterHardWrappingLineMapper.ts#L174\n- this will of course not help with all languages (like arabic, thai), but would be a first improvement.\n'}, {'title': 'Cannot set to open the current html file in default browser on gnu/linux.', 'body': 'The only explanation on how to define default browser to be launched on ctrl+shift+b I found was this http://stackoverflow.com/questions/30039512/how-to-view-my-html-code-in-browser-with-visual-studio-code and it doesnt work for gnu/linux.\nAm I missing something here or this feature is only available for windows and mac ?\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0YHww==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'I am not seeing extension error/warnings indication in status bar', 'body': 'I tried the following scenarios on mac:\n- causing an error in an extension by making its package.json invalid\n- installing the same extension twice with different name so that one overrides the other\n\nI get errors and warnings for both in the dev console, so I assume that the status bar indicator does just not work for me.\n\n![image](https://cloud.githubusercontent.com/assets/900690/11781514/aa642d0c-a26a-11e5-90e0-a75dae2913ab.png)\n'}, {'title': "'There is a task running' warning after developping a extension", 'body': "- open a folder that contains code of an extension\n- debug the extension\n- close the extension window (debugger connection correctly gets closed)\n- in the window switch to a different folder \n  Warning appears\n  'There is a task running. Do you want to terminate it'\n\nIt is not clear to me what task that is. At the very least it could show the name of the task.\n"}, {'title': 'Keybinding picker should not dismiss on enter', 'body': 'I suggest to use another trigger character like Ctrl+Enter, otherwise I cannot pick the "Enter" key. \n'}, {'title': 'Linux: numpad_decimal is "unknown"', 'body': 'Looks like we fail to resolve only this one, the others work nicely on Linux.\n'}, {'title': "repl doesn't show all text", 'body': "Take this code snippet\n\n```\nvar value = ''\nvar i = 10000;\nwhile (i-- > 0) {\n    value += Math.random().toString(16);\n    value += '\\n';\n}\nvalue += 'END';\nconsole.log(value)\n```\n- break on the last line\n- type _value_ in the debug console\n- :arrow_forward: last bits are not shown :cry: \n"}, {'title': 'Windows 7: Seeing 2 times "Define Keybinding" even for readonly side', 'body': 'Testing on Windows 7, I get the green UI for both sides:\n\n![image](https://cloud.githubusercontent.com/assets/900690/11782057/c350e4fa-a26e-11e5-912e-029e0cef15ee.png)\n'}, {'title': 'ctrl + shift + L should select the previous line', 'body': 'ctrl + I selectes the current line and then selectes the following lines, one by one.\nctrl + shift + I could select the previous line from the current selection.\n'}, {'title': 'ctrl + I does not fully select wrapped lines', 'body': '- Set "editor.wrappingColumn": 50\n- Open a file that has some wrapped lines, (e.g debugService.ts#159)\n- Ctrl + I - notice that the whole line does not get selected\n\n<img width="368" alt="screen shot 2015-12-14 at 14 38 51" src="https://cloud.githubusercontent.com/assets/1926584/11782278/6d0468ae-a270-11e5-8e37-a24f75a22bd8.png">\n\nI see this on mac el capitan\n'}, {'title': 'breakpoint not hit', 'body': '```\nfunction fn(...args: any[]) {\n    console.log(args);\n}\n\nfn(1, 2, true, {});\n```\n- have the snippet above as **ts** with **sourcemaps**\n- set breakpoints in the function body and on function invocation (last line)\n- F5\n  *> only the breakpoint in the function body is hit, not the invocation breakpoint\n'}, {'title': 'No hover in project.json files', 'body': '![capture](https://cloud.githubusercontent.com/assets/1931590/11782441/5e7a545a-a271-11e5-9e48-bc903d3550c4.png)\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0ZFNg==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'breakpoints show as valid tho source map is broken', 'body': '``` typescript\nfunction fn(...args: any[]) {\n    console.log(args);\n}\nfn(1, 2, true, {});\n```\n- take the above code, run `tsc --sourceMap`\n- debug with source maps and put a breakpoint in the function body\n- ruin the source map file (remove `{"ver` from the beginning)\n- :cry: breakpoints don\'t render as invalid but don\'t work anymore\n'}, {'title': '[json] Bower.json has a authors attibribue but default code complete proposes author', 'body': '- bower.json\n- in empty file activate code complete\n- accept proposal\n- it inserts\n\n``` json\n{\n    "name": "name",\n    "description": "description",\n    "author": "author",\n    "version": "1.0.0",\n    "main": "pathToMain",\n    "dependencies": {}\n}\n```\n\nObserve: it inserts a author field however bower files do have a authors field.\n'}, {'title': 'Generator functions are incorrectly coloured in JavaScript', 'body': '![image](https://cloud.githubusercontent.com/assets/22350/11782574/00de555c-a272-11e5-96f2-24182e481c08.png)\n'}, {'title': 'Yield keyword is not coloured in JavaScript', 'body': '![image](https://cloud.githubusercontent.com/assets/22350/11782623/458b351c-a272-11e5-8bf2-ca1dc66c6560.png)\n'}, {'title': '[themes] Dark theme uses much more colors than light theme for both JS and TS', 'body': 'Compare the two screenshots. We use much more colors in the dark theme. This is not consistent since those two are the default themes and they should be symetric imho. Both for Typescript and Javascript\n@stevencl @bgashler1 opinions welcome\n\n<img width="462" alt="screen shot 2015-12-14 at 14 57 28" src="https://cloud.githubusercontent.com/assets/1926584/11782726/0ed57fe0-a273-11e5-9d65-0960c1aaf337.png">\n<img width="535" alt="screen shot 2015-12-14 at 14 58 04" src="https://cloud.githubusercontent.com/assets/1926584/11782734/1a960dfe-a273-11e5-8371-fb02d4b601ab.png">\n'}, {'title': '[html] HTML colors angle brackets wrongly in dark theme', 'body': 'Angel brackets should be blue not orange in this screenshot.\n\n<img width="376" alt="screen shot 2015-12-14 at 15 06 15" src="https://cloud.githubusercontent.com/assets/1926584/11782942/85b4c4da-a274-11e5-8215-192af4271568.png">\n'}, {'title': '[json] json.schemas setting has no scheme / code complete', 'body': '- open settings\n- insert\n\n```\n  "json.schemas": [\n\n  ]\n```\n- try to get code complete inside the [ ]\n\nObserve: code assist stays empty.\n'}, {'title': 'Cursor only works correctly on Basic Multilingual Plane', 'body': "Paste the following into the editor:\n\n```\nabc 𠮷 def\n```\n\nUsing the <kbd>Left Arrow</kbd> key, navigate from the beginning of the line to its end. As you jump over the Chinese character, you'll notice that it takes two key presses to get away from it. Additionally, if you type some latin text between those two jumps, the content of the line from that position until the end fully disappears. You are creating bytes from within the double-byte Chinese character, effectively generating invalid Unicode sequences.\n"}, {'title': 'Binary and octal numbers are not coloured', 'body': '![image](https://cloud.githubusercontent.com/assets/22350/11783064/5a20e41a-a275-11e5-85c1-d4a1aa7feb46.png)\n'}, {'title': 'Keyboard: Widget not showing correct values', 'body': "I am on a Mac with a german keyboard layout and some keys are not showing a preview as expected:\n- < : unknown (key right to shift)\n- ^ : backslash\n- ? : [\n- ´ : ]\n- \\* : = \n- # : /\n- ü : ;\n- ö : `\n- ä : '\n\nI wonder if the keyboard layout is correctly detected after all?\n\nBtw I am seeing similar results on Mac and Linux. \n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0ZZ8A==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': '[json] should color string values red in light theme', 'body': 'IMHO colors should be reversed in this screenshot. We always use red for strings, and we should use a special color blue for keys in JSON. Also dark theme is doing the same, values are shown in the string color, and keys in the new color.\n<img width="391" alt="screen shot 2015-12-14 at 15 13 29" src="https://cloud.githubusercontent.com/assets/1926584/11783056/4c732db4-a275-11e5-921b-f3b95aa7af7f.png">\n'}, {'title': 'Git Sync: Flashes between enabled/disabled each time I click on the git viewlet', 'body': 'Looks a bit hectic. \n'}, {'title': 'Git sync should rotate when syncing', 'body': 'Yes we can\n'}, {'title': 'Do we still need "Execute Git Commands"?', 'body': 'We moved quite some commands to top level in F1 but we still have "Execute git commands". I think we should have one or the other. I think having the commands top level is favourable because this allows extensions to call them.\n'}, {'title': 'Git sync: Icon looks off compared to others around', 'body': 'The screenshots in the test plan show it quite well, on Mac at least the sync and publish icon is not nicely aligned with the SVGs for git and problems/errors markers.\n\nEither we use Octicon for git branch as well or we find SVGs for the publish/sync icons maybe?\n'}, {'title': 'Handlebars comments coloring is sometimes off', 'body': 'Have the following handlebars snippet \nNotice that the commented line is not fully green. Notice how git hub nicely colors the whole line\n\n``` handlebars\n<table>\n    <tr>\n        <th>Band Name</th>\n        <th>Date</th>\n        <th>Album Name</th>\n    </tr>\n    <!--{{#each Bands}}-->\n        <tr>\n            <td>{{Name}}</td>\n            <td>{{Date}}</td>\n            <td>{{Albums.0.Name}}</td>\n        </tr>\n    {{/each}}\n</table>\n```\n\n<img width="352" alt="screen shot 2015-12-14 at 15 28 52" src="https://cloud.githubusercontent.com/assets/1926584/11783401/6aa7ed04-a277-11e5-8e8b-820b3b0f0db1.png">\n'}, {'title': '[less][sass] Duplicate module definitions upon opening LESS or SASS files', 'body': 'Open a less or sass file, notice the warnings in the console\n\n<img width="598" alt="screen shot 2015-12-14 at 15 31 42" src="https://cloud.githubusercontent.com/assets/1926584/11783491/e1c4cba0-a277-11e5-9b91-6a51be3d778a.png">\n'}, {'title': '[sass] Strings are colored same way as values in dark theme', 'body': 'Sass file, notice how the light theme nicely distinguishes between strings and values and the dark theme does not\n\n<img width="200" alt="screen shot 2015-12-14 at 15 37 00" src="https://cloud.githubusercontent.com/assets/1926584/11783632/8be8e4d6-a278-11e5-9ffe-34c2bbbb0e59.png">\n<img width="227" alt="screen shot 2015-12-14 at 15 37 25" src="https://cloud.githubusercontent.com/assets/1926584/11783669/ace0f0e8-a278-11e5-91cc-38937d6d4673.png">\n'}, {'title': 'C# coloring usings could use 2 colors', 'body': 'Just having one color for the using statements looks bad imho\nWe should use one color for the `using` keyword and another for the rest.\n\n<img width="217" alt="screen shot 2015-12-14 at 15 40 06" src="https://cloud.githubusercontent.com/assets/1926584/11783748/11e1fb9a-a279-11e5-8b7f-d2e421f403c3.png">\n'}, {'title': 'Suggestion: editor split vertically', 'body': ''}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0Z3iA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Programmatically call debugger ?', 'body': 'Hello everybody, \n\nis it possible to programmatically call the debugger, i.e., is the node-debug adapter exposed as via an API? Thanks!\n\nBest regards\n--Oliver.\n'}, {'title': "[json] intellisense without prefix broken in 'tsconfig.json'", 'body': 'Have a file with the following content:\n\n``` json\n{\n    "compilerOptions": {\n\n        "module": "amd",\n        "noImplicitAny": false,\n        "removeComments": false,\n        "preserveConstEnums": true,\n        "target": "ES5",\n        "sourceMap": false,\n        "experimentalDecorators": true\n    },\n\n    "exclude": [\n        "vs/languages/typescript/common/lib/lib.es6.d.ts",\n        "vs/languages/typescript/common/lib/lib.d.ts"\n    ]\n}\n```\n\nNo proposals for `files\' show up.\n'}, {'title': "Cannot read property 'getRepositoryRoot' of null", 'body': 'Found this in the logs after creating a new untitled file, making it dirty and closing the workbench\n\n[664:1214/161419:INFO:CONSOLE(332)] "Cannot read property \'getRepositoryRoot\' of null: TypeError: Cannot read property \'getRepositoryRoot\' of null\n    at DirtyDiffDecorator.onEditorInputChange (file:///C:/GitDevelopment/monaco/out/vs/workbench/parts/git/browser/gitWorkbenchContributions.js:253:60)\n    at Array.<anonymous> (file:///C:/GitDevelopment/monaco/out/vs/workbench/parts/git/browser/gitWorkbenchContributions.js:243:134)\n    at EventService.EventEmitter._emitToSpecificTypeListeners (file:///C:/GitDevelopment/monaco/out/vs/base/common/eventEmitter.js:177:37)\n    at EventService.EventEmitter._emitEvents (file:///C:/GitDevelopment/monaco/out/vs/base/common/eventEmitter.js:202:22)\n    at Array.<anonymous> (file:///C:/GitDevelopment/monaco/out/vs/base/common/eventEmitter.js:128:27)\n    at EditorPart.EventEmitter._emitToBulkListeners (file:///C:/GitDevelopment/monaco/out/vs/base/common/eventEmitter.js:189:37)\n    at EditorPart.EventEmitter._emitEvents (file:///C:/GitDevelopment/monaco/out/vs/base/common/eventEmitter.js:198:22)\n    at EditorPart.EventEmitter.emit (file:///C:/GitDevelopment/monaco/out/vs/base/common/eventEmitter.js:219:22)\n    at file:///C:/GitDevelopment/monaco/out/vs/workbench/browser/parts/editor/editorPart.js:142:31\n    at CompletePromise_ctor.CompletePromise_then [as then](file:///C:/GitDevelopment/monaco/out/vs/base/common/winjs.base.raw.js:1826:49)", source: file:///C:/GitDevelopment/monaco/out/vs/workbench/electron-browser/shell.js (332)\n'}, {'title': 'IntelliSense: signature flickers when broadening search', 'body': '- type window.\n- find the webkitconv... entry and complete it with enter\n- backspace char by char and notice how the signature flickers\n\nIf you do the same while typing (narrowing down) the webkitconv entry and then broaden it, this does not happen.\n'}, {'title': 'IntelliSense: Sorting is weird in this case', 'body': 'In a TS file type "for" and auto-complete. You will find a 100% match "for" on the top, but the other 100% match from snippets is not there but rather at the end. If we do not sort unified across the various providers, then maybe we should take out snippets from the list and provide another way of completing snippets.\n\n<img width="513" alt="screen shot 2015-12-14 at 19 32 43" src="https://cloud.githubusercontent.com/assets/900690/11789940/8b11967c-a299-11e5-9807-978e36586b09.png">\n'}, {'title': 'Typescript - do not color colon :', 'body': 'Colons should not be colored blue, they should remain black.\n\n<img width="311" alt="screen shot 2015-12-14 at 16 32 34" src="https://cloud.githubusercontent.com/assets/1926584/11785103/58431db0-a280-11e5-9dee-6026f2ef1649.png">\n'}, {'title': 'Use space as a seperator between the path matching and regular quick open matching', 'body': 'In the following example it would be cool if the word after the space would do regular quick open matching on all the files that passed the path filter.\n\n<img width="184" alt="screen shot 2015-12-14 at 16 39 22" src="https://cloud.githubusercontent.com/assets/1926584/11785283/5d71698a-a281-11e5-8261-79753e269651.png">\n'}, {'title': 'Quick open highlight is not working when including wildcards', 'body': 'Notice how the matching is wrong in the following screenshot. I would expect some files being matched inside the browser folder. \n\n<img width="604" alt="screen shot 2015-12-14 at 16 41 47" src="https://cloud.githubusercontent.com/assets/1926584/11785379/d80acc4a-a281-11e5-9310-69117e0c192e.png">\n'}, {'title': 'quickopen **/* sometimes does show all results as matches', 'body': 'I would expect in the following case that the first two files are also shown as matched in dark blue.\n\n<img width="535" alt="screen shot 2015-12-14 at 16 50 12" src="https://cloud.githubusercontent.com/assets/1926584/11785613/ecd26dee-a282-11e5-8dfc-64519d0c63e7.png">\n'}, {'title': 'search.fuzzyFilePicker might not be a good name', 'body': 'In our `vscode.d.ts` we call it quick pick, not file picker.\nSo I would call the setting `search.fuzzyQuickPick`\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0arCA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'QuickOpen: Cannot read property toLowerCase of null', 'body': '- Enable fuzzySearch\n- vscode repo\n- search for \'opa\'\n\nI do not get any results and I see the attached error in the console.\nI can not repro, hope the screenshot is of some use\n<img width="630" alt="screen shot 2015-12-14 at 17 00 50" src="https://cloud.githubusercontent.com/assets/1926584/11785962/68e5d0a0-a284-11e5-83b5-0ab51e12daac.png">\n'}, {'title': 'Linux: Order of confirm buttons is wrong in dialogs', 'body': 'It should be "Alternate" (optional) | "Cancel" | "Ok" for confirm dialogs.\n'}, {'title': "Can't debug deactivate / subscription.dispose call", 'body': "- extension that pushes a disposable into the subscription on active\n- set a breakpoint into the disposable function\n- shutdown VS Code\n\nObserve: the breakpoint is not hit and you can't debug the shutdown process.\n"}, {'title': "Deactivate or subscription.dispose don't write to the log", 'body': "I have the following code\n\n`````` typescript\nexport function activate(context: ExtensionContext) {\n    context.subscriptions.push(new Disposable(() => {\n        fs.writeFileSync('C:/log-sub.txt', 'On Dispose');\n    }));\n}\n\nexport function deactivate() {\n    fs.writeFileSync('C:/log-deact.txt', 'On Deactivate');\n}```\n\nHowever after closing VSCode running that extension no log file exist in C:\\\n``````\n"}, {'title': 'Expose route to set formatting options', 'body': 'I\'ve configured VS Code to always use tabs:\n\n``` json\n// Place your settings in this file to overwrite the default settings\n{\n    "editor.insertSpaces": false\n}\n```\n\nBut C# **Format Code** command (Shift+Alt+F) always replaces tabs with spaces. I\'m using OS X El Capitan.\n'}, {'title': 'Do not fall back to render the US keybinding if key code is missing in keyboard layout', 'body': 'Under Windows on the German (Swiss) keyboard layout, `VK_OEM_PLUS` can not be triggered by any phyisical key.\n\nHowever, we render that there is a keybinding `Ctrl+=` for `zoom in` because the logic falls back to the US standard layout if a key does not produce any character under the current keyboard layout.\n'}, {'title': "Work around Chrome implementing w3c's DOM Level3 Events section B.2.4 on Mac", 'body': 'Chromium decided to implement section [B.2.4 of DOM Level3 Events](http://www.w3.org/TR/DOM-Level-3-Events/#h-optionally-fixed-virtual-key-codes) only on Mac.\n\nGiven the German (Swiss) keyboard layout:\n![420px-kb_swiss svg](https://cloud.githubusercontent.com/assets/5047891/11788624/4ecb714e-a292-11e5-8d1a-c0ed2a865124.png)\n\nThis means that it is very difficult to figure out what actual physical key was pressed. E.g.:\n- when pressing <kbd>7</kbd>, the `keydown` event we receive has `keyCode:55`\n  - this is OK\n- when pressing <kbd>Shift</kbd>+<kbd>7</kbd>, the `keydown` we receive has `shiftKey:true` and `keyCode: 191`\n  - this is unexpected, we should receive `shiftKey:true` and `keyCode:55`\n\nTo investigate if we can use the `keyIdentifier` and [`native-keymap`](https://www.npmjs.com/package/native-keymap) to reverse their "helpful" `keyCode` massaging.\n'}, {'title': 'Extension server : onHover and async return value', 'body': 'Hello,\n\nI\'m building a language server extension and I\'m trying to implement the onHover event like this:\n\n```\nconnection.onHover((event):Hover =>{\n    getHover(event.uri,event.position,(hoverString)=>{\n// this is asynchronous\n})\n    return new Hover("i\'m hover+"+hoverString)\n})\n```\n\nHow to change the hover message asynchronously ?\n\nFor info, I get an error on "new Hover" telling me that Hover is unknown but it is imported.\nIs it a vscode-language-server mapping problem ?\n\nThanks in advance for your help.\n'}, {'title': "Don't suggest snippets in void places", 'body': 'See attached screen shot, I have many snippets defined and they are the only entries that show up when I auto complete inside an object literal, which is weird imho:\n\n<img width="512" alt="screen shot 2015-12-14 at 19 29 35" src="https://cloud.githubusercontent.com/assets/900690/11789872/1c19940e-a299-11e5-9ce8-d36a5289feb3.png">\n'}, {'title': 'Alt-tabbing to another application underlines the first letter of items in the menu bar (file, edit etc)', 'body': 'Minor niggle of mine :)\n\nOther applications such as Windows Explorer do not display the keyboard shortcut guides when the user alt-tabs, it would be more consistent if VS Code did the same.\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0c0kA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Inconsistent matching when typing quickly with Go To File', 'body': 'I have a file called `products_controller.php`. So, that should be found if I do Go To File and type `prodcon`.\n\nIf I quickly type `prodcon`, it says "No results found." If I delete the last \'n\' it will show a match for `products_controller.php`, as well as a few other files. If I then re-type the `n`, it will still show those matches.\n\nIf I type out p-r-o-d-c-o-n slowly, it will also find those matches.\n\nTyping quickly:\n![screen shot 2015-12-14 at 12 00 41 pm](https://cloud.githubusercontent.com/assets/1341275/11790707/6f467ec4-a25a-11e5-9167-f673e73daf23.png)\n\nDeleting last character:\n![screen shot 2015-12-14 at 12 00 57 pm](https://cloud.githubusercontent.com/assets/1341275/11790709/70bebbcc-a25a-11e5-9588-d1cfb5c00aa0.png)\n\nReadding last character:\n![screen shot 2015-12-14 at 12 01 06 pm](https://cloud.githubusercontent.com/assets/1341275/11790712/7337af44-a25a-11e5-8f23-45d4835049ef.png)\n\nThis is on Mac OSX Yosemite, 10.10.5.\n'}, {'title': 'Surround a text/word with special characters', 'body': 'Surround a text/word with special characters by selecting it and pressing the special character.\n\n**example:**\n\n![](http://i.imgur.com/HO1jUEz.gif)\n'}, {'title': 'API for extensions previewing in HTML', 'body': 'Like Markdown preview, I want to build extensions that preview other types of files in HTML/CSS/JS. Please open up API for this type of extensions. \n'}, {'title': '"Set/Override Syntax" command', 'body': 'Add a command for setting a language of choice for syntax highlighting. This is specially useful when opening an "Untitled" document for writing a snippet of code. \n'}, {'title': 'Move native-keymap node module to Microsoft/', 'body': ''}, {'title': '[css] at-rules in CSS no longer distinguished from selectors in dark theme', 'body': "Probably somewhat related to #1271\n\nIn the dark theme (and light theme), CSS at-rules (e.g. @font-face) were coloured purple, distinguishing them from regular selectors.\n\nIn builds from Master, they're now the same colour as selectors: blue. In light theme they are distinguished from selectors, but are now blue instead of purple (regular selectors are dark red in light theme)\n\nSee @font-face in the screenshot (note @keyframes is not highlighted at all in stable, but it probably isn't known in css.plist or Intellisense)\n\nAlso, Unknown keywords when used as property values (e.g. keywords known by IntelliSense like the local keyword for background-attachment, but not known by the CSS.plist highlighter) are now not coloured (white) rather than a orange/red like before.\n\nLeft: current stable. Right: built from MS/Master\n\n![screen shot 2015-12-14 at 4 12 51 p m](https://cloud.githubusercontent.com/assets/465069/11798237/e67a7a4a-a27d-11e5-95c0-70982922de04.png)\n"}, {'title': 'Watched tasks do not terminate (sometimes)', 'body': "I'm finding that I have a bunch of zombie tasks, even after closing VS Code 0.10.3 (on OS X).\n\nIt appears that whenever I edit `tasks.json`, VS code forgets about the running tasks.  `> Tasks: Terminate Running Task` has no effect, and closing VS Code doesn't kill the process, either.\n"}, {'title': 'I can open jpg ,but can not open JPG(upper)', 'body': 'I can open jpg ,but can not open JPG(upper)\n'}, {'title': "tasks.json suppressTaskName doesn't work ", 'body': 'Hi\nPlease see the attachment\n![tasks](https://cloud.githubusercontent.com/assets/14086700/11802894/615fd810-a330-11e5-9f51-34912043a7ab.png)\n\nI set the "suppressTaskName": false but it still put the task name after command in Output window.\n\nAnother problem, I can only add one command in one project, which mean I can only use one command for one project, it\'s a big limitation.\n\nThanks.\n'}, {'title': 'How can I run more than one node project at sametime?', 'body': "I have a project solution in Visual Studio 2015 with 3 NodeJS projects in it. I need to run these three projects together, it's easy in VS2015, but in VS Code, what should I do?\n\nI think that's should be a very important feature of VS Code.\n"}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0ivlA==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Encoding detection from XML header', 'body': 'The attached XML file declares and uses ISO-8859-15 as its encoding, but it opens as UTF-8. The sample Euro character (U+20AC), coded as byte 0xA4 in that encoding, is not shown correctly. v0.10.3 on OS X 10.11.2.\n\n![iso-8859-15-vsc](https://cloud.githubusercontent.com/assets/3627476/11805513/8aef06e8-a30c-11e5-96e3-b5adeea66f2a.PNG)\n\n[ISO-8859-15.xml.zip](https://github.com/Microsoft/vscode/files/62171/ISO-8859-15.xml.zip)\n'}, {'title': 'Word wrap implementation for text editor (f.e like in SublimeText)', 'body': 'It would be usefull to implement **Word Wrap**, which supports now in all modern Text Editors (f.e Sublime on screenshot):\n- **SublimeText**:\n  ![sublime](https://cloud.githubusercontent.com/assets/3235047/11805592/1eefd99c-a31e-11e5-9cc0-87be77d7cd45.png)\n- **vscode**:\n  ![vscode](https://cloud.githubusercontent.com/assets/3235047/11805604/3712c138-a31e-11e5-8cac-c2923f900456.png)\n\nAlso would be usefull to implement such features as **Word Wrap Column** and **Ruler**\n'}, {'title': 'Octal literal syntax error is not handled for all cases', 'body': 'When declaring an octal literal, an error is shown.\n![error1](https://cloud.githubusercontent.com/assets/16247609/11806897/601b9f94-a316-11e5-901c-d3a59257fb5f.png)\n\nHowever, if another error is introduced, the error for octal literal usage is omitted.\n![error2](https://cloud.githubusercontent.com/assets/16247609/11806917/7d572592-a316-11e5-8913-9faa08df0f89.png)\n\nAnother strict rule violation, this time both errors are visible.\n![error3](https://cloud.githubusercontent.com/assets/16247609/11806958/c402e9b8-a316-11e5-9bbb-b6d2ca665e3d.png)\n\nI could like into this one, just want to make sure this is an actual error.\n'}, {'title': 'How to debug vscode source code for one specific feature?', 'body': 'I have followed the instruction from page https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source to try to debug vscode source,  But i have not found how to debug a specific feature such as Intellisense feature ,now  i want to set breakpoint for "update" method in \\vscode\\src\\vs\\editor\\contrib\\suggest\\browser\\suggest.ts ,but i don\'t know how to trigger this method ,anyone can tell me the detail steps? \n'}, {'title': "Can't install extensions through proxy on windows ", 'body': 'The List of extensions is displayed, but when I click on one iE `Elm` it shows\n\n`Error` `getaddrinfo ENOTFOUND marketplace.visualstudio.com marketplace.visualstudio.com:443`\n\nVscode was started from the commandline  with \n\n```\n>set | grep proxy\nhttps_proxy=http://user:pw@ip:port\nhttp_proxy=http://user:pw@ip:port\n```\n\nSystem proxy is defined though an `Automatic configuration script` via th url of a *.pac file.\nWhen I start `vscode` from start, without those  environment variables, the above error shows already when loading the list of extensions.\n\nPS. Thanks for the great work. \n'}, {'title': 'HTML Format does not work', 'body': '- open HTML file\n- run format (entire document)\n\n![image](https://cloud.githubusercontent.com/assets/5047891/11807883/1facd200-a31d-11e5-8e73-29c14d0910e3.png)\n'}, {'title': 'Move line up is broken', 'body': '- move line up\n- :sob: lines moves up but cursor stays\n'}, {'title': "Cannot read property 'getStatus' of null", 'body': 'Just saw this in my dev logs:\n\n[1674:1215/113350:INFO:CONSOLE(332)] "Cannot read property \'getStatus\' of null: TypeError: Cannot read property \'getStatus\' of null\n    at DirtyDiffModelDecorator.getOriginalContents (file:////Users/bpasero/Development/monaco/out/vs/workbench/parts/git/browser/gitWorkbenchContributions.js:131:35)\n    at DirtyDiffModelDecorator.diffOriginalContents (file:////Users/bpasero/Development/monaco/out/vs/workbench/parts/git/browser/gitWorkbenchContributions.js:114:25)\n    at file:////Users/bpasero/Development/monaco/out/vs/workbench/parts/git/browser/gitWorkbenchContributions.js:109:53\n    at Throttler.queue (file:////Users/bpasero/Development/monaco/out/vs/base/common/async.js:87:34)\n    at ThrottledDelayer.task (file:////Users/bpasero/Development/monaco/out/vs/base/common/async.js:192:93)\n    at file:////Users/bpasero/Development/monaco/out/vs/base/common/async.js:147:40\n    at Object.notifySuccess [as _notify](file:////Users/bpasero/Development/monaco/out/vs/base/common/winjs.base.raw.js:1440:59)\n    at Object.state_success_notify.enter (file:////Users/bpasero/Development/monaco/out/vs/base/common/winjs.base.raw.js:1127:30)\n    at Promise_ctor.WinJS.Class.define._run (file:////Users/bpasero/Development/monaco/out/vs/base/common/winjs.base.raw.js:1343:29)\n    at Promise_ctor.WinJS.Class.define._completed (file:////Users/bpasero/Development/monaco/out/vs/base/common/winjs.base.raw.js:1311:18)", source:\n'}, {'title': '[css] Word highlight is computed wrong when in CSS comments', 'body': '``` css\n.monaco-editor .inlineKeybindingMismatch:before {\n    margin: 0.1em 0.1em 0 0.1em;\n    content:" ";\n    display:inline-block;\n    height:1em;\n    width:1em;\n    /*line-height:1em;*/\n    /*border:0.1em solid #000;*/\n\n    background: url(status-error.svg) 0px 0px no-repeat;\n    background-size: 1em;\n}\n```\n\n![css-word](https://cloud.githubusercontent.com/assets/5047891/11808987/1ab22de8-a324-11e5-8da5-0ef05daaa1e1.gif)\n'}, {'title': 'Extensions Status: improve hover message', 'body': 'I suggest to tell the user that you are showing N errors and warnings there, not just "extensions".\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0liBw==', 'hasNextPage': True}}}}}{'data': {'repository': {'issues': {'nodes': [{'title': 'Extensions Status: Uninstall action does not tell me what is being uninstalled', 'body': 'If we provide an action to uninstall an extension from a warning/error, please make it very clear what exactly is being uninstalled, I cannot tell from the warning itself:\n\n![screen shot 2015-12-15 at 12 18 07](https://cloud.githubusercontent.com/assets/900690/11809265/eebfdd8c-a325-11e5-88e7-c562c59883e0.png)\n'}, {'title': 'Extensions Status: The number after the icon does not help me at all', 'body': 'I see the number 1 after the icon but what does it mean? At least tell me "1 Warning".\n'}, {'title': 'Extensions Status: The image is too large compared to the others', 'body': 'Make it background-size: 14px\n'}, {'title': 'Git checkout should create a tracking branch, if any remote contains a matching branch', 'body': 'Currently when you use quick open to "git checkout branch", the branch will be created even if the branch already exists in the remote. The command line does a better job and connects to the existing branch in that case.\n'}, {'title': 'VSCode will not close if attempting to discard an unsaved file', 'body': "When attempting to close or change workspace containing unsaved file(s) vscode prompts you to save them (expected) however clicking 'Don't save' results in the same action as clicking 'Cancel'. I.e. the editor remains in the current workspace.\nDetected on 0.10.4\n"}, {'title': 'Typescript intellisense looks broken after dot completion', 'body': "https://youtu.be/whtggr9RFXs\n1. Trigger intellisense with <kdb>dot</kbd> works.\n2. Manual trigger doesn't work\n\nVideo recorded at gitServices.ts#768\n"}, {'title': 'All of the sudden today I keep getting a prompt to reinstall VSCode and it keeps failing', 'body': "I see the following error after choosing to restart VSCode after prompting to install the update.\n\n> The setup files are corrupted. Please obtain a new copy of the program.\n\nVersion 0.10.3\nCommit 783ecf841a2b21edca6d86853670cae89b4c244f\nDate 2015-11-26T14:06:31.538Z\nShell 0.34.1\nRenderer 45.0.2454.85\nNode 4.1.1\n\nI've attempted to uninstall and reinstall VSCode but that hasn't seemed to help at all. I still get the same attempted update behavior.\n"}, {'title': "Can't format HTML code", 'body': 'VsCode 0.10.4\n\nWhen I click on "Format Code" in the context menu, i get the following error:\n\n```\nMain Thread sent to worker the following message:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19\nworkbench.main.js:16 Object {type: "threadService", payload: Array[3]}payload: Array[3]type: "threadService"__proto__: Object\nworkbench.main.js:16 And the worker replied with an error:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19\nworkbench.main.js:16 Object {stack: "TypeError: Cannot read property \'startLineNumber\' …tor/common/worker/editorWorkerServer.js:14:31951)", message: "TypeError: Cannot read property \'startLineNumber\' of null"}message: "TypeError: Cannot read property \'startLineNumber\' of null"stack: "TypeError: Cannot read property \'startLineNumber\' of null↵    at Function.e.startPosition (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:4:24655)↵    at n.format (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/htmlWorker.js:8:13906)↵    at file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/html.js:4:10265↵    at t.Class.define.then (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/base/common/worker/workerServer.js:4:25244)↵    at e.t._worker (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:13:16843)↵    at e.formatDocument (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/html.js:4:10236)↵    at t.OneWorker (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:15:490)↵    at e.(anonymous function) [as formatDocument] (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:13:12479)↵    at t._handleRequest (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:14:31878)↵    at t.dispatch (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:14:31951)"__proto__: Object\nworkbench.main.js:90 TypeError: Cannot read property \'startLineNumber\' of null: TypeError: Cannot read property \'startLineNumber\' of null\n    at Function.e.startPosition (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:4:24655)\n    at n.format (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/htmlWorker.js:8:13906)\n    at file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/html.js:4:10265\n    at t.Class.define.then (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/base/common/worker/workerServer.js:4:25244)\n    at e.t._worker (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:13:16843)\n    at e.formatDocument (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/html.js:4:10236)\n    at t.OneWorker (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:15:490)\n    at e.(anonymous function) [as formatDocument] (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:13:12479)\n    at t._handleRequest (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:14:31878)\n    at t.dispatch (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:14:31951)e.onUnexpectedError @ workbench.main.js:90(anonymous function) @ workbench.main.js:90e.onUnexpectedError @ workbench.main.js:10u @ workbench.main.js:9e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19\nworkbench.main.js:63 TypeError: Cannot read property \'startLineNumber\' of null: TypeError: Cannot read property \'startLineNumber\' of null\n    at Function.e.startPosition (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:4:24655)\n    at n.format (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/htmlWorker.js:8:13906)\n    at file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/html.js:4:10265\n    at t.Class.define.then (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/base/common/worker/workerServer.js:4:25244)\n    at e.t._worker (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:13:16843)\n    at e.formatDocument (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/languages/html/common/html.js:4:10236)\n    at t.OneWorker (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:15:490)\n    at e.(anonymous function) [as formatDocument] (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:13:12479)\n    at t._handleRequest (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:14:31878)\n    at t.dispatch (file:///C:/Program%20Files%20(x86)/Microsoft%20VS%20Code/resources/app/out/vs/editor/common/worker/editorWorkerServer.js:14:31951)\n```\n'}, {'title': 'Visual Studio Code Icons and Text looks blurry', 'body': "![screenshot 20](https://cloud.githubusercontent.com/assets/9529847/11812730/d9e426da-a33d-11e5-94bf-d5aa826942c2.png)\n\nFirst time installing on fresh Windows 10 and this is how it looks, it doesn't stay like this, but it moves like some ripple effect or something how can I fix this?\n"}, {'title': 'breakpoint verification status not updated if program runs to termination w/o hitting a breakpoint', 'body': '-Make sure to use vscode with a fix for #1266.\n-Use the snippet from #1266 and set a breakpoint in line 5.\n-In your launch config use joh.ts as the entry point.\n-break the source map by changing the "version" attribute to "vers".\n-F5\nObserve: the breakpoint does not update to "invalid"\n-set another breakpoint in line 2\nObserve: both breakpoints show up as invalid\n'}], 'pageInfo': {'endCursor': 'Y3Vyc29yOnYyOpHOB0nzjw==', 'hasNextPage': True}}}}}